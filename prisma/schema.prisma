generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id           String   @id @default(uuid())
  name         String
  passwordHash String   @map("password_hash")
  avatarUrl    String?  @map("avatar_url")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  emailAddress String   @unique @map("email_address")
  orcid        String?  @map("orcid")
  phone        String?
  lattesUrl    String?  @map("lattes_url")
  role         UserRole @default(USER)

  news          News[]
  TeamMember    TeamMember[]
  Certification Certification[]

  @@map("users")
}

model News {
  id        String   @id @default(uuid())
  title     String
  content   String
  imageUrl  String?  @map("image_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @map("author_id")

  @@map("news")
}

model Team {
  id          String       @id @default(uuid())
  name        String
  type        String
  description String?
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  members     TeamMember[]

  @@map("teams")
}

model TeamMember {
  id          String   @id @default(uuid())
  role        String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  teamId      String   @map("team_id")
  team        Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("team_members")
}

model Certification {
  id               String @id @default(uuid())
  title            String
  description      String
  certificationUrl String @map("certification_url")

  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("certifications")
}
