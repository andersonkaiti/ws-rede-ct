import cc from"node:http";import{apiReference as nc}from"@scalar/express-api-reference";import ac from"cors";import Wo from"express";import In from"zod";var B=class extends Error{};var q=class extends Error{};var m=class extends Error{};var b=class extends Error{};var _=class extends Error{};import{ZodError as Rn}from"zod";var We=class extends Rn{};var Le=class{handle(e,r,t,i){return e instanceof We?t.status(400).json({message:"Validation error",error:In.treeifyError(e)}):e instanceof B?t.status(400).json({message:e.message}):e instanceof b?t.status(404).json({message:e.message}):e instanceof _?t.status(401).json({message:e.message}):e instanceof q?t.status(409).json({message:e.message}):e instanceof m?t.status(500).json({message:e.message}):t.status(500).json({message:"Internal server error"})}};function Lo(){return{errorHandler:new Le}}import{OpenAPIRegistry as cm,OpenApiGeneratorV3 as pm}from"@asteasolutions/zod-to-openapi";import{$Enums as Ho}from"@prisma/client";import p from"zod";import{extendZodWithOpenApi as wn}from"@asteasolutions/zod-to-openapi";import ge from"zod";var bn=1,En=6;wn(ge);var vt=ge.object({page:ge.coerce.number().min(1).default(bn),limit:ge.coerce.number().min(1).default(En),title:ge.string(),description:ge.string(),orderBy:ge.enum(["asc","desc"]).default("desc")}),He=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{title:t,description:i,limit:s,orderBy:n,page:a}=vt.parse(e.query),c=a*s-s,l=e.user.id,[C,P]=await Promise.all([this.certificationRepository.findByUserId({userId:l,pagination:{offset:c,limit:s},filter:{title:t,description:i,orderBy:n}}),this.certificationRepository.count({filter:{title:t,description:i,userId:l}})]),S=Math.max(Math.ceil(P/s),1);return r.status(200).json({page:a,totalPages:S,offset:c,limit:s,certifications:C})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as vn}from"@asteasolutions/zod-to-openapi";import Re from"zod";var Cn=1,Pn=7;vn(Re);var Ct=Re.object({page:Re.coerce.number().min(1).default(Cn),limit:Re.coerce.number().min(1).default(Pn),title:Re.string().optional(),content:Re.string().optional(),orderBy:Re.enum(["asc","desc"]).default("desc")}),Ze=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:i,content:s,orderBy:n,title:a}=Ct.parse(e.query),c=i*t-i,l=e.user.id,[C,P]=await Promise.all([this.newsRepository.findByAuthorId({authorId:l,pagination:{offset:c,limit:i},filter:{orderBy:n,title:a,content:s}}),this.newsRepository.count({filter:{authorId:l,content:s,title:a}})]),S=Math.ceil(P/i);r.status(200).json({page:t,totalPages:S,offset:c,limit:i,news:C})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Sn}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as jn}from"@prisma/client";import oe from"zod";var Tn=1,xn=6;Sn(oe);var Pt=oe.object({page:oe.coerce.number().min(1).default(Tn),limit:oe.coerce.number().min(1).default(xn),title:oe.string().optional(),description:oe.string().optional(),status:oe.enum(jn).default("PENDING"),orderBy:oe.enum(["asc","desc"]).default("desc")}),Ve=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{title:t,description:i,limit:s,orderBy:n,page:a,status:c}=Pt.parse(e.query),l=a*s-s,C=e.user.id,[P,S]=await Promise.all([this.pendencyRepository.findByUserId({userId:C,pagination:{offset:l,limit:s},filter:{title:t,description:i,orderBy:n,status:c}}),this.pendencyRepository.count({filter:{title:t,description:i,userId:C,status:c}})]),D=Math.max(Math.ceil(S/s),1);return r.status(200).json({page:a,totalPages:D,offset:l,limit:s,pendencies:P})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as An}from"@asteasolutions/zod-to-openapi";import Ke from"zod";An(Ke);var St=Ke.object({password:Ke.string(),email:Ke.email()}),Ge=class{constructor(e,r,t){this.userRepository=e;this.bcrypt=r;this.jwtService=t}async handle(e,r){try{let{email:t,password:i}=St.parse(e.body),s=await this.userRepository.findByEmail(t);if(!s)return r.status(401).json({message:"Usu\xE1rio n\xE3o existe."});if(!await this.bcrypt.compare({password:i,hashedPassword:s.passwordHash}))throw new _("Senha inv\xE1lida.");let{id:a,role:c}=s,l=this.jwtService.sign({id:a,role:c,email:t});return r.status(200).json({token:l})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Un}from"@asteasolutions/zod-to-openapi";import Te from"zod";var Ye=8;Un(Te);var jt=Te.object({name:Te.string("Nome \xE9 obrigat\xF3rio.").min(1,"Nome \xE9 obrigat\xF3rio."),emailAddress:Te.email("E-mail inv\xE1lido.").min(1,"E-mail \xE9 obrigat\xF3rio."),password:Te.string("A senha \xE9 obrigat\xF3ria.").min(Ye,`A senha deve ter pelo menos ${Ye} caracteres.`),confirmPassword:Te.string("A senha \xE9 obrigat\xF3ria.").min(Ye,`A senha deve ter pelo menos ${Ye} caracteres.`)}).refine(o=>o.password===o.confirmPassword,{message:"As senhas n\xE3o coincidem.",path:["confirmPassword"]}),$e=class{constructor(e,r){this.userRepository=e;this.bcrypt=r}async handle(e,r){try{let{emailAddress:t,name:i,password:s}=jt.parse(e.body);if(await this.userRepository.findByEmail(t))throw new q("Usu\xE1rio j\xE1 existe.");let a=await this.bcrypt.hash(s);return await this.userRepository.create({name:i,emailAddress:t,passwordHash:a}),r.status(201).json()}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Zo={method:"post",path:"/auth/sign-up",tags:["Authentication"],summary:"Create a new user",request:{body:{content:{"application/json":{schema:jt}}}},responses:{201:{description:"User created successfully",summary:"User Registration Successful",content:{"application/json":{schema:p.object({message:p.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},409:{description:"User already exists with this email",summary:"User Already Exists",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Vo={method:"post",path:"/auth/sign-in",tags:["Authentication"],summary:"Sign in",request:{body:{content:{"application/json":{schema:St}}}},responses:{200:{description:"Authentication successful, JWT token returned",summary:"Login Successful",content:{"application/json":{schema:p.object({token:p.string()})}}},400:{description:"Invalid credentials or input data",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},401:{description:"Invalid email or password",summary:"Authentication Failed",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Ko={method:"get",path:"/auth/user",tags:["Authentication"],summary:"Search for authenticated user",security:[{bearerAuth:[]}],responses:{200:{description:"Authenticated user information retrieved successfully",summary:"User Information Retrieved",content:{"application/json":{schema:p.object({name:p.string(),id:p.string(),avatarUrl:p.string().nullable(),createdAt:p.date(),updatedAt:p.date(),emailAddress:p.string(),orcid:p.string().nullable(),phone:p.string().nullable(),lattesUrl:p.string().nullable(),role:p.enum(Ho.UserRole)}).nullable()}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},404:{description:"User not found or not authenticated",summary:"User Not Found",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Go={method:"get",path:"/auth/user/news",tags:["Authentication"],summary:"List authenticated user news",security:[{bearerAuth:[]}],request:{query:Ct},responses:{200:{description:"Paginated list of authenticated user news retrieved successfully",summary:"User News Retrieved",content:{"application/json":{schema:p.object({page:p.number(),totalPages:p.number(),offset:p.number(),limit:p.number(),news:p.object({content:p.string(),id:p.string(),title:p.string(),createdAt:p.date(),updatedAt:p.date(),imageUrl:p.string().nullable()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Yo={method:"get",path:"/auth/admin",tags:["Authentication"],summary:"Verify admin access",security:[{bearerAuth:[]}],responses:{200:{description:"Admin access verified successfully",summary:"Admin Access Granted",content:{"application/json":{schema:p.object({success:p.boolean()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},$o={method:"get",path:"/auth/certifications",tags:["Authentication"],summary:"List all authenticated user's certifications",security:[{bearerAuth:[]}],request:{query:vt},responses:{200:{description:"Paginated list of authenticated user certifications retrieved successfully",summary:"User Certifications Retrieved",content:{"application/json":{schema:p.object({page:p.number(),totalPages:p.number(),offset:p.number(),limit:p.number(),certifications:p.object({description:p.string(),id:p.string(),title:p.string(),certificationUrl:p.string(),createdAt:p.date(),updatedAt:p.date(),userId:p.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Jo={method:"get",path:"/auth/pendencies",tags:["Authentication"],summary:"List all authenticated user's pendencies",security:[{bearerAuth:[]}],request:{query:Pt},responses:{200:{description:"Paginated list of authenticated user pendencies retrieved successfully",summary:"User Pendencies Retrieved",content:{"application/json":{schema:p.object({page:p.number(),totalPages:p.number(),offset:p.number(),limit:p.number(),pendencies:p.object({id:p.string(),title:p.string(),description:p.string(),status:p.enum(Ho.PendencyStatus),createdAt:p.date(),updatedAt:p.date(),userId:p.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}};import{$Enums as kn}from"@prisma/client";import f from"zod";import{extendZodWithOpenApi as Fn}from"@asteasolutions/zod-to-openapi";import Tt from"zod";Fn(Tt);var xt=Tt.object({id:Tt.string()}),Je=class{constructor(e,r){this.certificationRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=xt.parse({id:e.params.certification_id}),i=await this.certificationRepository.findById(t);if(!i)throw new b("A certifica\xE7\xE3o n\xE3o existe.");return await Promise.all([this.certificationRepository.deleteById(i.id),this.firebaseStorageService.deleteFile({fileUrl:i.certificationUrl})]),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Mn}from"@asteasolutions/zod-to-openapi";import At from"zod";Mn(At);var Ut=At.object({certificationId:At.uuid()}),Xe=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{certificationId:t}=Ut.parse({certificationId:e.params.certification_id}),i=await this.certificationRepository.findById(t);if(!i)throw new b("Certificado n\xE3o encontrado.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as qn}from"@asteasolutions/zod-to-openapi";import ie from"zod";var Nn=1,Bn=6;qn(ie);var Ft=ie.object({page:ie.coerce.number().min(1).default(Nn),limit:ie.coerce.number().min(1).default(Bn),title:ie.string().optional(),description:ie.string().optional(),userId:ie.uuid().optional(),orderBy:ie.enum(["asc","desc"]).default("desc")}),Qe=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{description:t,limit:i,orderBy:s,page:n,title:a,userId:c}=Ft.parse(e.query),l=n*i-i,[C,P]=await Promise.all([this.certificationRepository.find({pagination:{offset:l,limit:i},filter:{title:a,description:t,orderBy:s,userId:c}}),this.certificationRepository.count({filter:{title:a,description:t}})]),S=Math.max(Math.ceil(P/i),1);return r.status(200).json({page:n,totalPages:S,offset:l,limit:i,certifications:C})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as On}from"@asteasolutions/zod-to-openapi";import xe from"zod";var A={NEWS:"images/news",USER:"images/user",IN_MEMORIAM:"images/in-memoriam",PARTNER:"images/partners",CERTIFICATION:"documents/certifications",PENDENCY:"documents/pendencies"};On(xe);var rr=xe.object({userId:xe.uuid(),title:xe.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:xe.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:xe.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do certificado \xE9 obrigat\xF3rio")}),er=class{constructor(e,r,t){this.userRepository=e;this.certificationRepository=r;this.firebaseStorageService=t}async handle(e,r){try{let{userId:t,title:i,description:s,certification:n}=rr.parse({...e.body,userId:e.params.user_id,certification:e.file});if(!await this.userRepository.findById(t))throw new B("O usu\xE1rio n\xE3o existe.");let c=await this.firebaseStorageService.uploadFile({file:n,id:t,folder:A.CERTIFICATION});return await this.certificationRepository.register({userId:t,title:i,description:s,certificationUrl:c}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Dn}from"@asteasolutions/zod-to-openapi";import Ae from"zod";Dn(Ae);var or=Ae.object({id:Ae.uuid(),title:Ae.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:Ae.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:Ae.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do certificado \xE9 inv\xE1lido").optional()}),tr=class{constructor(e,r){this.certificationRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{certification:t,id:i,...s}=or.parse({...e.body,id:e.params.certification_id,certification:e.file}),n=await this.certificationRepository.findById(i);if(!n)throw new B("A certifica\xE7\xE3o n\xE3o existe");let a=n.certificationUrl;return t&&t.size>0&&(a=await this.firebaseStorageService.updateFile({file:t,id:n.userId,folder:A.CERTIFICATION,fileUrl:n.certificationUrl})),await this.certificationRepository.update({...s,id:i,certificationUrl:a}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Xo={method:"post",path:"/certifications/{user_id}",tags:["Certifications"],summary:"Register certification for user",security:[{bearerAuth:[]}],request:{params:rr.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:rr.omit({userId:!0})}}}},responses:{201:{description:"Certification registered successfully for the user",summary:"Certification Registered",content:{"application/json":{schema:f.object({message:f.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},Qo={method:"get",path:"/certifications",tags:["Certifications"],summary:"List certifications",security:[{bearerAuth:[]}],request:{query:Ft},responses:{200:{description:"Paginated list of certifications with user information retrieved successfully",summary:"Certifications Retrieved",content:{"application/json":{schema:f.object({page:f.number(),totalPages:f.number(),offset:f.number(),limit:f.number(),certifications:f.array(f.object({description:f.string(),userId:f.string(),title:f.string(),id:f.string(),createdAt:f.date(),updatedAt:f.date(),certificationUrl:f.url(),user:f.object({id:f.uuid(),name:f.string(),createdAt:f.date(),updatedAt:f.date(),avatarUrl:f.string().nullable(),emailAddress:f.email(),orcid:f.string().nullable(),phone:f.string().nullable(),lattesUrl:f.url().nullable(),role:f.enum(kn.UserRole)})}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},ei={method:"get",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Find certification by ID",security:[{bearerAuth:[]}],request:{params:Ut},responses:{200:{description:"Certification details retrieved successfully",summary:"Certification Retrieved",content:{"application/json":{schema:f.object({description:f.string(),userId:f.string(),title:f.string(),id:f.string(),createdAt:f.date(),updatedAt:f.date(),certificationUrl:f.url()}).nullable()}}},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},ri={method:"put",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Update certification",security:[{bearerAuth:[]}],request:{params:or.pick({id:!0}).transform(()=>({certification_id:""})),body:{content:{"multipart/form-data":{schema:or.omit({id:!0})}}}},responses:{204:{description:"Certification updated successfully",summary:"Certification Updated"},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},ti={method:"delete",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Delete certification",security:[{bearerAuth:[]}],request:{params:xt},responses:{204:{description:"Certification deleted successfully",summary:"Certification Deleted"},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}};import{$Enums as Dt}from"@prisma/client";import u from"zod";import{extendZodWithOpenApi as _n}from"@asteasolutions/zod-to-openapi";import H from"zod";_n(H);var Mt=H.object({code:H.string(),title:H.string(),description:H.string().optional(),notes:H.string().optional(),leaderId:H.uuid(),deputyLeaderId:H.uuid(),secretaryId:H.uuid(),memberIds:H.array(H.uuid())}),ir=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{code:t,title:i,description:s,notes:n,leaderId:a,deputyLeaderId:c,secretaryId:l,memberIds:C}=Mt.parse(e.body);if(await this.etpRepository.findByCode(t))throw new q("J\xE1 existe um ETP cadastrado com este c\xF3digo.");return await this.etpRepository.create({code:t,title:i,description:s,notes:n,leaderId:a,deputyLeaderId:c,secretaryId:l,memberIds:C}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as zn}from"@asteasolutions/zod-to-openapi";import qt from"zod";zn(qt);var Nt=qt.object({id:qt.uuid()}),sr=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{id:t}=Nt.parse({id:e.params.id});if(!await this.etpRepository.findById(t))throw new b("O ETP n\xE3o existe.");return await this.etpRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Wn}from"@asteasolutions/zod-to-openapi";import Bt from"zod";Wn(Bt);var ar=Bt.object({id:Bt.uuid()}),nr=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{id:t}=ar.parse({id:e.params.id}),i=await this.etpRepository.findById(t);if(!i)throw new b("O ETP n\xE3o existe.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ln}from"@asteasolutions/zod-to-openapi";import z from"zod";Ln(z);var Ot=z.object({id:z.uuid(),code:z.string().optional(),title:z.string().optional(),description:z.string().optional(),notes:z.string().optional(),leaderId:z.uuid().optional(),deputyLeaderId:z.uuid().optional(),secretaryId:z.uuid().optional(),memberIds:z.array(z.uuid()).optional()}),mr=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{id:t,code:i,title:s,description:n,notes:a,leaderId:c,deputyLeaderId:l,secretaryId:C,memberIds:P}=Ot.parse({id:e.params.id,...e.body});if(!await this.etpRepository.findById(t))throw new b("O ETP n\xE3o existe.");if(i){let D=await this.etpRepository.findByCode(i);if(D&&D.id!==t)throw new q("J\xE1 existe um ETP com este c\xF3digo.")}return await this.etpRepository.update({id:t,code:i,title:s,description:n,notes:a,leaderId:c,deputyLeaderId:l,secretaryId:C,memberIds:P}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Hn=1,Zn=9,cr=u.object({id:u.uuid(),registrationNumber:u.string(),mainEtps:u.string().nullable(),formations:u.string().nullable(),degrees:u.array(u.enum(Dt.Degree)),occupations:u.string(),seniority:u.enum(Dt.Seniority),institutions:u.string(),biography:u.string().nullable(),createdAt:u.date(),updatedAt:u.date(),user:u.object({id:u.uuid(),name:u.string(),emailAddress:u.string(),avatarUrl:u.string().nullable(),orcid:u.string().nullable(),phone:u.string().nullable(),lattesUrl:u.string().nullable(),role:u.enum(Dt.UserRole)})}),oi=u.object({id:u.uuid(),code:u.string(),title:u.string(),description:u.string().nullable(),notes:u.string().nullable(),createdAt:u.date(),updatedAt:u.date(),leader:u.object({id:u.uuid(),researcher:cr}).nullable(),deputyLeader:u.object({id:u.uuid(),researcher:cr}).nullable(),secretary:u.object({id:u.uuid(),researcher:cr}).nullable(),members:u.array(cr)}),ii={method:"post",path:"/etp",tags:["ETPs"],summary:"Create a new ETP with single leader, deputy leader, secretary and multiple members",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:Mt}}}},responses:{201:{description:"ETP created successfully",summary:"ETP Created"},400:{description:"Invalid input data or missing required fields",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:u.object({message:u.string()})}}},409:{description:"ETP with this code already exists",summary:"Conflict",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},si={method:"get",path:"/etp",tags:["ETPs"],summary:"List all ETPs with pagination and filters",request:{query:u.object({page:u.coerce.number().min(1).default(Hn).optional(),limit:u.coerce.number().min(1).default(Zn).optional(),code:u.string().optional(),title:u.string().optional(),description:u.string().optional(),notes:u.string().optional(),orderBy:u.enum(["asc","desc"]).optional()})},responses:{200:{description:"List of ETPs retrieved successfully with pagination",summary:"ETPs Retrieved",content:{"application/json":{schema:u.object({page:u.number(),totalPages:u.number(),offset:u.number(),limit:u.number(),etps:u.array(oi)})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},ni={method:"get",path:"/etp/{id}",tags:["ETPs"],summary:"Find ETP by ID",request:{params:ar},responses:{200:{description:"ETP details retrieved successfully",summary:"ETP Retrieved",content:{"application/json":{schema:oi}}},400:{description:"Invalid ETP ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"ETP not found with the provided ID",summary:"ETP Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},ai={method:"put",path:"/etp/{id}",tags:["ETPs"],summary:"Update ETP and manage user relationships (single leader, deputy leader, secretary, multiple members)",security:[{bearerAuth:[]}],request:{params:ar,body:{content:{"application/json":{schema:Ot.omit({id:!0})}}}},responses:{200:{description:"ETP updated successfully",summary:"ETP Updated"},400:{description:"Invalid input data or ETP ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:u.object({message:u.string()})}}},404:{description:"ETP not found with the provided ID",summary:"ETP Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},409:{description:"ETP with this code already exists",summary:"Conflict",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},mi={method:"delete",path:"/etp/{id}",tags:["ETPs"],summary:"Delete ETP",security:[{bearerAuth:[]}],request:{params:Nt},responses:{200:{description:"ETP deleted successfully",summary:"ETP Deleted"},400:{description:"Invalid ETP ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:u.object({message:u.string()})}}},404:{description:"ETP not found with the provided ID",summary:"ETP Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}};import{InMemoriamRole as ma}from"@prisma/client";import y from"zod";import{extendZodWithOpenApi as Vn}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as Kn}from"@prisma/client";import se from"zod";var pi=2,ci=1024,Gn=ci*ci,Yn=pi*Gn;Vn(se);var kt=se.object({name:se.string().min(1,"Nome \xE9 obrigat\xF3rio"),birthDate:se.coerce.date(),deathDate:se.coerce.date(),biography:se.string().optional(),photo:se.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=Yn,`A imagem deve ter no m\xE1ximo ${pi}MB.`).optional(),role:se.enum(Kn)}).refine(o=>o.deathDate>o.birthDate,{message:"Data de falecimento deve ser posterior \xE0 data de nascimento",path:["deathDate"]}),pr=class{constructor(e,r){this.inMemoriamRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{name:t,birthDate:i,deathDate:s,biography:n,role:a,photo:c}=kt.parse({...e.body,photo:e.file}),l=await this.inMemoriamRepository.create({name:t,birthDate:i,deathDate:s,biography:n??void 0,role:a}),C;return c&&(C=await this.firebaseStorageService.uploadFile({file:c,id:l.id,folder:A.IN_MEMORIAM}),await this.inMemoriamRepository.update({id:l.id,photoUrl:C})),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as $n}from"@asteasolutions/zod-to-openapi";import _t from"zod";$n(_t);var zt=_t.object({id:_t.uuid()}),dr=class{constructor(e,r){this.inMemoriamRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=zt.parse({id:e.params.id}),i=await this.inMemoriamRepository.findById(t);if(!i)throw new b("O in memoriam n\xE3o existe.");return i.photoUrl&&this.firebaseStorageService.deleteFile({fileUrl:i.photoUrl}),await this.inMemoriamRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Jn}from"@asteasolutions/zod-to-openapi";import Wt from"zod";Jn(Wt);var lr=Wt.object({id:Wt.uuid()}),ur=class{constructor(e){this.inMemoriamRepository=e}async handle(e,r){try{let{id:t}=lr.parse({id:e.params.id}),i=await this.inMemoriamRepository.findById(t);if(!i)throw new b("O in memoriam n\xE3o existe.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Xn}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as Qn}from"@prisma/client";import Lt from"zod";Xn(Lt);var Ht=Lt.object({role:Lt.enum(Qn)}),fr=class{constructor(e){this.inMemoriamRepository=e}async handle(e,r){try{let{role:t}=Ht.parse({role:e.params.role}),i=await this.inMemoriamRepository.findByRole(t);return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ea}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as ra}from"@prisma/client";import ne from"zod";var ta=1,oa=9;ea(ne);var Zt=ne.object({page:ne.coerce.number().min(1).default(ta),limit:ne.coerce.number().min(1).default(oa),name:ne.string().optional(),biography:ne.string().optional(),role:ne.enum(ra).optional(),orderBy:ne.enum(["asc","desc"]).optional()}),yr=class{constructor(e){this.inMemoriamRepository=e}async handle(e,r){try{let{page:t,limit:i,...s}=Zt.parse(e.query),n=i*t-i,[a,c]=await Promise.all([this.inMemoriamRepository.find({pagination:{offset:n,limit:i},filter:s}),this.inMemoriamRepository.count({filter:s})]),l=Math.max(Math.ceil(c/i),1);r.status(200).json({page:t,totalPages:l,offset:n,limit:i,inMemoriam:a})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ia}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as sa}from"@prisma/client";import Y from"zod";var ui=2,di=1024,na=di*di,aa=ui*na;ia(Y);var Vt=Y.object({id:Y.uuid(),name:Y.string().min(1,"Nome \xE9 obrigat\xF3rio").optional(),birthDate:Y.coerce.date().optional(),deathDate:Y.coerce.date().optional(),biography:Y.string().optional(),photo:Y.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=aa,`A imagem deve ter no m\xE1ximo ${ui}MB.`).optional(),role:Y.enum(sa).optional()}).refine(o=>o.birthDate&&o.deathDate?o.deathDate>o.birthDate:!0,{message:"Data de falecimento deve ser posterior \xE0 data de nascimento",path:["deathDate"]}),hr=class{constructor(e,r){this.inMemoriamRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t,name:i,birthDate:s,deathDate:n,biography:a,photo:c,role:l}=Vt.parse({id:e.params.id,...e.body,photo:e.file}),C=await this.inMemoriamRepository.findById(t);if(!C)throw new b("O registro in memoriam n\xE3o existe.");let P=C.photoUrl;return c&&(P=await this.firebaseStorageService.uploadFile({file:c,id:t,folder:A.IN_MEMORIAM})),await this.inMemoriamRepository.update({id:t,name:i,birthDate:s,deathDate:n,biography:a,photoUrl:P??void 0,role:l}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Kt=y.object({id:y.uuid(),name:y.string(),birthDate:y.date(),deathDate:y.date(),biography:y.string().nullable(),photoUrl:y.string().nullable(),role:y.enum(ma),createdAt:y.date(),updatedAt:y.date()}),li={method:"post",path:"/in-memoriam",tags:["In Memoriam"],summary:"Create a new in memoriam record with optional photo upload",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:kt}}}},responses:{201:{description:"In memoriam record created successfully",summary:"In Memoriam Created"},400:{description:"Invalid input data, missing required fields, or invalid photo format/size",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:y.object({message:y.string()})}}},409:{description:"In memoriam record with this name already exists",summary:"Conflict",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},fi={method:"get",path:"/in-memoriam",tags:["In Memoriam"],summary:"List all in memoriam records with pagination and filters",request:{query:Zt},responses:{200:{description:"List of in memoriam records retrieved successfully with pagination",summary:"In Memoriam Records Retrieved",content:{"application/json":{schema:y.object({page:y.number(),totalPages:y.number(),offset:y.number(),limit:y.number(),inMemoriam:y.array(Kt)})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},yi={method:"get",path:"/in-memoriam/{id}",tags:["In Memoriam"],summary:"Find in memoriam record by ID",request:{params:lr},responses:{200:{description:"In memoriam record details retrieved successfully",summary:"In Memoriam Record Retrieved",content:{"application/json":{schema:Kt}}},400:{description:"Invalid in memoriam record ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"In memoriam record not found with the provided ID",summary:"In Memoriam Record Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},hi={method:"put",path:"/in-memoriam/{id}",tags:["In Memoriam"],summary:"Update in memoriam record with optional photo upload",security:[{bearerAuth:[]}],request:{params:lr,body:{content:{"multipart/form-data":{schema:Vt.omit({id:!0})}}}},responses:{200:{description:"In memoriam record updated successfully",summary:"In Memoriam Record Updated"},400:{description:"Invalid input data, in memoriam record ID format, or invalid photo format/size",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:y.object({message:y.string()})}}},404:{description:"In memoriam record not found with the provided ID",summary:"In Memoriam Record Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},409:{description:"In memoriam record with this name already exists",summary:"Conflict",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},gi={method:"delete",path:"/in-memoriam/{id}",tags:["In Memoriam"],summary:"Delete in memoriam record",security:[{bearerAuth:[]}],request:{params:zt},responses:{200:{description:"In memoriam record deleted successfully",summary:"In Memoriam Record Deleted"},400:{description:"Invalid in memoriam record ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:y.object({message:y.string()})}}},404:{description:"In memoriam record not found with the provided ID",summary:"In Memoriam Record Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},vu={method:"get",path:"/in-memoriam/role/{role}",tags:["In Memoriam"],summary:"Find in memoriam records by role",request:{params:Ht},responses:{200:{description:"In memoriam records retrieved successfully by role",summary:"In Memoriam Records Retrieved by Role",content:{"application/json":{schema:y.array(Kt)}}},400:{description:"Invalid role parameter provided",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}};import h from"zod";import{extendZodWithOpenApi as ca}from"@asteasolutions/zod-to-openapi";import Oe from"zod";var pa=5,Ri=1024,da=Ri*Ri,ua=pa*da;ca(Oe);var Gt=Oe.object({title:Oe.string().min(1),content:Oe.string().min(1),image:Oe.any().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=ua,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),gr=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{title:t,content:i,image:s}=Gt.parse({...e.body,image:e.file}),n=e.user.id,a=await this.firebaseStorageService.uploadFile({file:s,folder:A.NEWS,id:n});await this.newsRepository.create({title:t,content:i,authorId:n,imageUrl:a}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as la}from"@asteasolutions/zod-to-openapi";import ae from"zod";var fa=1,ya=7;la(ae);var Ir=ae.object({page:ae.coerce.number().min(1).default(fa),limit:ae.coerce.number().min(1).default(ya),authorId:ae.string(),title:ae.string().optional(),content:ae.string().optional(),orderBy:ae.enum(["asc","desc"]).default("desc")}),Rr=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:i,authorId:s,content:n,orderBy:a,title:c}=Ir.parse(e.query),l=i*t-i,[C,P]=await Promise.all([this.newsRepository.findByAuthorId({authorId:s,pagination:{offset:l,limit:i},filter:{orderBy:a,title:c,content:n}}),this.newsRepository.count({filter:{authorId:s,content:n,title:c}})]),S=Math.max(Math.ceil(P/i),1);r.status(200).json({page:t,totalPages:S,offset:l,limit:i,news:C})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ha}from"@asteasolutions/zod-to-openapi";import Yt from"zod";ha(Yt);var $t=Yt.object({id:Yt.string()}),wr=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{id:t}=$t.parse(e.params),i=await this.newsRepository.findById(t);if(!i)throw new b("Not\xEDcia n\xE3o encontrada.");r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ga}from"@asteasolutions/zod-to-openapi";import me from"zod";var Ra=1,Ia=9;ga(me);var Jt=me.object({page:me.coerce.number().min(1).default(Ra),limit:me.coerce.number().min(1).default(Ia),title:me.string().optional(),content:me.string().optional(),authorId:me.string().optional(),orderBy:me.enum(["asc","desc"]).default("desc")}),br=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:i,authorId:s,content:n,orderBy:a,title:c}=Jt.parse(e.query),l=i*t-i,[C,P]=await Promise.all([this.newsRepository.find({pagination:{offset:l,limit:i},filter:{authorId:s,content:n,title:c,orderBy:a}}),this.newsRepository.count({filter:{title:c,content:n,authorId:s}})]),S=Math.max(Math.ceil(P/i),1);r.status(200).json({page:t,totalPages:S,offset:l,limit:i,news:C})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Ii={method:"post",path:"/news",tags:["News"],summary:"Create news",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Gt}}}},responses:{201:{description:"News article created successfully",summary:"News Created",content:{"application/json":{schema:h.object({message:h.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}},wi={method:"get",path:"/news",tags:["News"],summary:"List news",request:{query:Jt},responses:{200:{description:"Paginated list of news articles retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:h.object({page:h.number(),totalPages:h.number(),offset:h.number(),limit:h.number(),news:h.array(h.object({title:h.string(),content:h.string(),id:h.string(),createdAt:h.date(),updatedAt:h.date(),imageUrl:h.string().nullable()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}},bi={method:"get",path:"/news/{id}",tags:["News"],summary:"Find news by ID",request:{params:$t},responses:{200:{description:"News article details retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:h.object({page:h.number(),totalPages:h.number(),offset:h.number(),limit:h.number(),news:h.object({title:h.string(),content:h.string(),id:h.string(),createdAt:h.date(),updatedAt:h.date(),imageUrl:h.string().nullable()})})}}},400:{description:"Invalid news ID format",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},404:{description:"News article not found with the provided ID",summary:"News Not Found",content:{"application/json":{schema:h.object({message:h.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}},Ei={method:"get",path:"/news/author/{author_id}",tags:["News"],summary:"List news by author",request:{params:Ir.pick({authorId:!0}).transform(()=>({author_id:""})),query:Ir.omit({authorId:!0})},responses:{200:{description:"Paginated list of news articles by author retrieved successfully",summary:"Author News Retrieved",content:{"application/json":{schema:h.object({page:h.number(),totalPages:h.number(),offset:h.number(),limit:h.number(),news:h.array(h.object({title:h.string(),content:h.string(),id:h.string(),createdAt:h.date(),updatedAt:h.date(),imageUrl:h.string().nullable()}))})}}},400:{description:"Invalid author ID or query parameters",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},404:{description:"Author not found with the provided ID",summary:"Author Not Found",content:{"application/json":{schema:h.object({message:h.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}};import g from"zod";import{extendZodWithOpenApi as wa}from"@asteasolutions/zod-to-openapi";import K from"zod";var Ci=2,vi=1024,ba=vi*vi,Ea=Ci*ba;wa(K);var Xt=K.object({name:K.string().min(1,"Nome \xE9 obrigat\xF3rio"),logo:K.any().refine(o=>o==null||typeof o!="object"||typeof o.size!="number"?!1:o.size<=Ea,`A imagem deve ter no m\xE1ximo ${Ci}MB.`),websiteUrl:K.url("URL do site deve ser v\xE1lida").optional(),description:K.string().optional(),category:K.string().optional(),since:K.coerce.date(),isActive:K.preprocess(o=>o==="true",K.boolean().optional())}),Er=class{constructor(e,r){this.partnerRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{name:t,logo:i,websiteUrl:s,description:n,category:a,since:c,isActive:l}=Xt.parse({...e.body,logo:e.file}),C=await this.partnerRepository.create({name:t,websiteUrl:s,description:n,category:a,since:c,isActive:l}),P=await this.firebaseStorageService.uploadFile({file:i,id:C.id,folder:A.PARTNER});return await this.partnerRepository.update({id:C.id,logoUrl:P}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as va}from"@asteasolutions/zod-to-openapi";import Qt from"zod";va(Qt);var eo=Qt.object({id:Qt.uuid()}),vr=class{constructor(e,r){this.partnerRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=eo.parse({id:e.params.id}),i=await this.partnerRepository.findById(t);if(!i)throw new b("O parceiro n\xE3o existe.");return i.logoUrl&&this.firebaseStorageService.deleteFile({fileUrl:i.logoUrl}),await this.partnerRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ca}from"@asteasolutions/zod-to-openapi";import ro from"zod";Ca(ro);var Pr=ro.object({id:ro.uuid()}),Cr=class{constructor(e){this.partnerRepository=e}async handle(e,r){try{let{id:t}=Pr.parse({id:e.params.id}),i=await this.partnerRepository.findById(t);if(!i)throw new b("O parceiro n\xE3o existe.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Pa}from"@asteasolutions/zod-to-openapi";import $ from"zod";var Sa=1,ja=9;Pa($);var to=$.object({page:$.coerce.number().min(1).default(Sa),limit:$.coerce.number().min(1).default(ja),name:$.string().optional(),description:$.string().optional(),category:$.string().optional(),isActive:$.coerce.boolean().optional(),orderBy:$.enum(["asc","desc"]).optional()}),Sr=class{constructor(e){this.partnerRepository=e}async handle(e,r){try{let{page:t,limit:i,...s}=to.parse(e.query),n=i*t-i,[a,c]=await Promise.all([this.partnerRepository.find({pagination:{offset:n,limit:i},filter:s}),this.partnerRepository.count({filter:s})]),l=Math.max(Math.ceil(c/i),1);r.status(200).json({page:t,totalPages:l,offset:n,limit:i,partners:a})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ta}from"@asteasolutions/zod-to-openapi";import Z from"zod";var Si=2,Pi=1024,xa=Pi*Pi,Aa=Si*xa;Ta(Z);var oo=Z.object({id:Z.uuid(),name:Z.string().min(1,"Nome \xE9 obrigat\xF3rio").optional(),logo:Z.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=Aa,`A imagem deve ter no m\xE1ximo ${Si}MB.`).optional(),websiteUrl:Z.url("URL do site deve ser v\xE1lida").optional(),description:Z.string().optional(),category:Z.string().optional(),since:Z.coerce.date().optional(),isActive:Z.preprocess(o=>o==="true",Z.boolean().optional())}),jr=class{constructor(e,r){this.partnerRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t,name:i,logo:s,websiteUrl:n,description:a,category:c,since:l,isActive:C}=oo.parse({id:e.params.id,...e.body,logo:e.file}),P=await this.partnerRepository.findById(t);if(!P)throw new b("O parceiro n\xE3o existe.");let S=P.logoUrl;if(s&&(S=await this.firebaseStorageService.uploadFile({file:s,id:t,folder:"images/partners"})),!S)throw new m("Logo URL \xE9 obrigat\xF3rio");return await this.partnerRepository.update({id:t,name:i,logoUrl:S,websiteUrl:n,description:a,category:c,since:l,isActive:C}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var ji=g.object({id:g.uuid(),name:g.string(),logoUrl:g.string(),websiteUrl:g.string().nullable(),description:g.string().nullable(),category:g.string().nullable(),since:g.date(),isActive:g.boolean(),createdAt:g.date(),updatedAt:g.date()}),Ti={method:"post",path:"/partner",tags:["Partners"],summary:"Create a new partner with logo upload",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Xt}}}},responses:{201:{description:"Partner created successfully",summary:"Partner Created"},400:{description:"Invalid input data, missing required fields, or invalid logo format/size",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:g.object({message:g.string()})}}},409:{description:"Partner with this name already exists",summary:"Conflict",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},xi={method:"get",path:"/partner",tags:["Partners"],summary:"List all partners with pagination and filters",request:{query:to},responses:{200:{description:"List of partners retrieved successfully with pagination",summary:"Partners Retrieved",content:{"application/json":{schema:g.object({page:g.number(),totalPages:g.number(),offset:g.number(),limit:g.number(),partners:g.array(ji)})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},Ai={method:"get",path:"/partner/{id}",tags:["Partners"],summary:"Find partner by ID",request:{params:Pr},responses:{200:{description:"Partner details retrieved successfully",summary:"Partner Retrieved",content:{"application/json":{schema:ji}}},400:{description:"Invalid partner ID format",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},404:{description:"Partner not found with the provided ID",summary:"Partner Not Found",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},Ui={method:"put",path:"/partner/{id}",tags:["Partners"],summary:"Update partner with optional logo upload",security:[{bearerAuth:[]}],request:{params:Pr,body:{content:{"multipart/form-data":{schema:oo.omit({id:!0})}}}},responses:{200:{description:"Partner updated successfully",summary:"Partner Updated"},400:{description:"Invalid input data, partner ID format, or invalid logo format/size",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:g.object({message:g.string()})}}},404:{description:"Partner not found with the provided ID",summary:"Partner Not Found",content:{"application/json":{schema:g.object({message:g.string()})}}},409:{description:"Partner with this name already exists",summary:"Conflict",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},Fi={method:"delete",path:"/partner/{id}",tags:["Partners"],summary:"Delete partner",security:[{bearerAuth:[]}],request:{params:eo},responses:{200:{description:"Partner deleted successfully",summary:"Partner Deleted"},400:{description:"Invalid partner ID format",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:g.object({message:g.string()})}}},404:{description:"Partner not found with the provided ID",summary:"Partner Not Found",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}};import{$Enums as Mi}from"@prisma/client";import w from"zod";import{extendZodWithOpenApi as Ua}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Fa}from"@prisma/client";import ce from"zod";Ua(ce);var xr=ce.object({userId:ce.uuid(),title:ce.string().min(1),description:ce.string().optional(),status:ce.enum(Fa).default("PENDING"),dueDate:ce.coerce.date().optional(),document:ce.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do documento \xE9 obrigat\xF3rio")}),Tr=class{constructor(e,r,t){this.userRepository=e;this.pendencyRepository=r;this.firebaseStorageService=t}async handle(e,r){try{let{userId:t,title:i,description:s,status:n,dueDate:a,document:c}=xr.parse({...e.body,userId:e.params.user_id,document:e.file});if(!await this.userRepository.findById(t))throw new B("O usu\xE1rio n\xE3o existe.");let C=await this.firebaseStorageService.uploadFile({file:c,id:t,folder:A.PENDENCY});return await this.pendencyRepository.create({userId:t,title:i,description:s,status:n,dueDate:a,documentUrl:C}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ma}from"@asteasolutions/zod-to-openapi";import io from"zod";Ma(io);var so=io.object({id:io.uuid()}),Ar=class{constructor(e,r){this.pendencyRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=so.parse({id:e.params.pendency_id}),i=await this.pendencyRepository.findById(t);if(!i)throw new b("A pend\xEAncia n\xE3o existe.");return await Promise.all([this.pendencyRepository.deleteById(i.id),this.firebaseStorageService.deleteFile({fileUrl:i.documentUrl})]),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as qa}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Na}from"@prisma/client";import J from"zod";var Ba=1,Oa=6;qa(J);var no=J.object({page:J.coerce.number().min(1).default(Ba),limit:J.coerce.number().min(1).default(Oa),title:J.string().optional(),description:J.string().optional(),status:J.enum(Na).default("PENDING"),userId:J.uuid().optional(),orderBy:J.enum(["asc","desc"]).default("desc")}),Ur=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{description:t,limit:i,orderBy:s,page:n,title:a,status:c,userId:l}=no.parse(e.query),C=n*i-i,[P,S]=await Promise.all([this.pendencyRepository.find({pagination:{offset:C,limit:i},filter:{title:a,description:t,status:c,orderBy:s,userId:l}}),this.pendencyRepository.count({filter:{title:a,description:t,status:c,userId:l}})]),D=Math.max(Math.ceil(S/i),1);return r.status(200).json({page:n,totalPages:D,offset:C,limit:i,pendencies:P})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Da}from"@asteasolutions/zod-to-openapi";import ao from"zod";Da(ao);var mo=ao.object({pendencyId:ao.uuid()}),Fr=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{pendencyId:t}=mo.parse({pendencyId:e.params.pendency_id}),i=await this.pendencyRepository.findById(t);if(!i)throw new b("Pend\xEAncia n\xE3o encontrada.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ka}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as _a}from"@prisma/client";import pe from"zod";ka(pe);var qr=pe.object({id:pe.uuid(),title:pe.string().min(1),description:pe.string().optional(),status:pe.enum(_a),dueDate:pe.coerce.date().optional(),document:pe.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do documento \xE9 inv\xE1lido").optional()}),Mr=class{constructor(e,r){this.pendencyRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{document:t,id:i,...s}=qr.parse({...e.body,id:e.params.pendency_id,document:e.file}),n=await this.pendencyRepository.findById(i);if(!n)throw new B("A pend\xEAncia n\xE3o existe");let a=n.documentUrl;return t&&t.size>0&&(a=await this.firebaseStorageService.updateFile({file:t,id:n.userId,folder:A.PENDENCY,fileUrl:n.documentUrl})),await this.pendencyRepository.update({...s,id:i,documentUrl:a}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var qi={method:"post",path:"/pendency/{user_id}",tags:["Pendencies"],summary:"Create pendency for user",security:[{bearerAuth:[]}],request:{params:xr.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:xr.omit({userId:!0})}}}},responses:{201:{description:"Pendency created successfully for the user",summary:"Pendency Created",content:{"application/json":{schema:w.object({})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}},Ni={method:"get",path:"/pendency",tags:["Pendencies"],summary:"List pendencies",security:[{bearerAuth:[]}],request:{query:no},responses:{200:{description:"Paginated list of pendencies retrieved successfully",summary:"Pendencies Retrieved",content:{"application/json":{schema:w.object({page:w.number(),totalPages:w.number(),offset:w.number(),limit:w.number(),pendencies:w.array(w.object({id:w.string(),title:w.string(),description:w.string().nullable(),status:w.enum(Mi.PendencyStatus),dueDate:w.date().nullable(),documentUrl:w.string(),userId:w.string(),createdAt:w.date(),updatedAt:w.date()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}},Bi={method:"get",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Find pendency by ID",security:[{bearerAuth:[]}],request:{params:mo},responses:{200:{description:"Pendency details retrieved successfully",summary:"Pendency Retrieved",content:{"application/json":{schema:w.object({id:w.string(),title:w.string(),description:w.string().nullable(),status:w.enum(Mi.PendencyStatus),dueDate:w.date().nullable(),documentUrl:w.string(),userId:w.string(),createdAt:w.date(),updatedAt:w.date()}).nullable()}}},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:w.object({message:w.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}},Oi={method:"put",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Update pendency",security:[{bearerAuth:[]}],request:{params:qr.pick({id:!0}).transform(()=>({pendency_id:""})),body:{content:{"multipart/form-data":{schema:qr.omit({id:!0})}}}},responses:{204:{description:"Pendency updated successfully",summary:"Pendency Updated"},400:{description:"Invalid input data or pendency does not exist",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}},Di={method:"delete",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Delete pendency",security:[{bearerAuth:[]}],request:{params:so},responses:{204:{description:"Pendency deleted successfully",summary:"Pendency Deleted"},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:w.object({message:w.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}};import{$Enums as go}from"@prisma/client";import d from"zod";import{extendZodWithOpenApi as za}from"@asteasolutions/zod-to-openapi";import{Degree as Wa,Seniority as La}from"@prisma/client";import W from"zod";za(W);var co=W.object({registrationNumber:W.string(),mainEtps:W.string().optional(),formations:W.string().optional(),degrees:W.array(W.enum(Wa)),occupations:W.string(),seniority:W.enum(La),institutions:W.string(),biography:W.string().optional(),userId:W.string()}),Nr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{registrationNumber:t,mainEtps:i,formations:s,degrees:n,occupations:a,seniority:c,institutions:l,biography:C,userId:P}=co.parse(e.body);if(await this.researcherRepository.findByRegistrationNumber(t))throw new q("J\xE1 existe um pesquisador cadastrado com este n\xFAmero de registro.");if(await this.researcherRepository.findByUserId(P))throw new q("Usu\xE1rio j\xE1 possui um perfil de pesquisador.");return await this.researcherRepository.create({registrationNumber:t,mainEtps:i,formations:s,degrees:n,occupations:a,seniority:c,institutions:l,biography:C,userId:P}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ha}from"@asteasolutions/zod-to-openapi";import po from"zod";Ha(po);var uo=po.object({id:po.uuid()}),Br=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t}=uo.parse({id:e.params.id});if(!await this.researcherRepository.findById(t))throw new b("O pesquisador n\xE3o existe.");return await this.researcherRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Za}from"@asteasolutions/zod-to-openapi";import lo from"zod";Za(lo);var Dr=lo.object({id:lo.uuid()}),Or=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t}=Dr.parse({id:e.params.id}),i=await this.researcherRepository.findById(t);if(!i)throw new b("O pesquisador n\xE3o existe.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Va}from"@asteasolutions/zod-to-openapi";import fo from"zod";Va(fo);var yo=fo.object({userId:fo.uuid()}),kr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{userId:t}=yo.parse({userId:e.params.userId}),i=await this.researcherRepository.findByUserId(t);if(!i)throw new b("O pesquisador n\xE3o existe para este usu\xE1rio.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ka}from"@asteasolutions/zod-to-openapi";import{Degree as Ga,Seniority as Ya}from"@prisma/client";import L from"zod";Ka(L);var ho=L.object({id:L.uuid(),registrationNumber:L.string().optional(),mainEtps:L.string().optional(),formations:L.string().optional(),degrees:L.array(L.enum(Ga)).optional(),occupations:L.string().optional(),seniority:L.enum(Ya).optional(),institutions:L.string().optional(),biography:L.string().optional()}),_r=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t,registrationNumber:i,mainEtps:s,formations:n,degrees:a,occupations:c,seniority:l,institutions:C,biography:P}=ho.parse({id:e.params.id,...e.body}),S=await this.researcherRepository.findById(t);if(!S)throw new b("O pesquisador n\xE3o existe.");if(i&&i!==S.registrationNumber){let D=await this.researcherRepository.findByRegistrationNumber(i);if(D&&D.id!==t)throw new q("J\xE1 existe um pesquisador com este n\xFAmero de registro.")}return await this.researcherRepository.update({id:t,registrationNumber:i,mainEtps:s,formations:n,degrees:a,occupations:c,seniority:l,institutions:C,biography:P}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var $a=1,Ja=9,Ro=d.object({id:d.uuid(),registrationNumber:d.string(),mainEtps:d.string().nullable(),formations:d.string().nullable(),degrees:d.array(d.enum(go.Degree)),occupations:d.string(),seniority:d.enum(go.Seniority),institutions:d.string(),biography:d.string().nullable(),createdAt:d.date(),updatedAt:d.date(),userId:d.uuid(),user:d.object({id:d.uuid(),name:d.string(),emailAddress:d.string(),avatarUrl:d.string().nullable(),orcid:d.string().nullable(),phone:d.string().nullable(),lattesUrl:d.string().nullable(),role:d.enum(go.UserRole)})}),ki={method:"post",path:"/researcher",tags:["Researchers"],summary:"Create a new researcher profile",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:co}}}},responses:{201:{description:"Researcher profile created successfully",summary:"Researcher Created",content:{"application/json":{schema:d.object({message:d.string()})}}},400:{description:"Invalid input data or missing required fields",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:d.object({message:d.string()})}}},409:{description:"Researcher with this registration number already exists or user already has a researcher profile",summary:"Conflict",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},_i={method:"get",path:"/researcher",tags:["Researchers"],summary:"List all researchers with pagination and filters",request:{query:d.object({page:d.coerce.number().min(1).default($a).optional(),limit:d.coerce.number().min(1).default(Ja).optional(),userId:d.string().optional(),registrationNumber:d.string().optional(),name:d.string().optional(),emailAddress:d.string().optional(),mainEtps:d.string().optional(),formations:d.string().optional(),occupations:d.string().optional(),institutions:d.string().optional(),biography:d.string().optional(),orderBy:d.enum(["asc","desc"]).optional()})},responses:{200:{description:"List of researchers retrieved successfully with pagination",summary:"Researchers Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),researchers:d.array(Ro)})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},zi={method:"get",path:"/researcher/{id}",tags:["Researchers"],summary:"Find researcher by ID",request:{params:Dr},responses:{200:{description:"Researcher details retrieved successfully",summary:"Researcher Retrieved",content:{"application/json":{schema:Ro}}},400:{description:"Invalid researcher ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Wi={method:"get",path:"/researcher/user/{userId}",tags:["Researchers"],summary:"Find researcher by user ID",request:{params:yo},responses:{200:{description:"Researcher details retrieved successfully",summary:"Researcher Retrieved",content:{"application/json":{schema:Ro}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Researcher not found for this user",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Li={method:"put",path:"/researcher/{id}",tags:["Researchers"],summary:"Update researcher profile",security:[{bearerAuth:[]}],request:{params:Dr,body:{content:{"application/json":{schema:ho.omit({id:!0})}}}},responses:{200:{description:"Researcher profile updated successfully",summary:"Researcher Updated",content:{"application/json":{schema:d.object({message:d.string()})}}},400:{description:"Invalid input data or researcher ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:d.object({message:d.string()})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},409:{description:"Researcher with this registration number already exists",summary:"Conflict",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Hi={method:"delete",path:"/researcher/{id}",tags:["Researchers"],summary:"Delete researcher profile",security:[{bearerAuth:[]}],request:{params:uo},responses:{200:{description:"Researcher profile deleted successfully",summary:"Researcher Deleted"},400:{description:"Invalid researcher ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:d.object({message:d.string()})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}};import R from"zod";import{extendZodWithOpenApi as Xa}from"@asteasolutions/zod-to-openapi";import X from"zod";Xa(X);var Io=X.object({name:X.string().min(1),type:X.string().min(1),members:X.array(X.object({role:X.string().min(1),user:X.object({id:X.string()})}))}),zr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{name:t,type:i,members:s}=Io.parse(e.body);await this.teamRepository.create({name:t,type:i,members:s}),r.status(201).json()}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Qa}from"@asteasolutions/zod-to-openapi";import{z as wo}from"zod";Qa(wo);var De=wo.object({id:wo.uuid()}),Wr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=De.parse(e.params),i=await this.teamRepository.findById(t);r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as em}from"@asteasolutions/zod-to-openapi";import{z as Lr}from"zod";em(Lr);var bo=Lr.object({type:Lr.string(),name:Lr.string().optional()}),Hr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{type:t,name:i}=bo.parse({type:e.params.type,name:e.query.name}),s=await this.teamRepository.findByType({type:t,filter:{name:i}});r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as rm}from"@asteasolutions/zod-to-openapi";import{z as G}from"zod";rm(G);var Eo=G.object({id:G.uuid(),name:G.string().min(1),members:G.array(G.object({role:G.string(),id:G.uuid().optional(),user:G.object({id:G.uuid()})}))}),Zr=class{constructor(e,r){this.teamRepository=e;this.teamMemberRepository=r}async handle(e,r){try{let{id:t,members:i,name:s}=Eo.parse({id:e.params.id,...e.body}),n=await this.teamMemberRepository.findByTeamId(t),a=i.map(l=>l.id),c=n.filter(l=>!a.includes(l.id)).map(l=>l.id);await this.teamMemberRepository.deleteMany(c),await this.teamMemberRepository.updateMany({teamId:t,members:i}),await this.teamRepository.update({id:t,name:s}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Zi={method:"post",path:"/team",tags:["Teams"],summary:"Create team",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:Io}}}},responses:{201:{description:"Team created successfully",summary:"Team Created",content:{"application/json":{schema:R.object({message:R.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},Vi={method:"put",path:"/team/{id}",tags:["Teams"],summary:"Update team",security:[{bearerAuth:[]}],request:{params:De,body:{content:{"application/json":{schema:Eo}}}},responses:{204:{description:"Team updated successfully",summary:"Team Updated"},400:{description:"Invalid input data or team ID format",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:R.object({message:R.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},Ki={method:"delete",path:"/team/{id}",tags:["Teams"],summary:"Delete team",security:[{bearerAuth:[]}],request:{params:De},responses:{204:{description:"Team deleted successfully",summary:"Team Deleted"},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:R.object({message:R.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},Gi={method:"get",path:"/team/id/{id}",tags:["Teams"],summary:"Find team by ID",request:{params:De},responses:{200:{description:"Team details retrieved successfully",summary:"Team Retrieved",content:{"application/json":{schema:R.object({type:R.string(),name:R.string(),id:R.string(),createdAt:R.date(),updatedAt:R.date(),description:R.string().nullable()})}}},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:R.object({message:R.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},Yi={method:"get",path:"/team/type/{type}",tags:["Teams"],summary:"Find teams by type",request:{params:bo.pick({type:!0})},responses:{200:{description:"List of teams by type retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:R.array(R.object({type:R.string(),name:R.string(),id:R.string(),createdAt:R.date(),updatedAt:R.date(),description:R.string().nullable()})).nullable()}}},400:{description:"Invalid team type parameter",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},$i={method:"get",path:"/team",tags:["Teams"],summary:"List teams",responses:{200:{description:"Complete list of teams retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:R.array(R.object({type:R.string(),name:R.string(),id:R.string(),createdAt:R.date(),updatedAt:R.date(),description:R.string().nullable()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}};import{$Enums as Qi}from"@prisma/client";import v from"zod";import{extendZodWithOpenApi as tm}from"@asteasolutions/zod-to-openapi";import vo from"zod";tm(vo);var Co=vo.object({id:vo.string()}),Vr=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{id:t}=Co.parse({id:e.params.id}),i=await this.userRepository.findById(t);if(!i)throw new b("O usu\xE1rio n\xE3o existe.");let s=e.user.id;if(i.id!==s)throw new _("Voc\xEA n\xE3o tem permiss\xE3o para deletar o usu\xE1rio");return await this.userRepository.deleteById(i.id),r.sendStatus(204)}catch(t){if(console.log(t),t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as om}from"@asteasolutions/zod-to-openapi";import{z as Po}from"zod";om(Po);var So=Po.object({id:Po.string().min(1,"id do usu\xE1rio n\xE3o fornecido.")}),Kr=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{id:t}=So.parse(e.params),i=await this.userRepository.findById(t);if(!i)throw new b("Usu\xE1rio n\xE3o encontrado");r.status(200).json(i)}catch(t){if(console.log(t),t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as im}from"@asteasolutions/zod-to-openapi";import Ie from"zod";var Xi=2,Ji=1024,sm=Ji*Ji,nm=Xi*sm,am=/^\d{4}-\d{4}-\d{4}-\d{4}$/,Gr=/^[^0-9]*$/,mm=/^\(?\d{2}\)?[\s-]?\d{4,5}-?\d{4}$/;im(Ie);var jo=Ie.object({name:Ie.string().optional(),lattesUrl:Ie.string().optional(),orcid:Ie.string().transform(o=>o.trim()).transform(o=>Gr.test(o)?"":o).refine(o=>Gr.test(o)||am.test(o),{message:"ORCID inv\xE1lido. Deve estar no formato 0000-0000-0000-0000"}),phone:Ie.string().transform(o=>Gr.test(o)?"":o).refine(o=>Gr.test(o)||mm.test(o),{message:"Telefone inv\xE1lido. Deve estar no formato (99) 99999-9999"}),avatarImage:Ie.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=nm,`A imagem deve ter no m\xE1ximo ${Xi}MB.`).optional()}),Yr=class{constructor(e,r){this.userRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{avatarImage:t,...i}=jo.parse({...e.body,avatarImage:e.file}),s=e.user.id,n=await this.userRepository.findById(s);if(!n)throw new B("O usu\xE1rio n\xE3o existe");let a=n.avatarUrl;return t&&(n.avatarUrl?a=await this.firebaseStorageService.updateFile({file:t,id:s,folder:A.USER,fileUrl:n.avatarUrl}):a=await this.firebaseStorageService.uploadFile({file:t,id:s,folder:A.USER})),await this.userRepository.update({...i,id:s,avatarUrl:a||void 0}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var es={method:"get",path:"/users/{id}",tags:["Users"],summary:"Find user by ID",request:{params:So},responses:{200:{description:"User details retrieved successfully",summary:"User Retrieved",content:{"application/json":{schema:v.object({id:v.string(),name:v.string(),createdAt:v.date(),updatedAt:v.date(),role:v.enum(Qi.UserRole),lattesUrl:v.string().nullable(),orcid:v.string().nullable(),phone:v.string().nullable(),avatarUrl:v.url().nullable(),emailAddress:v.email()})}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:v.object({errors:v.record(v.string(),v.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:v.object({message:v.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:v.object({message:v.string()})}}}}},rs={method:"put",path:"/users",tags:["Users"],summary:"Update authenticated user",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:jo}}}},responses:{200:{description:"User profile updated successfully",summary:"User Updated",content:{"application/json":{schema:v.object({message:v.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:v.object({errors:v.record(v.string(),v.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:v.object({message:v.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:v.object({message:v.string()})}}}}},ts={method:"delete",path:"/users",tags:["Users"],summary:"Delete authenticated user",security:[{bearerAuth:[]}],request:{params:Co},responses:{200:{description:"User account deleted successfully",summary:"User Deleted",content:{"application/json":{schema:v.object({message:v.string()})}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:v.object({errors:v.record(v.string(),v.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:v.object({message:v.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:v.object({message:v.string()})}}}}},os={method:"get",path:"/users",tags:["Users"],summary:"List users",responses:{200:{description:"Complete list of users retrieved successfully",summary:"Users Retrieved",content:{"application/json":{schema:v.array(v.object({id:v.string(),name:v.string(),createdAt:v.date(),updatedAt:v.date(),role:v.enum(Qi.UserRole),lattesUrl:v.url().nullable(),orcid:v.string().nullable(),phone:v.string().nullable(),avatarUrl:v.string().nullable(),emailAddress:v.email()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:v.object({message:v.string()})}}}}};var E=new cm;E.registerComponent("securitySchemes","bearerAuth",{type:"http",scheme:"bearer",bearerFormat:"JWT"});E.registerPath(Zo);E.registerPath(Vo);E.registerPath(Ko);E.registerPath(Go);E.registerPath($o);E.registerPath(Jo);E.registerPath(Yo);E.registerPath(es);E.registerPath(rs);E.registerPath(ts);E.registerPath(os);E.registerPath(Zi);E.registerPath(Vi);E.registerPath(Ki);E.registerPath(Gi);E.registerPath(Yi);E.registerPath($i);E.registerPath(Ii);E.registerPath(wi);E.registerPath(bi);E.registerPath(Ei);E.registerPath(Xo);E.registerPath(Qo);E.registerPath(ei);E.registerPath(ri);E.registerPath(ti);E.registerPath(qi);E.registerPath(Ni);E.registerPath(Bi);E.registerPath(Oi);E.registerPath(Di);E.registerPath(li);E.registerPath(fi);E.registerPath(yi);E.registerPath(hi);E.registerPath(gi);E.registerPath(ki);E.registerPath(_i);E.registerPath(zi);E.registerPath(Wi);E.registerPath(Li);E.registerPath(Hi);E.registerPath(ii);E.registerPath(si);E.registerPath(ni);E.registerPath(ai);E.registerPath(mi);E.registerPath(Ti);E.registerPath(xi);E.registerPath(Ai);E.registerPath(Ui);E.registerPath(Fi);var dm=new pm(E.definitions),is=dm.generateDocument({openapi:"3.0.0",info:{title:"API da Rede CT",version:"1.0.0",description:"API com valida\xE7\xE3o Zod"}});import{Router as Rm}from"express";import{extendZodWithOpenApi as um}from"@asteasolutions/zod-to-openapi";import To from"zod";um(To);var lm=To.object({authenticatedUserId:To.uuid()}),$r=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{authenticatedUserId:t}=lm.parse({authenticatedUserId:e.user.id}),i=await this.userRepository.findById(t);if(!i)throw new b("Usu\xE1rio n\xE3o encontrado.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{PrismaClient as fm}from"@prisma/client";var j=new fm({log:["warn","error"]});var Jr=class{constructor(e){this.prisma=e}async register({userId:e,title:r,description:t,certificationUrl:i}){await this.prisma.certification.create({data:{title:r,description:t,certificationUrl:i,user:{connect:{id:e}}}})}async find({pagination:{limit:e,offset:r},filter:{description:t,orderBy:i,title:s,userId:n}}){let a={userId:n},c=[];return s&&c.push({title:{contains:s,mode:"insensitive"}}),t&&c.push({description:{contains:t,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.certification.findMany({where:a,include:{user:{omit:{passwordHash:!0}}},skip:r,take:e,orderBy:{updatedAt:i}})}async findById(e){return await this.prisma.certification.findFirst({where:{id:e}})}async findByUserId({pagination:{limit:e,offset:r},filter:{description:t,orderBy:i,title:s},userId:n}){let a={userId:n},c=[];return s&&c.push({title:{contains:s,mode:"insensitive"}}),t&&c.push({description:{contains:t,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.certification.findMany({where:a,include:{user:{omit:{passwordHash:!0}}},skip:r,take:e,orderBy:{updatedAt:i}})}async update({id:e,...r}){await this.prisma.certification.update({where:{id:e},data:r})}async deleteById(e){await this.prisma.certification.delete({where:{id:e}})}async count({filter:{description:e,title:r,userId:t}}){let i={};r&&(i.title={contains:r,mode:"insensitive"});let s=[];return e&&s.push({description:{contains:e,mode:"insensitive"}}),t&&s.push({userId:t}),s.length>0&&(i.OR=s),await this.prisma.certification.count({where:i})}};function de(){return new Jr(j)}var Xr=class{constructor(e){this.prisma=e}async create({authorId:e,...r}){return await this.prisma.news.create({data:{...r,author:{connect:{id:e}}}})}async find({pagination:{offset:e,limit:r},filter:{authorId:t,content:i,title:s,orderBy:n}}){let a={};t&&(a.authorId={contains:t,mode:"insensitive"});let c=[];return s&&c.push({title:{contains:s,mode:"insensitive"}}),i&&c.push({content:{contains:i,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.news.findMany({where:a,omit:{authorId:!0},include:{author:!0},orderBy:{updatedAt:n},skip:e,take:r})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},omit:{authorId:!0},include:{author:!0}})}async findByAuthorId({authorId:e,pagination:{offset:r,limit:t},filter:{orderBy:i="desc",content:s,title:n}}){let a={authorId:e},c=[];return n&&c.push({title:{contains:n,mode:"insensitive"}}),s&&c.push({content:{contains:s,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.news.findMany({omit:{authorId:!0},where:a,orderBy:{updatedAt:i},skip:r,take:t})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,imageUrl:e.imageUrl}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{authorId:e,content:r,title:t}}){let i={};e&&(i.authorId={contains:e,mode:"insensitive"});let s=[];return t&&s.push({title:{contains:t,mode:"insensitive"}}),r&&s.push({content:{contains:r,mode:"insensitive"}}),s.length>0&&(i.OR=s),await this.prisma.news.count({where:i})}};function Q(){return new Xr(j)}var Qr=class{constructor(e){this.prisma=e}async create(e){await this.prisma.pendency.create({data:e})}async find({filter:{description:e,orderBy:r,title:t,status:i,userId:s},pagination:{limit:n,offset:a}}){let c={userId:s,AND:{status:{equals:i}}};e&&(c.description={contains:e,mode:"insensitive"});let l=[];return t&&l.push({title:{contains:t,mode:"insensitive"}}),l.length>0&&(c.OR=l),await this.prisma.pendency.findMany({where:c,orderBy:{updatedAt:r},include:{user:{omit:{passwordHash:!0}}},skip:a,take:n})}async findById(e){return await this.prisma.pendency.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId({filter:{description:e,orderBy:r,title:t,status:i},pagination:{limit:s,offset:n},userId:a}){let c={userId:a,AND:{status:{equals:i}}},l=[];return e&&l.push({description:{contains:e,mode:"insensitive"}}),t&&l.push({title:{contains:t,mode:"insensitive"}}),l.length>0&&(c.OR=l),await this.prisma.pendency.findMany({where:c,orderBy:{updatedAt:r},skip:n,take:s})}async update({id:e,...r}){await this.prisma.pendency.update({where:{id:e},data:r})}async deleteById(e){await this.prisma.pendency.delete({where:{id:e}})}async count({filter:{description:e,title:r,status:t,userId:i}}){let s={userId:i},n=[];return e&&n.push({description:{contains:e,mode:"insensitive"}}),r&&n.push({title:{contains:r,mode:"insensitive"}}),t&&n.push({status:{equals:t}}),n.length>0&&(s.OR=n),await this.prisma.pendency.count({where:s})}};function ue(){return new Qr(j)}var et=class{constructor(e){this.prisma=e}async create(e){await this.prisma.user.create({data:e})}async update(e){await this.prisma.user.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.user.delete({where:{id:e}})}async find(){return await this.prisma.user.findMany({omit:{passwordHash:!0}})}async findByEmail(e){return await this.prisma.user.findFirst({where:{emailAddress:e}})}async findById(e){return await this.prisma.user.findFirst({where:{id:e},omit:{passwordHash:!0}})}};function N(){return new et(j)}import{compare as ym,hash as hm}from"bcryptjs";var rt=class{constructor(e,r){this.hashFn=e;this.compareFn=r}async hash(e){return await this.hashFn(e,6)}async compare({password:e,hashedPassword:r}){return await this.compareFn(e,r)}};function xo(){return new rt(hm,ym)}import ss from"jsonwebtoken";import k from"zod";var gm=k.object({JWT_SECRET:k.string(),FIREBASE_BUCKET:k.string(),FIREBASE_CLIENT_EMAIL:k.string(),FIREBASE_PRIVATE_KEY:k.string(),FIREBASE_PROJECT_ID:k.string(),FIREBASE_TYPE:k.string(),FIREBASE_PRIVATE_KEY_ID:k.string(),FIREBASE_CLIENT_ID:k.string(),FIREBASE_AUTH_URI:k.string(),FIREBASE_TOKEN_URI:k.string(),FIREBASE_AUTH_PROVIDER_X509_CERT_URL:k.string(),FIREBASE_CLIENT_X509_CERT_URL:k.string()}),F=gm.parse(process.env);var tt=class{constructor(e,r){this.signFn=e;this.verifyFn=r}sign(e){try{return this.signFn(e,F.JWT_SECRET,{expiresIn:"3d",subject:e.id})}catch{return null}}verify(e){try{return this.verifyFn(e,F.JWT_SECRET)}catch{return null}}};function ot(){return new tt(ss.sign,ss.verify)}function ns(){return{signUpController:new $e(N(),xo())}}function as(){return{signInController:new Ge(N(),xo(),ot())}}function ms(){return{findAuthenticatedUserController:new $r(N())}}function cs(){return{findAuthenticatedUserController:new Ze(Q())}}function ps(){return{findAuthenticatedUserCertificationsController:new He(de())}}function ds(){return{findAuthenticatedUserPendenciesController:new Ve(ue())}}var it=class{constructor(e){this.jwtService=e}authenticated(e,r,t){let i=e.headers.authorization;if(!i?.startsWith("Bearer "))return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let s=i.split(" ")[1];if(!s)return r.status(401).json({message:"Token n\xE3o fornecido."});try{let n=this.jwtService.verify(s);if(!n)return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});e.user=n,t()}catch(n){if(console.log(n),n instanceof Error)return r.status(401).json({message:n.message})}}isAdmin(e,r,t){let i=e.headers.authorization;if(!i?.startsWith("Bearer "))return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let s=i.split(" ")[1];if(!s)return r.status(401).json({message:"Token n\xE3o fornecido."});try{let n=this.jwtService.verify(s);if(!n)return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});if(n.role!=="ADMIN")return r.status(401).json({message:"\xC9 necess\xE1rio ter permiss\xF5es de administrador."});t()}catch(n){if(console.log(n),n instanceof Error)return r.status(401).json({message:n.message})}}};function T(){return{authMiddleware:new it(ot())}}var ee=Rm(),{authMiddleware:ke}=T();ee.post("/sign-up",async(o,e)=>{let{signUpController:r}=ns();await r.handle(o,e)});ee.post("/sign-in",async(o,e)=>{let{signInController:r}=as();await r.handle(o,e)});ee.get("/user",(o,e,r)=>{ke.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserController:r}=ms();await r.handle(o,e)});ee.get("/user/news",(o,e,r)=>{ke.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserController:r}=cs();await r.handle(o,e)});ee.get("/admin",(o,e,r)=>{ke.isAdmin(o,e,r)},(o,e)=>{try{e.status(200).json({success:!0})}catch(r){r instanceof Error&&e.status(500).json({message:r.message})}});ee.get("/certifications",(o,e,r)=>{ke.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserCertificationsController:r}=ps();await r.handle(o,e)});ee.get("/pendencies",(o,e,r)=>{ke.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserPendenciesController:r}=ds();await r.handle(o,e)});import{Router as Cm}from"express";import{getStorage as wm}from"firebase-admin/storage";import{config as Im}from"dotenv";import us from"firebase-admin";Im();var Ao=us.initializeApp({credential:us.credential.cert({clientEmail:F.FIREBASE_CLIENT_EMAIL,privateKey:F.FIREBASE_PRIVATE_KEY,projectId:F.FIREBASE_PROJECT_ID,type:F.FIREBASE_TYPE,privateKeyId:F.FIREBASE_PRIVATE_KEY_ID,clientId:F.FIREBASE_CLIENT_ID,authUri:F.FIREBASE_AUTH_URI,tokenUri:F.FIREBASE_TOKEN_URI,authProviderX509CertUrl:F.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:F.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:F.FIREBASE_BUCKET});Ao.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var bm=wm(Ao),ls=bm.bucket(F.FIREBASE_BUCKET);import{randomUUID as Em}from"node:crypto";var vm=/https:\/\/storage\.googleapis\.com\/[^/]+\/(.+)$/,st=class{constructor(e){this.bucket=e}async uploadFile({file:e,folder:r,id:t}){let i=`${Em()}-${e?.originalname}`,s=this.bucket.file(`${r}/${t}/${i}`);return await new Promise((n,a)=>{let c=s.createWriteStream({metadata:{contentType:e?.mimetype}});c.on("error",l=>{a(l)}),c.on("finish",async()=>{try{await s.makePublic();let l=`https://storage.googleapis.com/${this.bucket.name}/${s.name}`;n(l)}catch(l){a(l)}}),c.end(e.buffer)})}async updateFile({file:e,id:r,fileUrl:t,folder:i}){try{let s=this.getPath(t);if(!s)throw new Error("Arquivo n\xE3o encontrado.");let[n,a]=await Promise.all([this.bucket.file(s).delete(),this.uploadFile({file:e,id:r,folder:i})]);return a}catch{throw new Error("Erro ao atualizar o arquivo.")}}async deleteFile({fileUrl:e}){let r=this.getPath(e);if(!r)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(r).delete()}catch{throw new Error("Erro ao deletar o arquivo.")}}getPath(e){let r=e.match(vm);return r?r[1]:null}};function x(){return new st(ls)}function fs(){return{registerCertificationController:new er(N(),de(),x())}}function ys(){return{findCertificationsController:new Qe(de())}}function hs(){return{findCertificationByIdController:new Xe(de())}}function gs(){return{updateCertificationController:new tr(de(),x())}}function Rs(){return{deleteCertificationController:new Je(de(),x())}}import Is from"multer";var M=Is({storage:Is.memoryStorage()});var we=Cm(),{authMiddleware:_e}=T();we.post("/:user_id",(o,e,r)=>{_e.isAdmin(o,e,r)},M.single("certification"),async(o,e)=>{let{registerCertificationController:r}=fs();await r.handle(o,e)});we.get("/",(o,e,r)=>{_e.isAdmin(o,e,r)},async(o,e)=>{let{findCertificationsController:r}=ys();await r.handle(o,e)});we.get("/:certification_id",(o,e,r)=>{_e.isAdmin(o,e,r)},async(o,e)=>{let{findCertificationByIdController:r}=hs();await r.handle(o,e)});we.put("/:certification_id",(o,e,r)=>{_e.isAdmin(o,e,r)},M.single("certification"),async(o,e)=>{let{updateCertificationController:r}=gs();await r.handle(o,e)});we.delete("/:certification_id",(o,e,r)=>{_e.isAdmin(o,e,r)},async(o,e)=>{let{deleteCertificationController:r}=Rs();await r.handle(o,e)});import{Router as xm}from"express";import{extendZodWithOpenApi as Pm}from"@asteasolutions/zod-to-openapi";import re from"zod";var Sm=1,jm=9;Pm(re);var Tm=re.object({page:re.coerce.number().min(1).default(Sm),limit:re.coerce.number().min(1).default(jm),code:re.string().optional(),title:re.string().optional(),description:re.string().optional(),notes:re.string().optional(),orderBy:re.enum(["asc","desc"]).optional()}),nt=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{page:t,limit:i,...s}=Tm.parse(e.query),n=i*t-i,[a,c]=await Promise.all([this.etpRepository.find({pagination:{offset:n,limit:i},filter:s}),this.etpRepository.count({filter:s})]),l=Math.max(Math.ceil(c/i),1);r.status(200).json({page:t,totalPages:l,offset:n,limit:i,etps:a})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var at=class{constructor(e){this.prisma=e}async create(e){let{leaderId:r,deputyLeaderId:t,secretaryId:i,memberIds:s,...n}=e;return await this.prisma.$transaction(async a=>{let c=await a.eTP.create({data:n});return await a.eTPLeader.create({data:{etpId:c.id,researcherId:r}}),await a.eTPDeputy.create({data:{etpId:c.id,researcherId:t}}),await a.eTPSecretary.create({data:{etpId:c.id,researcherId:i}}),await a.eTP.update({where:{id:c.id},data:{members:{connect:s.map(l=>({id:l}))}}}),c})}async update(e){let{leaderId:r,deputyLeaderId:t,secretaryId:i,memberIds:s,...n}=e;return await this.prisma.$transaction(async a=>{let c=await a.eTP.update({where:{id:e.id},data:n});return await this.updateLeader(a,e.id,r),await this.updateDeputyLeader(a,e.id,t),await this.updateSecretary(a,e.id,i),await this.updateMembers(a,e.id,s),c})}async updateLeader(e,r,t){t!==void 0&&(await e.eTPLeader.deleteMany({where:{etpId:r}}),t&&await e.eTPLeader.create({data:{etpId:r,researcherId:t}}))}async updateDeputyLeader(e,r,t){t!==void 0&&(await e.eTPDeputy.deleteMany({where:{etpId:r}}),t&&await e.eTPDeputy.create({data:{etpId:r,researcherId:t}}))}async updateSecretary(e,r,t){t!==void 0&&(await e.eTPSecretary.deleteMany({where:{etpId:r}}),t&&await e.eTPSecretary.create({data:{etpId:r,researcherId:t}}))}async updateMembers(e,r,t){t!==void 0&&await e.eTP.update({where:{id:r},data:{members:{set:t.map(i=>({id:i}))}}})}async deleteById(e){await this.prisma.eTP.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{code:t,title:i,description:s,notes:n,orderBy:a}}){let c={};return t&&(c.code={contains:t,mode:"insensitive"}),i&&(c.title={contains:i,mode:"insensitive"}),s&&(c.description={contains:s,mode:"insensitive"}),n&&(c.notes={contains:n,mode:"insensitive"}),await this.prisma.eTP.findMany({where:c,include:{leader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},deputyLeader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},secretary:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},members:{include:{user:{omit:{passwordHash:!0}}}}},orderBy:a?{updatedAt:a}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.eTP.findFirst({where:{id:e},include:{leader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},deputyLeader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},secretary:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},members:{include:{user:{omit:{passwordHash:!0}}}}}})}async findByCode(e){return await this.prisma.eTP.findFirst({where:{code:e},include:{leader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},deputyLeader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},secretary:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},members:{include:{user:{omit:{passwordHash:!0}}}}}})}async count({filter:{code:e,title:r,description:t,notes:i}}){let s={};return e&&(s.code={contains:e,mode:"insensitive"}),r&&(s.title={contains:r,mode:"insensitive"}),t&&(s.description={contains:t,mode:"insensitive"}),i&&(s.notes={contains:i,mode:"insensitive"}),await this.prisma.eTP.count({where:s})}};function Ue(){return new at(j)}function ws(){return{createETPController:new ir(Ue())}}function bs(){return{findETPsController:new nt(Ue())}}function Es(){return{findETPByIdController:new nr(Ue())}}function vs(){return{updateETPController:new mr(Ue())}}function Cs(){return{deleteETPController:new sr(Ue())}}var be=xm(),{authMiddleware:Uo}=T();be.post("/",(o,e,r)=>{Uo.authenticated(o,e,r)},async(o,e)=>{let{createETPController:r}=ws();await r.handle(o,e)});be.get("/",async(o,e)=>{let{findETPsController:r}=bs();await r.handle(o,e)});be.get("/:id",async(o,e)=>{let{findETPByIdController:r}=Es();await r.handle(o,e)});be.put("/:id",(o,e,r)=>{Uo.authenticated(o,e,r)},async(o,e)=>{let{updateETPController:r}=vs();await r.handle(o,e)});be.delete("/:id",(o,e,r)=>{Uo.authenticated(o,e,r)},async(o,e)=>{let{deleteETPController:r}=Cs();await r.handle(o,e)});import{Router as Am}from"express";var mt=class{constructor(e){this.prisma=e}async create(e){return await this.prisma.inMemoriam.create({data:e})}async update(e){return await this.prisma.inMemoriam.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.inMemoriam.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{name:t,biography:i,role:s,orderBy:n}}){let a={};return t&&(a.name={contains:t,mode:"insensitive"}),i&&(a.biography={contains:i,mode:"insensitive"}),s&&(a.role=s),await this.prisma.inMemoriam.findMany({where:a,orderBy:n?{updatedAt:n}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.inMemoriam.findFirst({where:{id:e}})}async findByRole(e){return await this.prisma.inMemoriam.findMany({where:{role:e}})}async count({filter:{name:e,biography:r,role:t}}){let i={};return e&&(i.name={contains:e,mode:"insensitive"}),r&&(i.biography={contains:r,mode:"insensitive"}),t&&(i.role=t),await this.prisma.inMemoriam.count({where:i})}};function Ee(){return new mt(j)}function Ps(){return{createInMemoriamController:new pr(Ee(),x())}}function Ss(){return{findInMemoriamsController:new yr(Ee())}}function js(){return{findInMemoriamByIdController:new ur(Ee())}}function Ts(){return{findInMemoriamByRoleController:new fr(Ee())}}function xs(){return{updateInMemoriamController:new hr(Ee(),x())}}function As(){return{deleteInMemoriamController:new dr(Ee(),x())}}var le=Am(),{authMiddleware:Fo}=T();le.post("/",(o,e,r)=>{Fo.authenticated(o,e,r)},M.single("photo"),async(o,e)=>{let{createInMemoriamController:r}=Ps();await r.handle(o,e)});le.get("/",async(o,e)=>{let{findInMemoriamsController:r}=Ss();await r.handle(o,e)});le.get("/:id",async(o,e)=>{let{findInMemoriamByIdController:r}=js();await r.handle(o,e)});le.get("/role/:role",async(o,e)=>{let{findInMemoriamByRoleController:r}=Ts();await r.handle(o,e)});le.put("/:id",(o,e,r)=>{Fo.authenticated(o,e,r)},M.single("photo"),async(o,e)=>{let{updateInMemoriamController:r}=xs();await r.handle(o,e)});le.delete("/:id",(o,e,r)=>{Fo.authenticated(o,e,r)},async(o,e)=>{let{deleteInMemoriamController:r}=As();await r.handle(o,e)});import{Router as Um}from"express";var Mo=Um();Mo.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as km}from"express";import{extendZodWithOpenApi as Fm}from"@asteasolutions/zod-to-openapi";import qo from"zod";Fm(qo);var Mm=qo.object({id:qo.string()}),ct=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=Mm.parse(e.params),i=e.user.id,s=await this.newsRepository.findById(t);if(!s)throw new b("Not\xEDcia n\xE3o encontrada.");if(s.author.id!==i)throw new _("Sem permiss\xE3o.");await Promise.all([this.newsRepository.delete(t),this.firebaseStorageService.deleteFile({fileUrl:s.imageUrl})]),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as qm}from"@asteasolutions/zod-to-openapi";import Fe from"zod";var Nm=5,Us=1024,Bm=Us*Us,Om=Nm*Bm;qm(Fe);var Dm=Fe.object({id:Fe.string(),title:Fe.string().min(1),content:Fe.string().min(1),image:Fe.any().optional().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=Om,"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB.")}),pt=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t,title:i,content:s,image:n}=Dm.parse({id:e.params.id,image:e.file,...e.body}),a=await this.newsRepository.findById(t);if(!a)throw new b("Not\xEDcia n\xE3o encontrada.");let c=e.user.id;if(a.author.id!==c)throw new _("Sem permiss\xE3o.");let l=a.imageUrl||"";n&&a.imageUrl&&(l=await this.firebaseStorageService.updateFile({file:n,folder:A.NEWS,id:t,fileUrl:a.imageUrl}));let C=await this.newsRepository.update({id:t,title:i,content:s,imageUrl:l});r.status(200).json(C)}catch(t){if(t instanceof Error)throw new m(t.message)}}};function Fs(){return{createNewsController:new gr(Q(),x())}}function Ms(){return{findAllNewsController:new br(Q())}}function qs(){return{findNewsByIdController:new wr(Q())}}function Ns(){return{findNewsByAuthorIdController:new Rr(Q())}}function Bs(){return{updateNewsController:new pt(Q(),x())}}function Os(){return{deleteNewsController:new ct(Q(),x())}}var fe=km(),{authMiddleware:No}=T();fe.post("/",(o,e,r)=>{No.authenticated(o,e,r)},M.single("image"),async(o,e)=>{let{createNewsController:r}=Fs();await r.handle(o,e)});fe.get("/",async(o,e)=>{let{findAllNewsController:r}=Ms();await r.handle(o,e)});fe.get("/:id",async(o,e)=>{let{findNewsByIdController:r}=qs();await r.handle(o,e)});fe.get("/author/:authorId",async(o,e)=>{let{findNewsByAuthorIdController:r}=Ns();await r.handle(o,e)});fe.put("/:id",(o,e,r)=>{No.authenticated(o,e,r)},M.single("image"),async(o,e)=>{let{updateNewsController:r}=Bs();await r.handle(o,e)});fe.delete("/:id",(o,e,r)=>{No.authenticated(o,e,r)},async(o,e)=>{let{deleteNewsController:r}=Os();await r.handle(o,e)});import{Router as _m}from"express";var dt=class{constructor(e){this.prisma=e}async create(e){return await this.prisma.partner.create({data:e})}async update(e){return await this.prisma.partner.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.partner.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{name:t,description:i,category:s,isActive:n,orderBy:a}}){let c={};return t&&(c.name={contains:t,mode:"insensitive"}),i&&(c.description={contains:i,mode:"insensitive"}),s&&(c.category={contains:s,mode:"insensitive"}),n!==void 0&&(c.isActive=n),await this.prisma.partner.findMany({where:c,orderBy:a?{updatedAt:a}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.partner.findFirst({where:{id:e}})}async count({filter:{name:e,description:r,category:t,isActive:i}}){let s={};return e&&(s.name={contains:e,mode:"insensitive"}),r&&(s.description={contains:r,mode:"insensitive"}),t&&(s.category={contains:t,mode:"insensitive"}),i!==void 0&&(s.isActive=i),await this.prisma.partner.count({where:s})}};function Me(){return new dt(j)}function Ds(){return{createPartnerController:new Er(Me(),x())}}function ks(){return{findPartnersController:new Sr(Me())}}function _s(){return{findPartnerByIdController:new Cr(Me())}}function zs(){return{updatePartnerController:new jr(Me(),x())}}function Ws(){return{deletePartnerController:new vr(Me(),x())}}var ve=_m(),{authMiddleware:Bo}=T();ve.post("/",(o,e,r)=>{Bo.authenticated(o,e,r)},M.single("logo"),async(o,e)=>{let{createPartnerController:r}=Ds();await r.handle(o,e)});ve.get("/",async(o,e)=>{let{findPartnersController:r}=ks();await r.handle(o,e)});ve.get("/:id",async(o,e)=>{let{findPartnerByIdController:r}=_s();await r.handle(o,e)});ve.put("/:id",(o,e,r)=>{Bo.authenticated(o,e,r)},M.single("logo"),async(o,e)=>{let{updatePartnerController:r}=zs();await r.handle(o,e)});ve.delete("/:id",(o,e,r)=>{Bo.authenticated(o,e,r)},async(o,e)=>{let{deletePartnerController:r}=Ws();await r.handle(o,e)});import{Router as zm}from"express";function Ls(){return{createPendencyController:new Tr(N(),ue(),x())}}function Hs(){return{findPendenciesController:new Ur(ue())}}function Zs(){return{findPendencyByIdController:new Fr(ue())}}function Vs(){return{updatePendencyController:new Mr(ue(),x())}}function Ks(){return{deletePendencyController:new Ar(ue(),x())}}var Ce=zm(),{authMiddleware:ze}=T();Ce.post("/:user_id",(o,e,r)=>{ze.isAdmin(o,e,r)},M.single("document"),async(o,e)=>{let{createPendencyController:r}=Ls();await r.handle(o,e)});Ce.get("/",(o,e,r)=>{ze.isAdmin(o,e,r)},async(o,e)=>{let{findPendenciesController:r}=Hs();await r.handle(o,e)});Ce.get("/:pendency_id",(o,e,r)=>{ze.isAdmin(o,e,r)},async(o,e)=>{let{findPendencyByIdController:r}=Zs();await r.handle(o,e)});Ce.put("/:pendency_id",(o,e,r)=>{ze.isAdmin(o,e,r)},M.single("document"),async(o,e)=>{let{updatePendencyController:r}=Vs();await r.handle(o,e)});Ce.delete("/:pendency_id",(o,e,r)=>{ze.isAdmin(o,e,r)},async(o,e)=>{let{deletePendencyController:r}=Ks();await r.handle(o,e)});import{Router as Vm}from"express";import{extendZodWithOpenApi as Wm}from"@asteasolutions/zod-to-openapi";import O from"zod";var Lm=1,Hm=9;Wm(O);var Zm=O.object({page:O.coerce.number().min(1).default(Lm),limit:O.coerce.number().min(1).default(Hm),userId:O.string().optional(),registrationNumber:O.string().optional(),name:O.string().optional(),emailAddress:O.string().optional(),mainEtps:O.string().optional(),formations:O.string().optional(),occupations:O.string().optional(),institutions:O.string().optional(),biography:O.string().optional(),orderBy:O.enum(["asc","desc"]).optional()}),ut=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{page:t,limit:i,...s}=Zm.parse(e.query),n=i*t-i,[a,c]=await Promise.all([this.researcherRepository.find({pagination:{offset:n,limit:i},filter:{userName:s.name,...s}}),this.researcherRepository.count({filter:{userName:s.name,...s}})]),l=Math.max(Math.ceil(c/i),1);r.status(200).json({page:t,totalPages:l,offset:n,limit:i,researchers:a})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var lt=class{constructor(e){this.prisma=e}async create(e){return await this.prisma.researcher.create({data:e})}async update(e){return await this.prisma.researcher.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.researcher.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{biography:t,degrees:i,formations:s,institutions:n,mainEtps:a,occupations:c,orderBy:l,registrationNumber:C,seniority:P,userId:S,userName:D}}){let V={OR:D?[{user:{name:{contains:D,mode:"insensitive"}}}]:void 0};return C&&V.OR?.push({registrationNumber:{contains:C,mode:"insensitive"}}),a&&(V.mainEtps={contains:a,mode:"insensitive"}),s&&(V.formations={contains:s,mode:"insensitive"}),i&&i.length>0&&(V.degrees={hasSome:i}),c&&(V.occupations={contains:c,mode:"insensitive"}),P&&(V.seniority=P),n&&(V.institutions={contains:n,mode:"insensitive"}),t&&(V.biography={contains:t,mode:"insensitive"}),S&&(V.userId={equals:S}),await this.prisma.researcher.findMany({where:V,omit:{userId:!0},include:{user:{omit:{passwordHash:!0}}},orderBy:l?{updatedAt:l}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.researcher.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId(e){return await this.prisma.researcher.findFirst({where:{userId:e},include:{user:{omit:{passwordHash:!0}}}})}async findByRegistrationNumber(e){return await this.prisma.researcher.findFirst({where:{registrationNumber:e},include:{user:{omit:{passwordHash:!0}}}})}async count({filter:{biography:e,degrees:r,formations:t,institutions:i,mainEtps:s,occupations:n,registrationNumber:a,seniority:c,userId:l,userName:C}}){let P={OR:C?[{user:{name:{contains:C,mode:"insensitive"}}}]:void 0};return a&&P.OR?.push({registrationNumber:{contains:a,mode:"insensitive"}}),s&&(P.mainEtps={contains:s,mode:"insensitive"}),t&&(P.formations={contains:t,mode:"insensitive"}),r&&r.length>0&&(P.degrees={hasSome:r}),n&&(P.occupations={contains:n,mode:"insensitive"}),c&&(P.seniority=c),i&&(P.institutions={contains:i,mode:"insensitive"}),e&&(P.biography={contains:e,mode:"insensitive"}),l&&(P.userId={equals:l}),await this.prisma.researcher.count({where:P})}};function Pe(){return new lt(j)}function Gs(){return{createResearcherController:new Nr(Pe())}}function Ys(){return{findResearchersController:new ut(Pe())}}function $s(){return{findResearcherByIdController:new Or(Pe())}}function Js(){return{findResearcherByUserIdController:new kr(Pe())}}function Xs(){return{updateResearcherController:new _r(Pe())}}function Qs(){return{deleteResearcherController:new Br(Pe())}}var ye=Vm(),{authMiddleware:Oo}=T();ye.post("/",(o,e,r)=>{Oo.authenticated(o,e,r)},async(o,e)=>{let{createResearcherController:r}=Gs();await r.handle(o,e)});ye.get("/",async(o,e)=>{let{findResearchersController:r}=Ys();await r.handle(o,e)});ye.get("/:id",async(o,e)=>{let{findResearcherByIdController:r}=$s();await r.handle(o,e)});ye.get("/user/:userId",async(o,e)=>{let{findResearcherByUserIdController:r}=Js();await r.handle(o,e)});ye.put("/:id",(o,e,r)=>{Oo.authenticated(o,e,r)},async(o,e)=>{let{updateResearcherController:r}=Xs();await r.handle(o,e)});ye.delete("/:id",(o,e,r)=>{Oo.authenticated(o,e,r)},async(o,e)=>{let{deleteResearcherController:r}=Qs();await r.handle(o,e)});import{Router as rc}from"express";import{extendZodWithOpenApi as Km}from"@asteasolutions/zod-to-openapi";import Se from"zod";Km(Se);var Gm=Se.object({teamId:Se.uuid(),member:Se.object({userId:Se.uuid(),role:Se.string(),description:Se.string()})}),ft=class{constructor(e,r){this.teamMemberRepository=e;this.userRepository=r}async handle(e,r){try{let{teamId:t,member:{userId:i,...s}}=Gm.parse({...e.body,teamId:e.params.teamId});if(!await this.userRepository.findById(i))throw new b("O usu\xE1rio n\xE3o existe.");let a=await this.teamMemberRepository.create({...s,userId:i,teamId:t});r.status(201).json(a)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ym}from"@asteasolutions/zod-to-openapi";import{z as Do}from"zod";Ym(Do);var $m=Do.object({id:Do.uuid()}),yt=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{id:t}=$m.parse(e.params);await this.teamMemberRepository.delete(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Jm}from"@asteasolutions/zod-to-openapi";import{z as ko}from"zod";Jm(ko);var Xm=ko.object({id:ko.uuid()}),ht=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{id:t}=Xm.parse(e.params),i=await this.teamMemberRepository.findById(t);if(!i)throw new b("Membro n\xE3o encontrado.");r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Qm}from"@asteasolutions/zod-to-openapi";import{z as qe}from"zod";Qm(qe);var ec=qe.object({id:qe.uuid(),role:qe.string(),userId:qe.string(),description:qe.string()}),gt=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let t=ec.parse(e.body),i=await this.teamMemberRepository.update(t);r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var te=class{constructor(e){this.prisma=e}async findById(e){return await this.prisma.teamMember.findFirst({where:{id:e}})}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{teamId:e}})}async create({description:e,role:r,teamId:t,userId:i}){return await this.prisma.teamMember.create({data:{role:r,description:e,teamId:t,userId:i}})}async update({id:e,...r}){return await this.prisma.teamMember.update({where:{id:e},data:r})}async updateMany({members:e,teamId:r}){await Promise.all(e.map(async({user:t,role:i})=>{let s=await this.prisma.teamMember.findFirst({where:{teamId:r,userId:t.id},include:{user:!0}});s?await this.prisma.teamMember.update({where:{id:s.id},data:{role:i}}):await this.prisma.teamMember.create({data:{teamId:r,userId:t.id,role:i}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async r=>{await this.prisma.teamMember.delete({where:{id:r}})}))}};function en(){return{createTeamMemberController:new ft(new te(j),N())}}function rn(){return{findTeamMemberController:new ht(new te(j))}}function tn(){return{updateTeamMemberController:new gt(new te(j))}}function on(){return{deleteTeamMemberController:new yt(new te(j))}}var Ne=rc(),{authMiddleware:Rt}=T();Ne.post("/:teamId/member",(o,e,r)=>{Rt.isAdmin(o,e,r)},async(o,e)=>{let{createTeamMemberController:r}=en();await r.handle(o,e)});Ne.get("/member/:id",(o,e,r)=>{Rt.isAdmin(o,e,r)},async(o,e)=>{let{findTeamMemberController:r}=rn();await r.handle(o,e)});Ne.put("/member/:id",(o,e,r)=>{Rt.isAdmin(o,e,r)},async(o,e)=>{let{updateTeamMemberController:r}=tn();await r.handle(o,e)});Ne.delete("/member/:id",(o,e,r)=>{Rt.isAdmin(o,e,r)},async(o,e)=>{let{deleteTeamMemberController:r}=on();await r.handle(o,e)});import{Router as ic}from"express";import{extendZodWithOpenApi as tc}from"@asteasolutions/zod-to-openapi";import{z as _o}from"zod";tc(_o);var oc=_o.object({id:_o.uuid()}),It=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=oc.parse(e.params);await this.teamRepository.delete(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var wt=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let t=await this.teamRepository.findAll();return r.status(200).json(t)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var bt=class{constructor(e){this.prisma=e}async create({members:e,name:r,type:t}){return await this.prisma.team.create({data:{name:r,type:t,members:{create:e.map(({role:i,user:s})=>({role:i,user:{connect:{id:s.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:r}}){let t={type:e};return r&&(t.name={contains:r,mode:"insensitive"}),await this.prisma.team.findMany({where:t,include:{members:{include:{user:!0}}}})}async update({id:e,name:r}){return await this.prisma.team.update({where:{id:e},data:{name:r}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function je(){return new bt(j)}function sn(){return new te(j)}function nn(){return{findTeamsController:new wt(je())}}function an(){return{findTeamByIdController:new Wr(je())}}function mn(){return{findTeamByTypeController:new Hr(je())}}function cn(){return{createTeamController:new zr(je())}}function pn(){return{updateTeamController:new Zr(je(),sn())}}function dn(){return{deleteTeamController:new It(je())}}var he=ic(),{authMiddleware:zo}=T();he.get("/",async(o,e)=>{let{findTeamsController:r}=nn();await r.handle(o,e)});he.get("/id/:id",async(o,e)=>{let{findTeamByIdController:r}=an();await r.handle(o,e)});he.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:r}=mn();await r.handle(o,e)});he.post("/",(o,e,r)=>{zo.isAdmin(o,e,r)},async(o,e)=>{let{createTeamController:r}=cn();await r.handle(o,e)});he.put("/:id",(o,e,r)=>{zo.isAdmin(o,e,r)},async(o,e)=>{let{updateTeamController:r}=pn();await r.handle(o,e)});he.delete("/:id",(o,e,r)=>{zo.isAdmin(o,e,r)},async(o,e)=>{let{deleteTeamController:r}=dn();await r.handle(o,e)});import{Router as sc}from"express";var Et=class{constructor(e){this.userRepository=e}async handle(e,r){try{let t=await this.userRepository.find();r.status(200).json(t)}catch(t){if(t instanceof Error)throw new m(t.message)}}};function un(){return{updateUserController:new Yr(N(),x())}}function ln(){return{deleteUserController:new Vr(N())}}function fn(){return{findUsersController:new Et(N())}}function yn(){return{findUserController:new Kr(N())}}var Be=sc(),{authMiddleware:hn}=T();Be.get("/:id",async(o,e)=>{let{findUserController:r}=yn();await r.handle(o,e)});Be.put("/",(o,e,r)=>{hn.authenticated(o,e,r)},M.single("avatarImage"),async(o,e)=>{let{updateUserController:r}=un();await r.handle(o,e)});Be.delete("/:id",(o,e,r)=>{hn.authenticated(o,e,r)},async(o,e)=>{let{deleteUserController:r}=ln();await r.handle(o,e)});Be.get("/",async(o,e)=>{let{findUsersController:r}=fn();await r.handle(o,e)});var U=Wo(),mc={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};U.use(ac(mc));U.use(Wo.json());U.use(Wo.urlencoded({extended:!1}));U.use("/docs",nc({content:is,theme:"kepler"}));U.use("/",Mo);U.use("/auth",ee);U.use("/user",Be);U.use("/news",fe);U.use("/team",he);U.use("/team",Ne);U.use("/certification",we);U.use("/pendency",Ce);U.use("/researcher",ye);U.use("/in-memoriam",le);U.use("/etp",be);U.use("/partner",ve);U.use((o,e,r,t)=>{let{errorHandler:i}=Lo();i.handle(o,e,r,t)});var pc=cc.createServer(U),gn=4e3;pc.listen(gn,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${gn}.`)});
