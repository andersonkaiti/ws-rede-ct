import hm from"node:http";import{apiReference as lm}from"@scalar/express-api-reference";import ym from"cors";import Eo from"express";import Ds from"zod";var q=class extends Error{};var F=class extends Error{};var m=class extends Error{};var E=class extends Error{};var k=class extends Error{};import{ZodError as Bs}from"zod";var Be=class extends Bs{};var De=class{handle(e,r,t,i){return e instanceof Be?t.status(400).json({message:"Validation error",error:Ds.treeifyError(e)}):e instanceof q?t.status(400).json({message:e.message}):e instanceof E?t.status(404).json({message:e.message}):e instanceof k?t.status(401).json({message:e.message}):e instanceof F?t.status(409).json({message:e.message}):e instanceof m?t.status(500).json({message:e.message}):t.status(500).json({message:"Internal server error"})}};function vo(){return{errorHandler:new De}}import{OpenAPIRegistry as ga,OpenApiGeneratorV3 as Ra}from"@asteasolutions/zod-to-openapi";import{$Enums as Co}from"@prisma/client";import p from"zod";import{extendZodWithOpenApi as Os}from"@asteasolutions/zod-to-openapi";import le from"zod";var ks=1,_s=6;Os(le);var pt=le.object({page:le.coerce.number().min(1).default(ks),limit:le.coerce.number().min(1).default(_s),title:le.string(),description:le.string(),orderBy:le.enum(["asc","desc"]).default("desc")}),Oe=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{title:t,description:i,limit:s,orderBy:n,page:a}=pt.parse(e.query),c=a*s-s,l=e.user.id,[v,C]=await Promise.all([this.certificationRepository.findByUserId({userId:l,pagination:{offset:c,limit:s},filter:{title:t,description:i,orderBy:n}}),this.certificationRepository.count({filter:{title:t,description:i,userId:l}})]),j=Math.max(Math.ceil(C/s),1);return r.status(200).json({page:a,totalPages:j,offset:c,limit:s,certifications:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ws}from"@asteasolutions/zod-to-openapi";import ye from"zod";var zs=1,Hs=7;Ws(ye);var dt=ye.object({page:ye.coerce.number().min(1).default(zs),limit:ye.coerce.number().min(1).default(Hs),title:ye.string().optional(),content:ye.string().optional(),orderBy:ye.enum(["asc","desc"]).default("desc")}),ke=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:i,content:s,orderBy:n,title:a}=dt.parse(e.query),c=i*t-i,l=e.user.id,[v,C]=await Promise.all([this.newsRepository.findByAuthorId({authorId:l,pagination:{offset:c,limit:i},filter:{orderBy:n,title:a,content:s}}),this.newsRepository.count({filter:{authorId:l,content:s,title:a}})]),j=Math.ceil(C/i);r.status(200).json({page:t,totalPages:j,offset:c,limit:i,news:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ls}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Zs}from"@prisma/client";import Q from"zod";var Vs=1,Ks=6;Ls(Q);var ut=Q.object({page:Q.coerce.number().min(1).default(Vs),limit:Q.coerce.number().min(1).default(Ks),title:Q.string().optional(),description:Q.string().optional(),status:Q.enum(Zs).default("PENDING"),orderBy:Q.enum(["asc","desc"]).default("desc")}),_e=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{title:t,description:i,limit:s,orderBy:n,page:a,status:c}=ut.parse(e.query),l=a*s-s,v=e.user.id,[C,j]=await Promise.all([this.pendencyRepository.findByUserId({userId:v,pagination:{offset:l,limit:s},filter:{title:t,description:i,orderBy:n,status:c}}),this.pendencyRepository.count({filter:{title:t,description:i,userId:v,status:c}})]),D=Math.max(Math.ceil(j/s),1);return r.status(200).json({page:a,totalPages:D,offset:l,limit:s,pendencies:C})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Gs}from"@asteasolutions/zod-to-openapi";import We from"zod";Gs(We);var lt=We.object({password:We.string(),email:We.email()}),ze=class{constructor(e,r,t){this.userRepository=e;this.bcrypt=r;this.jwtService=t}async handle(e,r){try{let{email:t,password:i}=lt.parse(e.body),s=await this.userRepository.findByEmail(t);if(!s)return r.status(401).json({message:"Usu\xE1rio n\xE3o existe."});if(!await this.bcrypt.compare({password:i,hashedPassword:s.passwordHash}))throw new k("Senha inv\xE1lida.");let{id:a,role:c}=s,l=this.jwtService.sign({id:a,role:c,email:t});return r.status(200).json({token:l})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as $s}from"@asteasolutions/zod-to-openapi";import ve from"zod";var He=8;$s(ve);var yt=ve.object({name:ve.string("Nome \xE9 obrigat\xF3rio.").min(1,"Nome \xE9 obrigat\xF3rio."),emailAddress:ve.email("E-mail inv\xE1lido.").min(1,"E-mail \xE9 obrigat\xF3rio."),password:ve.string("A senha \xE9 obrigat\xF3ria.").min(He,`A senha deve ter pelo menos ${He} caracteres.`),confirmPassword:ve.string("A senha \xE9 obrigat\xF3ria.").min(He,`A senha deve ter pelo menos ${He} caracteres.`)}).refine(o=>o.password===o.confirmPassword,{message:"As senhas n\xE3o coincidem.",path:["confirmPassword"]}),Le=class{constructor(e,r){this.userRepository=e;this.bcrypt=r}async handle(e,r){try{let{emailAddress:t,name:i,password:s}=yt.parse(e.body);if(await this.userRepository.findByEmail(t))throw new F("Usu\xE1rio j\xE1 existe.");let a=await this.bcrypt.hash(s);return await this.userRepository.create({name:i,emailAddress:t,passwordHash:a}),r.status(201).json()}catch(t){if(t instanceof Error)throw new m(t.message)}}};var To={method:"post",path:"/auth/sign-up",tags:["Authentication"],summary:"Create a new user",request:{body:{content:{"application/json":{schema:yt}}}},responses:{201:{description:"User created successfully",summary:"User Registration Successful",content:{"application/json":{schema:p.object({message:p.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},409:{description:"User already exists with this email",summary:"User Already Exists",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},jo={method:"post",path:"/auth/sign-in",tags:["Authentication"],summary:"Sign in",request:{body:{content:{"application/json":{schema:lt}}}},responses:{200:{description:"Authentication successful, JWT token returned",summary:"Login Successful",content:{"application/json":{schema:p.object({token:p.string()})}}},400:{description:"Invalid credentials or input data",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},401:{description:"Invalid email or password",summary:"Authentication Failed",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},So={method:"get",path:"/auth/user",tags:["Authentication"],summary:"Search for authenticated user",security:[{bearerAuth:[]}],responses:{200:{description:"Authenticated user information retrieved successfully",summary:"User Information Retrieved",content:{"application/json":{schema:p.object({name:p.string(),id:p.string(),avatarUrl:p.string().nullable(),createdAt:p.date(),updatedAt:p.date(),emailAddress:p.string(),orcid:p.string().nullable(),phone:p.string().nullable(),lattesUrl:p.string().nullable(),role:p.enum(Co.UserRole)}).nullable()}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},404:{description:"User not found or not authenticated",summary:"User Not Found",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},xo={method:"get",path:"/auth/user/news",tags:["Authentication"],summary:"List authenticated user news",security:[{bearerAuth:[]}],request:{query:dt},responses:{200:{description:"Paginated list of authenticated user news retrieved successfully",summary:"User News Retrieved",content:{"application/json":{schema:p.object({page:p.number(),totalPages:p.number(),offset:p.number(),limit:p.number(),news:p.object({content:p.string(),id:p.string(),title:p.string(),createdAt:p.date(),updatedAt:p.date(),imageUrl:p.string().nullable()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Po={method:"get",path:"/auth/admin",tags:["Authentication"],summary:"Verify admin access",security:[{bearerAuth:[]}],responses:{200:{description:"Admin access verified successfully",summary:"Admin Access Granted",content:{"application/json":{schema:p.object({success:p.boolean()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Ao={method:"get",path:"/auth/certifications",tags:["Authentication"],summary:"List all authenticated user's certifications",security:[{bearerAuth:[]}],request:{query:pt},responses:{200:{description:"Paginated list of authenticated user certifications retrieved successfully",summary:"User Certifications Retrieved",content:{"application/json":{schema:p.object({page:p.number(),totalPages:p.number(),offset:p.number(),limit:p.number(),certifications:p.object({description:p.string(),id:p.string(),title:p.string(),certificationUrl:p.string(),createdAt:p.date(),updatedAt:p.date(),userId:p.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Uo={method:"get",path:"/auth/pendencies",tags:["Authentication"],summary:"List all authenticated user's pendencies",security:[{bearerAuth:[]}],request:{query:ut},responses:{200:{description:"Paginated list of authenticated user pendencies retrieved successfully",summary:"User Pendencies Retrieved",content:{"application/json":{schema:p.object({page:p.number(),totalPages:p.number(),offset:p.number(),limit:p.number(),pendencies:p.object({id:p.string(),title:p.string(),description:p.string(),status:p.enum(Co.PendencyStatus),createdAt:p.date(),updatedAt:p.date(),userId:p.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}};import{$Enums as on}from"@prisma/client";import y from"zod";import{extendZodWithOpenApi as Js}from"@asteasolutions/zod-to-openapi";import ft from"zod";Js(ft);var ht=ft.object({id:ft.string()}),Ze=class{constructor(e,r){this.certificationRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=ht.parse({id:e.params.certification_id}),i=await this.certificationRepository.findById(t);if(!i)throw new E("A certifica\xE7\xE3o n\xE3o existe.");return await Promise.all([this.certificationRepository.deleteById(i.id),this.firebaseStorageService.deleteFile({fileUrl:i.certificationUrl})]),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ys}from"@asteasolutions/zod-to-openapi";import gt from"zod";Ys(gt);var Rt=gt.object({certificationId:gt.uuid()}),Ve=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{certificationId:t}=Rt.parse({certificationId:e.params.certification_id}),i=await this.certificationRepository.findById(t);if(!i)throw new E("Certificado n\xE3o encontrado.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Xs}from"@asteasolutions/zod-to-openapi";import ee from"zod";var Qs=1,en=6;Xs(ee);var It=ee.object({page:ee.coerce.number().min(1).default(Qs),limit:ee.coerce.number().min(1).default(en),title:ee.string().optional(),description:ee.string().optional(),userId:ee.uuid().optional(),orderBy:ee.enum(["asc","desc"]).default("desc")}),Ke=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{description:t,limit:i,orderBy:s,page:n,title:a,userId:c}=It.parse(e.query),l=n*i-i,[v,C]=await Promise.all([this.certificationRepository.find({pagination:{offset:l,limit:i},filter:{title:a,description:t,orderBy:s,userId:c}}),this.certificationRepository.count({filter:{title:a,description:t}})]),j=Math.max(Math.ceil(C/i),1);return r.status(200).json({page:n,totalPages:j,offset:l,limit:i,certifications:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as rn}from"@asteasolutions/zod-to-openapi";import Ce from"zod";var x={NEWS:"images/news",USER:"images/user",IN_MEMORIAM:"images/in-memoriam",CERTIFICATION:"documents/certifications",PENDENCY:"documents/pendencies"};rn(Ce);var $e=Ce.object({userId:Ce.uuid(),title:Ce.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:Ce.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:Ce.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do certificado \xE9 obrigat\xF3rio")}),Ge=class{constructor(e,r,t){this.userRepository=e;this.certificationRepository=r;this.firebaseStorageService=t}async handle(e,r){try{let{userId:t,title:i,description:s,certification:n}=$e.parse({...e.body,userId:e.params.user_id,certification:e.file});if(!await this.userRepository.findById(t))throw new q("O usu\xE1rio n\xE3o existe.");let c=await this.firebaseStorageService.uploadFile({file:n,id:t,folder:x.CERTIFICATION});return await this.certificationRepository.register({userId:t,title:i,description:s,certificationUrl:c}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as tn}from"@asteasolutions/zod-to-openapi";import Te from"zod";tn(Te);var Ye=Te.object({id:Te.uuid(),title:Te.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:Te.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:Te.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do certificado \xE9 inv\xE1lido").optional()}),Je=class{constructor(e,r){this.certificationRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{certification:t,id:i,...s}=Ye.parse({...e.body,id:e.params.certification_id,certification:e.file}),n=await this.certificationRepository.findById(i);if(!n)throw new q("A certifica\xE7\xE3o n\xE3o existe");let a=n.certificationUrl;return t&&t.size>0&&(a=await this.firebaseStorageService.updateFile({file:t,id:n.userId,folder:x.CERTIFICATION,fileUrl:n.certificationUrl})),await this.certificationRepository.update({...s,id:i,certificationUrl:a}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Fo={method:"post",path:"/certifications/{user_id}",tags:["Certifications"],summary:"Register certification for user",security:[{bearerAuth:[]}],request:{params:$e.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:$e.omit({userId:!0})}}}},responses:{201:{description:"Certification registered successfully for the user",summary:"Certification Registered",content:{"application/json":{schema:y.object({message:y.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Mo={method:"get",path:"/certifications",tags:["Certifications"],summary:"List certifications",security:[{bearerAuth:[]}],request:{query:It},responses:{200:{description:"Paginated list of certifications with user information retrieved successfully",summary:"Certifications Retrieved",content:{"application/json":{schema:y.object({page:y.number(),totalPages:y.number(),offset:y.number(),limit:y.number(),certifications:y.array(y.object({description:y.string(),userId:y.string(),title:y.string(),id:y.string(),createdAt:y.date(),updatedAt:y.date(),certificationUrl:y.url(),user:y.object({id:y.uuid(),name:y.string(),createdAt:y.date(),updatedAt:y.date(),avatarUrl:y.string().nullable(),emailAddress:y.email(),orcid:y.string().nullable(),phone:y.string().nullable(),lattesUrl:y.url().nullable(),role:y.enum(on.UserRole)})}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},qo={method:"get",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Find certification by ID",security:[{bearerAuth:[]}],request:{params:Rt},responses:{200:{description:"Certification details retrieved successfully",summary:"Certification Retrieved",content:{"application/json":{schema:y.object({description:y.string(),userId:y.string(),title:y.string(),id:y.string(),createdAt:y.date(),updatedAt:y.date(),certificationUrl:y.url()}).nullable()}}},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},No={method:"put",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Update certification",security:[{bearerAuth:[]}],request:{params:Ye.pick({id:!0}).transform(()=>({certification_id:""})),body:{content:{"multipart/form-data":{schema:Ye.omit({id:!0})}}}},responses:{204:{description:"Certification updated successfully",summary:"Certification Updated"},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Bo={method:"delete",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Delete certification",security:[{bearerAuth:[]}],request:{params:ht},responses:{204:{description:"Certification deleted successfully",summary:"Certification Deleted"},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}};import{$Enums as Tt}from"@prisma/client";import u from"zod";import{extendZodWithOpenApi as sn}from"@asteasolutions/zod-to-openapi";import H from"zod";sn(H);var wt=H.object({code:H.string(),title:H.string(),description:H.string().optional(),notes:H.string().optional(),leaderId:H.uuid(),deputyLeaderId:H.uuid(),secretaryId:H.uuid(),memberIds:H.array(H.uuid())}),Xe=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{code:t,title:i,description:s,notes:n,leaderId:a,deputyLeaderId:c,secretaryId:l,memberIds:v}=wt.parse(e.body);if(await this.etpRepository.findByCode(t))throw new F("J\xE1 existe um ETP cadastrado com este c\xF3digo.");return await this.etpRepository.create({code:t,title:i,description:s,notes:n,leaderId:a,deputyLeaderId:c,secretaryId:l,memberIds:v}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as nn}from"@asteasolutions/zod-to-openapi";import bt from"zod";nn(bt);var Et=bt.object({id:bt.uuid()}),Qe=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{id:t}=Et.parse({id:e.params.id});if(!await this.etpRepository.findById(t))throw new E("O ETP n\xE3o existe.");return await this.etpRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as an}from"@asteasolutions/zod-to-openapi";import vt from"zod";an(vt);var rr=vt.object({id:vt.uuid()}),er=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{id:t}=rr.parse({id:e.params.id}),i=await this.etpRepository.findById(t);if(!i)throw new E("O ETP n\xE3o existe.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as mn}from"@asteasolutions/zod-to-openapi";import _ from"zod";mn(_);var Ct=_.object({id:_.uuid(),code:_.string().optional(),title:_.string().optional(),description:_.string().optional(),notes:_.string().optional(),leaderId:_.uuid().optional(),deputyLeaderId:_.uuid().optional(),secretaryId:_.uuid().optional(),memberIds:_.array(_.uuid()).optional()}),tr=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{id:t,code:i,title:s,description:n,notes:a,leaderId:c,deputyLeaderId:l,secretaryId:v,memberIds:C}=Ct.parse({id:e.params.id,...e.body});if(!await this.etpRepository.findById(t))throw new E("O ETP n\xE3o existe.");if(i){let D=await this.etpRepository.findByCode(i);if(D&&D.id!==t)throw new F("J\xE1 existe um ETP com este c\xF3digo.")}return await this.etpRepository.update({id:t,code:i,title:s,description:n,notes:a,leaderId:c,deputyLeaderId:l,secretaryId:v,memberIds:C}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var cn=1,pn=9,or=u.object({id:u.uuid(),registrationNumber:u.string(),mainEtps:u.string().nullable(),formations:u.string().nullable(),degrees:u.array(u.enum(Tt.Degree)),occupations:u.string(),seniority:u.enum(Tt.Seniority),institutions:u.string(),biography:u.string().nullable(),createdAt:u.date(),updatedAt:u.date(),user:u.object({id:u.uuid(),name:u.string(),emailAddress:u.string(),avatarUrl:u.string().nullable(),orcid:u.string().nullable(),phone:u.string().nullable(),lattesUrl:u.string().nullable(),role:u.enum(Tt.UserRole)})}),Do=u.object({id:u.uuid(),code:u.string(),title:u.string(),description:u.string().nullable(),notes:u.string().nullable(),createdAt:u.date(),updatedAt:u.date(),leader:u.object({id:u.uuid(),researcher:or}).nullable(),deputyLeader:u.object({id:u.uuid(),researcher:or}).nullable(),secretary:u.object({id:u.uuid(),researcher:or}).nullable(),members:u.array(or)}),Oo={method:"post",path:"/etp",tags:["ETPs"],summary:"Create a new ETP with single leader, deputy leader, secretary and multiple members",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:wt}}}},responses:{201:{description:"ETP created successfully",summary:"ETP Created"},400:{description:"Invalid input data or missing required fields",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:u.object({message:u.string()})}}},409:{description:"ETP with this code already exists",summary:"Conflict",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},ko={method:"get",path:"/etp",tags:["ETPs"],summary:"List all ETPs with pagination and filters",request:{query:u.object({page:u.coerce.number().min(1).default(cn).optional(),limit:u.coerce.number().min(1).default(pn).optional(),code:u.string().optional(),title:u.string().optional(),description:u.string().optional(),notes:u.string().optional(),orderBy:u.enum(["asc","desc"]).optional()})},responses:{200:{description:"List of ETPs retrieved successfully with pagination",summary:"ETPs Retrieved",content:{"application/json":{schema:u.object({page:u.number(),totalPages:u.number(),offset:u.number(),limit:u.number(),etps:u.array(Do)})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},_o={method:"get",path:"/etp/{id}",tags:["ETPs"],summary:"Find ETP by ID",request:{params:rr},responses:{200:{description:"ETP details retrieved successfully",summary:"ETP Retrieved",content:{"application/json":{schema:Do}}},400:{description:"Invalid ETP ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"ETP not found with the provided ID",summary:"ETP Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Wo={method:"put",path:"/etp/{id}",tags:["ETPs"],summary:"Update ETP and manage user relationships (single leader, deputy leader, secretary, multiple members)",security:[{bearerAuth:[]}],request:{params:rr,body:{content:{"application/json":{schema:Ct.omit({id:!0})}}}},responses:{200:{description:"ETP updated successfully",summary:"ETP Updated"},400:{description:"Invalid input data or ETP ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:u.object({message:u.string()})}}},404:{description:"ETP not found with the provided ID",summary:"ETP Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},409:{description:"ETP with this code already exists",summary:"Conflict",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},zo={method:"delete",path:"/etp/{id}",tags:["ETPs"],summary:"Delete ETP",security:[{bearerAuth:[]}],request:{params:Et},responses:{200:{description:"ETP deleted successfully",summary:"ETP Deleted"},400:{description:"Invalid ETP ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:u.object({message:u.string()})}}},404:{description:"ETP not found with the provided ID",summary:"ETP Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}};import{InMemoriamRole as Sn}from"@prisma/client";import f from"zod";import{extendZodWithOpenApi as dn}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as un}from"@prisma/client";import re from"zod";var Lo=2,Ho=1024,ln=Ho*Ho,yn=Lo*ln;dn(re);var jt=re.object({name:re.string().min(1,"Nome \xE9 obrigat\xF3rio"),birthDate:re.coerce.date(),deathDate:re.coerce.date(),biography:re.string().optional(),photo:re.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=yn,`A imagem deve ter no m\xE1ximo ${Lo}MB.`).optional(),role:re.enum(un)}).refine(o=>o.deathDate>o.birthDate,{message:"Data de falecimento deve ser posterior \xE0 data de nascimento",path:["deathDate"]}),ir=class{constructor(e,r){this.inMemoriamRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{name:t,birthDate:i,deathDate:s,biography:n,role:a,photo:c}=jt.parse({...e.body,photo:e.file}),l=await this.inMemoriamRepository.create({name:t,birthDate:i,deathDate:s,biography:n??void 0,role:a}),v;return c&&(v=await this.firebaseStorageService.uploadFile({file:c,id:l.id,folder:x.IN_MEMORIAM}),await this.inMemoriamRepository.update({id:l.id,photoUrl:v})),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as fn}from"@asteasolutions/zod-to-openapi";import St from"zod";fn(St);var xt=St.object({id:St.uuid()}),sr=class{constructor(e,r){this.inMemoriamRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=xt.parse({id:e.params.id}),i=await this.inMemoriamRepository.findById(t);if(!i)throw new E("O in memoriam n\xE3o existe.");return i.photoUrl&&this.firebaseStorageService.deleteFile({fileUrl:i.photoUrl}),await this.inMemoriamRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as hn}from"@asteasolutions/zod-to-openapi";import Pt from"zod";hn(Pt);var ar=Pt.object({id:Pt.uuid()}),nr=class{constructor(e){this.inMemoriamRepository=e}async handle(e,r){try{let{id:t}=ar.parse({id:e.params.id}),i=await this.inMemoriamRepository.findById(t);if(!i)throw new E("O in memoriam n\xE3o existe.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as gn}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as Rn}from"@prisma/client";import At from"zod";gn(At);var Ut=At.object({role:At.enum(Rn)}),mr=class{constructor(e){this.inMemoriamRepository=e}async handle(e,r){try{let{role:t}=Ut.parse({role:e.params.role}),i=await this.inMemoriamRepository.findByRole(t);return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as In}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as wn}from"@prisma/client";import te from"zod";var bn=1,En=9;In(te);var Ft=te.object({page:te.coerce.number().min(1).default(bn),limit:te.coerce.number().min(1).default(En),name:te.string().optional(),biography:te.string().optional(),role:te.enum(wn).optional(),orderBy:te.enum(["asc","desc"]).optional()}),cr=class{constructor(e){this.inMemoriamRepository=e}async handle(e,r){try{let{page:t,limit:i,...s}=Ft.parse(e.query),n=i*t-i,[a,c]=await Promise.all([this.inMemoriamRepository.find({pagination:{offset:n,limit:i},filter:s}),this.inMemoriamRepository.count({filter:s})]),l=Math.max(Math.ceil(c/i),1);r.status(200).json({page:t,totalPages:l,offset:n,limit:i,inMemoriam:a})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as vn}from"@asteasolutions/zod-to-openapi";import{InMemoriamRole as Cn}from"@prisma/client";import V from"zod";var Vo=2,Zo=1024,Tn=Zo*Zo,jn=Vo*Tn;vn(V);var Mt=V.object({id:V.uuid(),name:V.string().min(1,"Nome \xE9 obrigat\xF3rio").optional(),birthDate:V.coerce.date().optional(),deathDate:V.coerce.date().optional(),biography:V.string().optional(),photo:V.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=jn,`A imagem deve ter no m\xE1ximo ${Vo}MB.`).optional(),role:V.enum(Cn).optional()}).refine(o=>o.birthDate&&o.deathDate?o.deathDate>o.birthDate:!0,{message:"Data de falecimento deve ser posterior \xE0 data de nascimento",path:["deathDate"]}),pr=class{constructor(e,r){this.inMemoriamRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t,name:i,birthDate:s,deathDate:n,biography:a,photo:c,role:l}=Mt.parse({id:e.params.id,...e.body,photo:e.file}),v=await this.inMemoriamRepository.findById(t);if(!v)throw new E("O registro in memoriam n\xE3o existe.");let C=v.photoUrl;return c&&(C=await this.firebaseStorageService.uploadFile({file:c,id:t,folder:x.IN_MEMORIAM})),await this.inMemoriamRepository.update({id:t,name:i,birthDate:s,deathDate:n,biography:a,photoUrl:C??void 0,role:l}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var qt=f.object({id:f.uuid(),name:f.string(),birthDate:f.date(),deathDate:f.date(),biography:f.string().nullable(),photoUrl:f.string().nullable(),role:f.enum(Sn),createdAt:f.date(),updatedAt:f.date()}),Ko={method:"post",path:"/in-memoriam",tags:["In Memoriam"],summary:"Create a new in memoriam record with optional photo upload",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:jt}}}},responses:{201:{description:"In memoriam record created successfully",summary:"In Memoriam Created"},400:{description:"Invalid input data, missing required fields, or invalid photo format/size",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:f.object({message:f.string()})}}},409:{description:"In memoriam record with this name already exists",summary:"Conflict",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},Go={method:"get",path:"/in-memoriam",tags:["In Memoriam"],summary:"List all in memoriam records with pagination and filters",request:{query:Ft},responses:{200:{description:"List of in memoriam records retrieved successfully with pagination",summary:"In Memoriam Records Retrieved",content:{"application/json":{schema:f.object({page:f.number(),totalPages:f.number(),offset:f.number(),limit:f.number(),inMemoriam:f.array(qt)})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},$o={method:"get",path:"/in-memoriam/{id}",tags:["In Memoriam"],summary:"Find in memoriam record by ID",request:{params:ar},responses:{200:{description:"In memoriam record details retrieved successfully",summary:"In Memoriam Record Retrieved",content:{"application/json":{schema:qt}}},400:{description:"Invalid in memoriam record ID format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"In memoriam record not found with the provided ID",summary:"In Memoriam Record Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},Jo={method:"put",path:"/in-memoriam/{id}",tags:["In Memoriam"],summary:"Update in memoriam record with optional photo upload",security:[{bearerAuth:[]}],request:{params:ar,body:{content:{"multipart/form-data":{schema:Mt.omit({id:!0})}}}},responses:{200:{description:"In memoriam record updated successfully",summary:"In Memoriam Record Updated"},400:{description:"Invalid input data, in memoriam record ID format, or invalid photo format/size",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:f.object({message:f.string()})}}},404:{description:"In memoriam record not found with the provided ID",summary:"In Memoriam Record Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},409:{description:"In memoriam record with this name already exists",summary:"Conflict",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},Yo={method:"delete",path:"/in-memoriam/{id}",tags:["In Memoriam"],summary:"Delete in memoriam record",security:[{bearerAuth:[]}],request:{params:xt},responses:{200:{description:"In memoriam record deleted successfully",summary:"In Memoriam Record Deleted"},400:{description:"Invalid in memoriam record ID format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:f.object({message:f.string()})}}},404:{description:"In memoriam record not found with the provided ID",summary:"In Memoriam Record Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},Ad={method:"get",path:"/in-memoriam/role/{role}",tags:["In Memoriam"],summary:"Find in memoriam records by role",request:{params:Ut},responses:{200:{description:"In memoriam records retrieved successfully by role",summary:"In Memoriam Records Retrieved by Role",content:{"application/json":{schema:f.array(qt)}}},400:{description:"Invalid role parameter provided",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}};import h from"zod";import{extendZodWithOpenApi as xn}from"@asteasolutions/zod-to-openapi";import Ue from"zod";var Pn=5,Xo=1024,An=Xo*Xo,Un=Pn*An;xn(Ue);var Nt=Ue.object({title:Ue.string().min(1),content:Ue.string().min(1),image:Ue.any().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=Un,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),dr=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{title:t,content:i,image:s}=Nt.parse({...e.body,image:e.file}),n=e.user.id,a=await this.firebaseStorageService.uploadFile({file:s,folder:x.NEWS,id:n});await this.newsRepository.create({title:t,content:i,authorId:n,imageUrl:a}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Fn}from"@asteasolutions/zod-to-openapi";import oe from"zod";var Mn=1,qn=7;Fn(oe);var lr=oe.object({page:oe.coerce.number().min(1).default(Mn),limit:oe.coerce.number().min(1).default(qn),authorId:oe.string(),title:oe.string().optional(),content:oe.string().optional(),orderBy:oe.enum(["asc","desc"]).default("desc")}),ur=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:i,authorId:s,content:n,orderBy:a,title:c}=lr.parse(e.query),l=i*t-i,[v,C]=await Promise.all([this.newsRepository.findByAuthorId({authorId:s,pagination:{offset:l,limit:i},filter:{orderBy:a,title:c,content:n}}),this.newsRepository.count({filter:{authorId:s,content:n,title:c}})]),j=Math.max(Math.ceil(C/i),1);r.status(200).json({page:t,totalPages:j,offset:l,limit:i,news:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Nn}from"@asteasolutions/zod-to-openapi";import Bt from"zod";Nn(Bt);var Dt=Bt.object({id:Bt.string()}),yr=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{id:t}=Dt.parse(e.params),i=await this.newsRepository.findById(t);if(!i)throw new E("Not\xEDcia n\xE3o encontrada.");r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Bn}from"@asteasolutions/zod-to-openapi";import ie from"zod";var Dn=1,On=9;Bn(ie);var Ot=ie.object({page:ie.coerce.number().min(1).default(Dn),limit:ie.coerce.number().min(1).default(On),title:ie.string().optional(),content:ie.string().optional(),authorId:ie.string().optional(),orderBy:ie.enum(["asc","desc"]).default("desc")}),fr=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:i,authorId:s,content:n,orderBy:a,title:c}=Ot.parse(e.query),l=i*t-i,[v,C]=await Promise.all([this.newsRepository.find({pagination:{offset:l,limit:i},filter:{authorId:s,content:n,title:c,orderBy:a}}),this.newsRepository.count({filter:{title:c,content:n,authorId:s}})]),j=Math.max(Math.ceil(C/i),1);r.status(200).json({page:t,totalPages:j,offset:l,limit:i,news:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Qo={method:"post",path:"/news",tags:["News"],summary:"Create news",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Nt}}}},responses:{201:{description:"News article created successfully",summary:"News Created",content:{"application/json":{schema:h.object({message:h.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}},ei={method:"get",path:"/news",tags:["News"],summary:"List news",request:{query:Ot},responses:{200:{description:"Paginated list of news articles retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:h.object({page:h.number(),totalPages:h.number(),offset:h.number(),limit:h.number(),news:h.array(h.object({title:h.string(),content:h.string(),id:h.string(),createdAt:h.date(),updatedAt:h.date(),imageUrl:h.string().nullable()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}},ri={method:"get",path:"/news/{id}",tags:["News"],summary:"Find news by ID",request:{params:Dt},responses:{200:{description:"News article details retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:h.object({page:h.number(),totalPages:h.number(),offset:h.number(),limit:h.number(),news:h.object({title:h.string(),content:h.string(),id:h.string(),createdAt:h.date(),updatedAt:h.date(),imageUrl:h.string().nullable()})})}}},400:{description:"Invalid news ID format",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},404:{description:"News article not found with the provided ID",summary:"News Not Found",content:{"application/json":{schema:h.object({message:h.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}},ti={method:"get",path:"/news/author/{author_id}",tags:["News"],summary:"List news by author",request:{params:lr.pick({authorId:!0}).transform(()=>({author_id:""})),query:lr.omit({authorId:!0})},responses:{200:{description:"Paginated list of news articles by author retrieved successfully",summary:"Author News Retrieved",content:{"application/json":{schema:h.object({page:h.number(),totalPages:h.number(),offset:h.number(),limit:h.number(),news:h.array(h.object({title:h.string(),content:h.string(),id:h.string(),createdAt:h.date(),updatedAt:h.date(),imageUrl:h.string().nullable()}))})}}},400:{description:"Invalid author ID or query parameters",summary:"Validation Error",content:{"application/json":{schema:h.object({errors:h.record(h.string(),h.string())})}}},404:{description:"Author not found with the provided ID",summary:"Author Not Found",content:{"application/json":{schema:h.object({message:h.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:h.object({message:h.string()})}}}}};import{$Enums as oi}from"@prisma/client";import R from"zod";import{extendZodWithOpenApi as kn}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as _n}from"@prisma/client";import se from"zod";kn(se);var gr=se.object({userId:se.uuid(),title:se.string().min(1),description:se.string().optional(),status:se.enum(_n).default("PENDING"),dueDate:se.coerce.date().optional(),document:se.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do documento \xE9 obrigat\xF3rio")}),hr=class{constructor(e,r,t){this.userRepository=e;this.pendencyRepository=r;this.firebaseStorageService=t}async handle(e,r){try{let{userId:t,title:i,description:s,status:n,dueDate:a,document:c}=gr.parse({...e.body,userId:e.params.user_id,document:e.file});if(!await this.userRepository.findById(t))throw new q("O usu\xE1rio n\xE3o existe.");let v=await this.firebaseStorageService.uploadFile({file:c,id:t,folder:x.PENDENCY});return await this.pendencyRepository.create({userId:t,title:i,description:s,status:n,dueDate:a,documentUrl:v}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Wn}from"@asteasolutions/zod-to-openapi";import kt from"zod";Wn(kt);var _t=kt.object({id:kt.uuid()}),Rr=class{constructor(e,r){this.pendencyRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=_t.parse({id:e.params.pendency_id}),i=await this.pendencyRepository.findById(t);if(!i)throw new E("A pend\xEAncia n\xE3o existe.");return await Promise.all([this.pendencyRepository.deleteById(i.id),this.firebaseStorageService.deleteFile({fileUrl:i.documentUrl})]),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as zn}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Hn}from"@prisma/client";import K from"zod";var Ln=1,Zn=6;zn(K);var Wt=K.object({page:K.coerce.number().min(1).default(Ln),limit:K.coerce.number().min(1).default(Zn),title:K.string().optional(),description:K.string().optional(),status:K.enum(Hn).default("PENDING"),userId:K.uuid().optional(),orderBy:K.enum(["asc","desc"]).default("desc")}),Ir=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{description:t,limit:i,orderBy:s,page:n,title:a,status:c,userId:l}=Wt.parse(e.query),v=n*i-i,[C,j]=await Promise.all([this.pendencyRepository.find({pagination:{offset:v,limit:i},filter:{title:a,description:t,status:c,orderBy:s,userId:l}}),this.pendencyRepository.count({filter:{title:a,description:t,status:c,userId:l}})]),D=Math.max(Math.ceil(j/i),1);return r.status(200).json({page:n,totalPages:D,offset:v,limit:i,pendencies:C})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Vn}from"@asteasolutions/zod-to-openapi";import zt from"zod";Vn(zt);var Ht=zt.object({pendencyId:zt.uuid()}),wr=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{pendencyId:t}=Ht.parse({pendencyId:e.params.pendency_id}),i=await this.pendencyRepository.findById(t);if(!i)throw new E("Pend\xEAncia n\xE3o encontrada.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Kn}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Gn}from"@prisma/client";import ne from"zod";Kn(ne);var Er=ne.object({id:ne.uuid(),title:ne.string().min(1),description:ne.string().optional(),status:ne.enum(Gn),dueDate:ne.coerce.date().optional(),document:ne.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do documento \xE9 inv\xE1lido").optional()}),br=class{constructor(e,r){this.pendencyRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{document:t,id:i,...s}=Er.parse({...e.body,id:e.params.pendency_id,document:e.file}),n=await this.pendencyRepository.findById(i);if(!n)throw new q("A pend\xEAncia n\xE3o existe");let a=n.documentUrl;return t&&t.size>0&&(a=await this.firebaseStorageService.updateFile({file:t,id:n.userId,folder:x.PENDENCY,fileUrl:n.documentUrl})),await this.pendencyRepository.update({...s,id:i,documentUrl:a}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var ii={method:"post",path:"/pendency/{user_id}",tags:["Pendencies"],summary:"Create pendency for user",security:[{bearerAuth:[]}],request:{params:gr.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:gr.omit({userId:!0})}}}},responses:{201:{description:"Pendency created successfully for the user",summary:"Pendency Created",content:{"application/json":{schema:R.object({})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},si={method:"get",path:"/pendency",tags:["Pendencies"],summary:"List pendencies",security:[{bearerAuth:[]}],request:{query:Wt},responses:{200:{description:"Paginated list of pendencies retrieved successfully",summary:"Pendencies Retrieved",content:{"application/json":{schema:R.object({page:R.number(),totalPages:R.number(),offset:R.number(),limit:R.number(),pendencies:R.array(R.object({id:R.string(),title:R.string(),description:R.string().nullable(),status:R.enum(oi.PendencyStatus),dueDate:R.date().nullable(),documentUrl:R.string(),userId:R.string(),createdAt:R.date(),updatedAt:R.date()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},ni={method:"get",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Find pendency by ID",security:[{bearerAuth:[]}],request:{params:Ht},responses:{200:{description:"Pendency details retrieved successfully",summary:"Pendency Retrieved",content:{"application/json":{schema:R.object({id:R.string(),title:R.string(),description:R.string().nullable(),status:R.enum(oi.PendencyStatus),dueDate:R.date().nullable(),documentUrl:R.string(),userId:R.string(),createdAt:R.date(),updatedAt:R.date()}).nullable()}}},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:R.object({message:R.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},ai={method:"put",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Update pendency",security:[{bearerAuth:[]}],request:{params:Er.pick({id:!0}).transform(()=>({pendency_id:""})),body:{content:{"multipart/form-data":{schema:Er.omit({id:!0})}}}},responses:{204:{description:"Pendency updated successfully",summary:"Pendency Updated"},400:{description:"Invalid input data or pendency does not exist",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}},mi={method:"delete",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Delete pendency",security:[{bearerAuth:[]}],request:{params:_t},responses:{204:{description:"Pendency deleted successfully",summary:"Pendency Deleted"},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:R.object({errors:R.record(R.string(),R.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:R.object({message:R.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:R.object({message:R.string()})}}}}};import{$Enums as Yt}from"@prisma/client";import d from"zod";import{extendZodWithOpenApi as $n}from"@asteasolutions/zod-to-openapi";import{Degree as Jn,Seniority as Yn}from"@prisma/client";import W from"zod";$n(W);var Lt=W.object({registrationNumber:W.string(),mainEtps:W.string().optional(),formations:W.string().optional(),degrees:W.array(W.enum(Jn)),occupations:W.string(),seniority:W.enum(Yn),institutions:W.string(),biography:W.string().optional(),userId:W.string()}),vr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{registrationNumber:t,mainEtps:i,formations:s,degrees:n,occupations:a,seniority:c,institutions:l,biography:v,userId:C}=Lt.parse(e.body);if(await this.researcherRepository.findByRegistrationNumber(t))throw new F("J\xE1 existe um pesquisador cadastrado com este n\xFAmero de registro.");if(await this.researcherRepository.findByUserId(C))throw new F("Usu\xE1rio j\xE1 possui um perfil de pesquisador.");return await this.researcherRepository.create({registrationNumber:t,mainEtps:i,formations:s,degrees:n,occupations:a,seniority:c,institutions:l,biography:v,userId:C}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Xn}from"@asteasolutions/zod-to-openapi";import Zt from"zod";Xn(Zt);var Vt=Zt.object({id:Zt.uuid()}),Cr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t}=Vt.parse({id:e.params.id});if(!await this.researcherRepository.findById(t))throw new E("O pesquisador n\xE3o existe.");return await this.researcherRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Qn}from"@asteasolutions/zod-to-openapi";import Kt from"zod";Qn(Kt);var jr=Kt.object({id:Kt.uuid()}),Tr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t}=jr.parse({id:e.params.id}),i=await this.researcherRepository.findById(t);if(!i)throw new E("O pesquisador n\xE3o existe.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ea}from"@asteasolutions/zod-to-openapi";import Gt from"zod";ea(Gt);var $t=Gt.object({userId:Gt.uuid()}),Sr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{userId:t}=$t.parse({userId:e.params.userId}),i=await this.researcherRepository.findByUserId(t);if(!i)throw new E("O pesquisador n\xE3o existe para este usu\xE1rio.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ra}from"@asteasolutions/zod-to-openapi";import{Degree as ta,Seniority as oa}from"@prisma/client";import z from"zod";ra(z);var Jt=z.object({id:z.uuid(),registrationNumber:z.string().optional(),mainEtps:z.string().optional(),formations:z.string().optional(),degrees:z.array(z.enum(ta)).optional(),occupations:z.string().optional(),seniority:z.enum(oa).optional(),institutions:z.string().optional(),biography:z.string().optional()}),xr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t,registrationNumber:i,mainEtps:s,formations:n,degrees:a,occupations:c,seniority:l,institutions:v,biography:C}=Jt.parse({id:e.params.id,...e.body}),j=await this.researcherRepository.findById(t);if(!j)throw new E("O pesquisador n\xE3o existe.");if(i&&i!==j.registrationNumber){let D=await this.researcherRepository.findByRegistrationNumber(i);if(D&&D.id!==t)throw new F("J\xE1 existe um pesquisador com este n\xFAmero de registro.")}return await this.researcherRepository.update({id:t,registrationNumber:i,mainEtps:s,formations:n,degrees:a,occupations:c,seniority:l,institutions:v,biography:C}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var ia=1,sa=9,Xt=d.object({id:d.uuid(),registrationNumber:d.string(),mainEtps:d.string().nullable(),formations:d.string().nullable(),degrees:d.array(d.enum(Yt.Degree)),occupations:d.string(),seniority:d.enum(Yt.Seniority),institutions:d.string(),biography:d.string().nullable(),createdAt:d.date(),updatedAt:d.date(),userId:d.uuid(),user:d.object({id:d.uuid(),name:d.string(),emailAddress:d.string(),avatarUrl:d.string().nullable(),orcid:d.string().nullable(),phone:d.string().nullable(),lattesUrl:d.string().nullable(),role:d.enum(Yt.UserRole)})}),ci={method:"post",path:"/researcher",tags:["Researchers"],summary:"Create a new researcher profile",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:Lt}}}},responses:{201:{description:"Researcher profile created successfully",summary:"Researcher Created",content:{"application/json":{schema:d.object({message:d.string()})}}},400:{description:"Invalid input data or missing required fields",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:d.object({message:d.string()})}}},409:{description:"Researcher with this registration number already exists or user already has a researcher profile",summary:"Conflict",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},pi={method:"get",path:"/researcher",tags:["Researchers"],summary:"List all researchers with pagination and filters",request:{query:d.object({page:d.coerce.number().min(1).default(ia).optional(),limit:d.coerce.number().min(1).default(sa).optional(),userId:d.string().optional(),registrationNumber:d.string().optional(),name:d.string().optional(),emailAddress:d.string().optional(),mainEtps:d.string().optional(),formations:d.string().optional(),occupations:d.string().optional(),institutions:d.string().optional(),biography:d.string().optional(),orderBy:d.enum(["asc","desc"]).optional()})},responses:{200:{description:"List of researchers retrieved successfully with pagination",summary:"Researchers Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),researchers:d.array(Xt)})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},di={method:"get",path:"/researcher/{id}",tags:["Researchers"],summary:"Find researcher by ID",request:{params:jr},responses:{200:{description:"Researcher details retrieved successfully",summary:"Researcher Retrieved",content:{"application/json":{schema:Xt}}},400:{description:"Invalid researcher ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},ui={method:"get",path:"/researcher/user/{userId}",tags:["Researchers"],summary:"Find researcher by user ID",request:{params:$t},responses:{200:{description:"Researcher details retrieved successfully",summary:"Researcher Retrieved",content:{"application/json":{schema:Xt}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Researcher not found for this user",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},li={method:"put",path:"/researcher/{id}",tags:["Researchers"],summary:"Update researcher profile",security:[{bearerAuth:[]}],request:{params:jr,body:{content:{"application/json":{schema:Jt.omit({id:!0})}}}},responses:{200:{description:"Researcher profile updated successfully",summary:"Researcher Updated",content:{"application/json":{schema:d.object({message:d.string()})}}},400:{description:"Invalid input data or researcher ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:d.object({message:d.string()})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},409:{description:"Researcher with this registration number already exists",summary:"Conflict",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},yi={method:"delete",path:"/researcher/{id}",tags:["Researchers"],summary:"Delete researcher profile",security:[{bearerAuth:[]}],request:{params:Vt},responses:{200:{description:"Researcher profile deleted successfully",summary:"Researcher Deleted"},400:{description:"Invalid researcher ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:d.object({message:d.string()})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}};import g from"zod";import{extendZodWithOpenApi as na}from"@asteasolutions/zod-to-openapi";import G from"zod";na(G);var Qt=G.object({name:G.string().min(1),type:G.string().min(1),members:G.array(G.object({role:G.string().min(1),user:G.object({id:G.string()})}))}),Pr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{name:t,type:i,members:s}=Qt.parse(e.body);await this.teamRepository.create({name:t,type:i,members:s}),r.status(201).json()}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as aa}from"@asteasolutions/zod-to-openapi";import{z as eo}from"zod";aa(eo);var Fe=eo.object({id:eo.uuid()}),Ar=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=Fe.parse(e.params),i=await this.teamRepository.findById(t);r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ma}from"@asteasolutions/zod-to-openapi";import{z as Ur}from"zod";ma(Ur);var ro=Ur.object({type:Ur.string(),name:Ur.string().optional()}),Fr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{type:t,name:i}=ro.parse({type:e.params.type,name:e.query.name}),s=await this.teamRepository.findByType({type:t,filter:{name:i}});r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ca}from"@asteasolutions/zod-to-openapi";import{z as Z}from"zod";ca(Z);var to=Z.object({id:Z.uuid(),name:Z.string().min(1),members:Z.array(Z.object({role:Z.string(),id:Z.uuid().optional(),user:Z.object({id:Z.uuid()})}))}),Mr=class{constructor(e,r){this.teamRepository=e;this.teamMemberRepository=r}async handle(e,r){try{let{id:t,members:i,name:s}=to.parse({id:e.params.id,...e.body}),n=await this.teamMemberRepository.findByTeamId(t),a=i.map(l=>l.id),c=n.filter(l=>!a.includes(l.id)).map(l=>l.id);await this.teamMemberRepository.deleteMany(c),await this.teamMemberRepository.updateMany({teamId:t,members:i}),await this.teamRepository.update({id:t,name:s}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var fi={method:"post",path:"/team",tags:["Teams"],summary:"Create team",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:Qt}}}},responses:{201:{description:"Team created successfully",summary:"Team Created",content:{"application/json":{schema:g.object({message:g.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},hi={method:"put",path:"/team/{id}",tags:["Teams"],summary:"Update team",security:[{bearerAuth:[]}],request:{params:Fe,body:{content:{"application/json":{schema:to}}}},responses:{204:{description:"Team updated successfully",summary:"Team Updated"},400:{description:"Invalid input data or team ID format",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},gi={method:"delete",path:"/team/{id}",tags:["Teams"],summary:"Delete team",security:[{bearerAuth:[]}],request:{params:Fe},responses:{204:{description:"Team deleted successfully",summary:"Team Deleted"},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},Ri={method:"get",path:"/team/id/{id}",tags:["Teams"],summary:"Find team by ID",request:{params:Fe},responses:{200:{description:"Team details retrieved successfully",summary:"Team Retrieved",content:{"application/json":{schema:g.object({type:g.string(),name:g.string(),id:g.string(),createdAt:g.date(),updatedAt:g.date(),description:g.string().nullable()})}}},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},Ii={method:"get",path:"/team/type/{type}",tags:["Teams"],summary:"Find teams by type",request:{params:ro.pick({type:!0})},responses:{200:{description:"List of teams by type retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:g.array(g.object({type:g.string(),name:g.string(),id:g.string(),createdAt:g.date(),updatedAt:g.date(),description:g.string().nullable()})).nullable()}}},400:{description:"Invalid team type parameter",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},wi={method:"get",path:"/team",tags:["Teams"],summary:"List teams",responses:{200:{description:"Complete list of teams retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:g.array(g.object({type:g.string(),name:g.string(),id:g.string(),createdAt:g.date(),updatedAt:g.date(),description:g.string().nullable()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}};import{$Enums as vi}from"@prisma/client";import w from"zod";import{extendZodWithOpenApi as pa}from"@asteasolutions/zod-to-openapi";import oo from"zod";pa(oo);var io=oo.object({id:oo.string()}),qr=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{id:t}=io.parse({id:e.params.id}),i=await this.userRepository.findById(t);if(!i)throw new E("O usu\xE1rio n\xE3o existe.");let s=e.user.id;if(i.id!==s)throw new k("Voc\xEA n\xE3o tem permiss\xE3o para deletar o usu\xE1rio");return await this.userRepository.deleteById(i.id),r.sendStatus(204)}catch(t){if(console.log(t),t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as da}from"@asteasolutions/zod-to-openapi";import{z as so}from"zod";da(so);var no=so.object({id:so.string().min(1,"id do usu\xE1rio n\xE3o fornecido.")}),Nr=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{id:t}=no.parse(e.params),i=await this.userRepository.findById(t);if(!i)throw new E("Usu\xE1rio n\xE3o encontrado");r.status(200).json(i)}catch(t){if(console.log(t),t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ua}from"@asteasolutions/zod-to-openapi";import fe from"zod";var Ei=2,bi=1024,la=bi*bi,ya=Ei*la,fa=/^\d{4}-\d{4}-\d{4}-\d{4}$/,Br=/^[^0-9]*$/,ha=/^\(?\d{2}\)?[\s-]?\d{4,5}-?\d{4}$/;ua(fe);var ao=fe.object({name:fe.string().optional(),lattesUrl:fe.string().optional(),orcid:fe.string().transform(o=>o.trim()).transform(o=>Br.test(o)?"":o).refine(o=>Br.test(o)||fa.test(o),{message:"ORCID inv\xE1lido. Deve estar no formato 0000-0000-0000-0000"}),phone:fe.string().transform(o=>Br.test(o)?"":o).refine(o=>Br.test(o)||ha.test(o),{message:"Telefone inv\xE1lido. Deve estar no formato (99) 99999-9999"}),avatarImage:fe.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=ya,`A imagem deve ter no m\xE1ximo ${Ei}MB.`).optional()}),Dr=class{constructor(e,r){this.userRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{avatarImage:t,...i}=ao.parse({...e.body,avatarImage:e.file}),s=e.user.id,n=await this.userRepository.findById(s);if(!n)throw new q("O usu\xE1rio n\xE3o existe");let a=n.avatarUrl;return t&&(n.avatarUrl?a=await this.firebaseStorageService.updateFile({file:t,id:s,folder:x.USER,fileUrl:n.avatarUrl}):a=await this.firebaseStorageService.uploadFile({file:t,id:s,folder:x.USER})),await this.userRepository.update({...i,id:s,avatarUrl:a||void 0}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Ci={method:"get",path:"/users/{id}",tags:["Users"],summary:"Find user by ID",request:{params:no},responses:{200:{description:"User details retrieved successfully",summary:"User Retrieved",content:{"application/json":{schema:w.object({id:w.string(),name:w.string(),createdAt:w.date(),updatedAt:w.date(),role:w.enum(vi.UserRole),lattesUrl:w.string().nullable(),orcid:w.string().nullable(),phone:w.string().nullable(),avatarUrl:w.url().nullable(),emailAddress:w.email()})}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:w.object({message:w.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}},Ti={method:"put",path:"/users",tags:["Users"],summary:"Update authenticated user",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:ao}}}},responses:{200:{description:"User profile updated successfully",summary:"User Updated",content:{"application/json":{schema:w.object({message:w.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:w.object({message:w.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}},ji={method:"delete",path:"/users",tags:["Users"],summary:"Delete authenticated user",security:[{bearerAuth:[]}],request:{params:io},responses:{200:{description:"User account deleted successfully",summary:"User Deleted",content:{"application/json":{schema:w.object({message:w.string()})}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:w.object({errors:w.record(w.string(),w.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:w.object({message:w.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}},Si={method:"get",path:"/users",tags:["Users"],summary:"List users",responses:{200:{description:"Complete list of users retrieved successfully",summary:"Users Retrieved",content:{"application/json":{schema:w.array(w.object({id:w.string(),name:w.string(),createdAt:w.date(),updatedAt:w.date(),role:w.enum(vi.UserRole),lattesUrl:w.url().nullable(),orcid:w.string().nullable(),phone:w.string().nullable(),avatarUrl:w.string().nullable(),emailAddress:w.email()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:w.object({message:w.string()})}}}}};var b=new ga;b.registerComponent("securitySchemes","bearerAuth",{type:"http",scheme:"bearer",bearerFormat:"JWT"});b.registerPath(To);b.registerPath(jo);b.registerPath(So);b.registerPath(xo);b.registerPath(Ao);b.registerPath(Uo);b.registerPath(Po);b.registerPath(Ci);b.registerPath(Ti);b.registerPath(ji);b.registerPath(Si);b.registerPath(fi);b.registerPath(hi);b.registerPath(gi);b.registerPath(Ri);b.registerPath(Ii);b.registerPath(wi);b.registerPath(Qo);b.registerPath(ei);b.registerPath(ri);b.registerPath(ti);b.registerPath(Fo);b.registerPath(Mo);b.registerPath(qo);b.registerPath(No);b.registerPath(Bo);b.registerPath(ii);b.registerPath(si);b.registerPath(ni);b.registerPath(ai);b.registerPath(mi);b.registerPath(Ko);b.registerPath(Go);b.registerPath($o);b.registerPath(Jo);b.registerPath(Yo);b.registerPath(ci);b.registerPath(pi);b.registerPath(di);b.registerPath(ui);b.registerPath(li);b.registerPath(yi);b.registerPath(Oo);b.registerPath(ko);b.registerPath(_o);b.registerPath(Wo);b.registerPath(zo);var Ia=new Ra(b.definitions),xi=Ia.generateDocument({openapi:"3.0.0",info:{title:"API da Rede CT",version:"1.0.0",description:"API com valida\xE7\xE3o Zod"}});import{Router as ja}from"express";import{extendZodWithOpenApi as wa}from"@asteasolutions/zod-to-openapi";import mo from"zod";wa(mo);var ba=mo.object({authenticatedUserId:mo.uuid()}),Or=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{authenticatedUserId:t}=ba.parse({authenticatedUserId:e.user.id}),i=await this.userRepository.findById(t);if(!i)throw new E("Usu\xE1rio n\xE3o encontrado.");return r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{PrismaClient as Ea}from"@prisma/client";var T=new Ea({log:["warn","error"]});var kr=class{constructor(e){this.prisma=e}async register({userId:e,title:r,description:t,certificationUrl:i}){await this.prisma.certification.create({data:{title:r,description:t,certificationUrl:i,user:{connect:{id:e}}}})}async find({pagination:{limit:e,offset:r},filter:{description:t,orderBy:i,title:s,userId:n}}){let a={userId:n},c=[];return s&&c.push({title:{contains:s,mode:"insensitive"}}),t&&c.push({description:{contains:t,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.certification.findMany({where:a,include:{user:{omit:{passwordHash:!0}}},skip:r,take:e,orderBy:{updatedAt:i}})}async findById(e){return await this.prisma.certification.findFirst({where:{id:e}})}async findByUserId({pagination:{limit:e,offset:r},filter:{description:t,orderBy:i,title:s},userId:n}){let a={userId:n},c=[];return s&&c.push({title:{contains:s,mode:"insensitive"}}),t&&c.push({description:{contains:t,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.certification.findMany({where:a,include:{user:{omit:{passwordHash:!0}}},skip:r,take:e,orderBy:{updatedAt:i}})}async update({id:e,...r}){await this.prisma.certification.update({where:{id:e},data:r})}async deleteById(e){await this.prisma.certification.delete({where:{id:e}})}async count({filter:{description:e,title:r,userId:t}}){let i={};r&&(i.title={contains:r,mode:"insensitive"});let s=[];return e&&s.push({description:{contains:e,mode:"insensitive"}}),t&&s.push({userId:t}),s.length>0&&(i.OR=s),await this.prisma.certification.count({where:i})}};function ae(){return new kr(T)}var _r=class{constructor(e){this.prisma=e}async create({authorId:e,...r}){return await this.prisma.news.create({data:{...r,author:{connect:{id:e}}}})}async find({pagination:{offset:e,limit:r},filter:{authorId:t,content:i,title:s,orderBy:n}}){let a={};t&&(a.authorId={contains:t,mode:"insensitive"});let c=[];return s&&c.push({title:{contains:s,mode:"insensitive"}}),i&&c.push({content:{contains:i,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.news.findMany({where:a,omit:{authorId:!0},include:{author:!0},orderBy:{updatedAt:n},skip:e,take:r})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},omit:{authorId:!0},include:{author:!0}})}async findByAuthorId({authorId:e,pagination:{offset:r,limit:t},filter:{orderBy:i="desc",content:s,title:n}}){let a={authorId:e},c=[];return n&&c.push({title:{contains:n,mode:"insensitive"}}),s&&c.push({content:{contains:s,mode:"insensitive"}}),c.length>0&&(a.OR=c),await this.prisma.news.findMany({omit:{authorId:!0},where:a,orderBy:{updatedAt:i},skip:r,take:t})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,imageUrl:e.imageUrl}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{authorId:e,content:r,title:t}}){let i={};e&&(i.authorId={contains:e,mode:"insensitive"});let s=[];return t&&s.push({title:{contains:t,mode:"insensitive"}}),r&&s.push({content:{contains:r,mode:"insensitive"}}),s.length>0&&(i.OR=s),await this.prisma.news.count({where:i})}};function $(){return new _r(T)}var Wr=class{constructor(e){this.prisma=e}async create(e){await this.prisma.pendency.create({data:e})}async find({filter:{description:e,orderBy:r,title:t,status:i,userId:s},pagination:{limit:n,offset:a}}){let c={userId:s,AND:{status:{equals:i}}};e&&(c.description={contains:e,mode:"insensitive"});let l=[];return t&&l.push({title:{contains:t,mode:"insensitive"}}),l.length>0&&(c.OR=l),await this.prisma.pendency.findMany({where:c,orderBy:{updatedAt:r},include:{user:{omit:{passwordHash:!0}}},skip:a,take:n})}async findById(e){return await this.prisma.pendency.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId({filter:{description:e,orderBy:r,title:t,status:i},pagination:{limit:s,offset:n},userId:a}){let c={userId:a,AND:{status:{equals:i}}},l=[];return e&&l.push({description:{contains:e,mode:"insensitive"}}),t&&l.push({title:{contains:t,mode:"insensitive"}}),l.length>0&&(c.OR=l),await this.prisma.pendency.findMany({where:c,orderBy:{updatedAt:r},skip:n,take:s})}async update({id:e,...r}){await this.prisma.pendency.update({where:{id:e},data:r})}async deleteById(e){await this.prisma.pendency.delete({where:{id:e}})}async count({filter:{description:e,title:r,status:t,userId:i}}){let s={userId:i},n=[];return e&&n.push({description:{contains:e,mode:"insensitive"}}),r&&n.push({title:{contains:r,mode:"insensitive"}}),t&&n.push({status:{equals:t}}),n.length>0&&(s.OR=n),await this.prisma.pendency.count({where:s})}};function me(){return new Wr(T)}var zr=class{constructor(e){this.prisma=e}async create(e){await this.prisma.user.create({data:e})}async update(e){await this.prisma.user.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.user.delete({where:{id:e}})}async find(){return await this.prisma.user.findMany({omit:{passwordHash:!0}})}async findByEmail(e){return await this.prisma.user.findFirst({where:{emailAddress:e}})}async findById(e){return await this.prisma.user.findFirst({where:{id:e},omit:{passwordHash:!0}})}};function M(){return new zr(T)}import{compare as va,hash as Ca}from"bcryptjs";var Hr=class{constructor(e,r){this.hashFn=e;this.compareFn=r}async hash(e){return await this.hashFn(e,6)}async compare({password:e,hashedPassword:r}){return await this.compareFn(e,r)}};function co(){return new Hr(Ca,va)}import Pi from"jsonwebtoken";import O from"zod";var Ta=O.object({JWT_SECRET:O.string(),FIREBASE_BUCKET:O.string(),FIREBASE_CLIENT_EMAIL:O.string(),FIREBASE_PRIVATE_KEY:O.string(),FIREBASE_PROJECT_ID:O.string(),FIREBASE_TYPE:O.string(),FIREBASE_PRIVATE_KEY_ID:O.string(),FIREBASE_CLIENT_ID:O.string(),FIREBASE_AUTH_URI:O.string(),FIREBASE_TOKEN_URI:O.string(),FIREBASE_AUTH_PROVIDER_X509_CERT_URL:O.string(),FIREBASE_CLIENT_X509_CERT_URL:O.string()}),U=Ta.parse(process.env);var Lr=class{constructor(e,r){this.signFn=e;this.verifyFn=r}sign(e){try{return this.signFn(e,U.JWT_SECRET,{expiresIn:"3d",subject:e.id})}catch{return null}}verify(e){try{return this.verifyFn(e,U.JWT_SECRET)}catch{return null}}};function Zr(){return new Lr(Pi.sign,Pi.verify)}function Ai(){return{signUpController:new Le(M(),co())}}function Ui(){return{signInController:new ze(M(),co(),Zr())}}function Fi(){return{findAuthenticatedUserController:new Or(M())}}function Mi(){return{findAuthenticatedUserController:new ke($())}}function qi(){return{findAuthenticatedUserCertificationsController:new Oe(ae())}}function Ni(){return{findAuthenticatedUserPendenciesController:new _e(me())}}var Vr=class{constructor(e){this.jwtService=e}authenticated(e,r,t){let i=e.headers.authorization;if(!i?.startsWith("Bearer "))return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let s=i.split(" ")[1];if(!s)return r.status(401).json({message:"Token n\xE3o fornecido."});try{let n=this.jwtService.verify(s);if(!n)return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});e.user=n,t()}catch(n){if(console.log(n),n instanceof Error)return r.status(401).json({message:n.message})}}isAdmin(e,r,t){let i=e.headers.authorization;if(!i?.startsWith("Bearer "))return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let s=i.split(" ")[1];if(!s)return r.status(401).json({message:"Token n\xE3o fornecido."});try{let n=this.jwtService.verify(s);if(!n)return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});if(n.role!=="ADMIN")return r.status(401).json({message:"\xC9 necess\xE1rio ter permiss\xF5es de administrador."});t()}catch(n){if(console.log(n),n instanceof Error)return r.status(401).json({message:n.message})}}};function S(){return{authMiddleware:new Vr(Zr())}}var J=ja(),{authMiddleware:Me}=S();J.post("/sign-up",async(o,e)=>{let{signUpController:r}=Ai();await r.handle(o,e)});J.post("/sign-in",async(o,e)=>{let{signInController:r}=Ui();await r.handle(o,e)});J.get("/user",(o,e,r)=>{Me.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserController:r}=Fi();await r.handle(o,e)});J.get("/user/news",(o,e,r)=>{Me.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserController:r}=Mi();await r.handle(o,e)});J.get("/admin",(o,e,r)=>{Me.isAdmin(o,e,r)},(o,e)=>{try{e.status(200).json({success:!0})}catch(r){r instanceof Error&&e.status(500).json({message:r.message})}});J.get("/certifications",(o,e,r)=>{Me.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserCertificationsController:r}=qi();await r.handle(o,e)});J.get("/pendencies",(o,e,r)=>{Me.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserPendenciesController:r}=Ni();await r.handle(o,e)});import{Router as Fa}from"express";import{getStorage as xa}from"firebase-admin/storage";import{config as Sa}from"dotenv";import Bi from"firebase-admin";Sa();var po=Bi.initializeApp({credential:Bi.credential.cert({clientEmail:U.FIREBASE_CLIENT_EMAIL,privateKey:U.FIREBASE_PRIVATE_KEY,projectId:U.FIREBASE_PROJECT_ID,type:U.FIREBASE_TYPE,privateKeyId:U.FIREBASE_PRIVATE_KEY_ID,clientId:U.FIREBASE_CLIENT_ID,authUri:U.FIREBASE_AUTH_URI,tokenUri:U.FIREBASE_TOKEN_URI,authProviderX509CertUrl:U.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:U.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:U.FIREBASE_BUCKET});po.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var Pa=xa(po),Di=Pa.bucket(U.FIREBASE_BUCKET);import{randomUUID as Aa}from"node:crypto";var Ua=/https:\/\/storage\.googleapis\.com\/[^/]+\/(.+)$/,Kr=class{constructor(e){this.bucket=e}async uploadFile({file:e,folder:r,id:t}){let i=`${Aa()}-${e?.originalname}`,s=this.bucket.file(`${r}/${t}/${i}`);return await new Promise((n,a)=>{let c=s.createWriteStream({metadata:{contentType:e?.mimetype}});c.on("error",l=>{a(l)}),c.on("finish",async()=>{try{await s.makePublic();let l=`https://storage.googleapis.com/${this.bucket.name}/${s.name}`;n(l)}catch(l){a(l)}}),c.end(e.buffer)})}async updateFile({file:e,id:r,fileUrl:t,folder:i}){try{let s=this.getPath(t);if(!s)throw new Error("Arquivo n\xE3o encontrado.");let[n,a]=await Promise.all([this.bucket.file(s).delete(),this.uploadFile({file:e,id:r,folder:i})]);return a}catch{throw new Error("Erro ao atualizar o arquivo.")}}async deleteFile({fileUrl:e}){let r=this.getPath(e);if(!r)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(r).delete()}catch{throw new Error("Erro ao deletar o arquivo.")}}getPath(e){let r=e.match(Ua);return r?r[1]:null}};function P(){return new Kr(Di)}function Oi(){return{registerCertificationController:new Ge(M(),ae(),P())}}function ki(){return{findCertificationsController:new Ke(ae())}}function _i(){return{findCertificationByIdController:new Ve(ae())}}function Wi(){return{updateCertificationController:new Je(ae(),P())}}function zi(){return{deleteCertificationController:new Ze(ae(),P())}}import Hi from"multer";var N=Hi({storage:Hi.memoryStorage()});var he=Fa(),{authMiddleware:qe}=S();he.post("/:user_id",(o,e,r)=>{qe.isAdmin(o,e,r)},N.single("certification"),async(o,e)=>{let{registerCertificationController:r}=Oi();await r.handle(o,e)});he.get("/",(o,e,r)=>{qe.isAdmin(o,e,r)},async(o,e)=>{let{findCertificationsController:r}=ki();await r.handle(o,e)});he.get("/:certification_id",(o,e,r)=>{qe.isAdmin(o,e,r)},async(o,e)=>{let{findCertificationByIdController:r}=_i();await r.handle(o,e)});he.put("/:certification_id",(o,e,r)=>{qe.isAdmin(o,e,r)},N.single("certification"),async(o,e)=>{let{updateCertificationController:r}=Wi();await r.handle(o,e)});he.delete("/:certification_id",(o,e,r)=>{qe.isAdmin(o,e,r)},async(o,e)=>{let{deleteCertificationController:r}=zi();await r.handle(o,e)});import{Router as Da}from"express";import{extendZodWithOpenApi as Ma}from"@asteasolutions/zod-to-openapi";import Y from"zod";var qa=1,Na=9;Ma(Y);var Ba=Y.object({page:Y.coerce.number().min(1).default(qa),limit:Y.coerce.number().min(1).default(Na),code:Y.string().optional(),title:Y.string().optional(),description:Y.string().optional(),notes:Y.string().optional(),orderBy:Y.enum(["asc","desc"]).optional()}),Gr=class{constructor(e){this.etpRepository=e}async handle(e,r){try{let{page:t,limit:i,...s}=Ba.parse(e.query),n=i*t-i,[a,c]=await Promise.all([this.etpRepository.find({pagination:{offset:n,limit:i},filter:s}),this.etpRepository.count({filter:s})]),l=Math.max(Math.ceil(c/i),1);r.status(200).json({page:t,totalPages:l,offset:n,limit:i,etps:a})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var $r=class{constructor(e){this.prisma=e}async create(e){let{leaderId:r,deputyLeaderId:t,secretaryId:i,memberIds:s,...n}=e;return await this.prisma.$transaction(async a=>{let c=await a.eTP.create({data:n});return await a.eTPLeader.create({data:{etpId:c.id,researcherId:r}}),await a.eTPDeputy.create({data:{etpId:c.id,researcherId:t}}),await a.eTPSecretary.create({data:{etpId:c.id,researcherId:i}}),await a.eTP.update({where:{id:c.id},data:{members:{connect:s.map(l=>({id:l}))}}}),c})}async update(e){let{leaderId:r,deputyLeaderId:t,secretaryId:i,memberIds:s,...n}=e;return await this.prisma.$transaction(async a=>{let c=await a.eTP.update({where:{id:e.id},data:n});return await this.updateLeader(a,e.id,r),await this.updateDeputyLeader(a,e.id,t),await this.updateSecretary(a,e.id,i),await this.updateMembers(a,e.id,s),c})}async updateLeader(e,r,t){t!==void 0&&(await e.eTPLeader.deleteMany({where:{etpId:r}}),t&&await e.eTPLeader.create({data:{etpId:r,researcherId:t}}))}async updateDeputyLeader(e,r,t){t!==void 0&&(await e.eTPDeputy.deleteMany({where:{etpId:r}}),t&&await e.eTPDeputy.create({data:{etpId:r,researcherId:t}}))}async updateSecretary(e,r,t){t!==void 0&&(await e.eTPSecretary.deleteMany({where:{etpId:r}}),t&&await e.eTPSecretary.create({data:{etpId:r,researcherId:t}}))}async updateMembers(e,r,t){t!==void 0&&await e.eTP.update({where:{id:r},data:{members:{set:t.map(i=>({id:i}))}}})}async deleteById(e){await this.prisma.eTP.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{code:t,title:i,description:s,notes:n,orderBy:a}}){let c={};return t&&(c.code={contains:t,mode:"insensitive"}),i&&(c.title={contains:i,mode:"insensitive"}),s&&(c.description={contains:s,mode:"insensitive"}),n&&(c.notes={contains:n,mode:"insensitive"}),await this.prisma.eTP.findMany({where:c,include:{leader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},deputyLeader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},secretary:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},members:{include:{user:{omit:{passwordHash:!0}}}}},orderBy:a?{updatedAt:a}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.eTP.findFirst({where:{id:e},include:{leader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},deputyLeader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},secretary:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},members:{include:{user:{omit:{passwordHash:!0}}}}}})}async findByCode(e){return await this.prisma.eTP.findFirst({where:{code:e},include:{leader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},deputyLeader:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},secretary:{include:{researcher:{include:{user:{omit:{passwordHash:!0}}}}}},members:{include:{user:{omit:{passwordHash:!0}}}}}})}async count({filter:{code:e,title:r,description:t,notes:i}}){let s={};return e&&(s.code={contains:e,mode:"insensitive"}),r&&(s.title={contains:r,mode:"insensitive"}),t&&(s.description={contains:t,mode:"insensitive"}),i&&(s.notes={contains:i,mode:"insensitive"}),await this.prisma.eTP.count({where:s})}};function je(){return new $r(T)}function Li(){return{createETPController:new Xe(je())}}function Zi(){return{findETPsController:new Gr(je())}}function Vi(){return{findETPByIdController:new er(je())}}function Ki(){return{updateETPController:new tr(je())}}function Gi(){return{deleteETPController:new Qe(je())}}var ge=Da(),{authMiddleware:uo}=S();ge.post("/",(o,e,r)=>{uo.authenticated(o,e,r)},async(o,e)=>{let{createETPController:r}=Li();await r.handle(o,e)});ge.get("/",async(o,e)=>{let{findETPsController:r}=Zi();await r.handle(o,e)});ge.get("/:id",async(o,e)=>{let{findETPByIdController:r}=Vi();await r.handle(o,e)});ge.put("/:id",(o,e,r)=>{uo.authenticated(o,e,r)},async(o,e)=>{let{updateETPController:r}=Ki();await r.handle(o,e)});ge.delete("/:id",(o,e,r)=>{uo.authenticated(o,e,r)},async(o,e)=>{let{deleteETPController:r}=Gi();await r.handle(o,e)});import{Router as Oa}from"express";var Jr=class{constructor(e){this.prisma=e}async create(e){return await this.prisma.inMemoriam.create({data:e})}async update(e){return await this.prisma.inMemoriam.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.inMemoriam.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{name:t,biography:i,role:s,orderBy:n}}){let a={};return t&&(a.name={contains:t,mode:"insensitive"}),i&&(a.biography={contains:i,mode:"insensitive"}),s&&(a.role=s),await this.prisma.inMemoriam.findMany({where:a,orderBy:n?{updatedAt:n}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.inMemoriam.findFirst({where:{id:e}})}async findByRole(e){return await this.prisma.inMemoriam.findMany({where:{role:e}})}async count({filter:{name:e,biography:r,role:t}}){let i={};return e&&(i.name={contains:e,mode:"insensitive"}),r&&(i.biography={contains:r,mode:"insensitive"}),t&&(i.role=t),await this.prisma.inMemoriam.count({where:i})}};function Re(){return new Jr(T)}function $i(){return{createInMemoriamController:new ir(Re(),P())}}function Ji(){return{findInMemoriamsController:new cr(Re())}}function Yi(){return{findInMemoriamByIdController:new nr(Re())}}function Xi(){return{findInMemoriamByRoleController:new mr(Re())}}function Qi(){return{updateInMemoriamController:new pr(Re(),P())}}function es(){return{deleteInMemoriamController:new sr(Re(),P())}}var ce=Oa(),{authMiddleware:lo}=S();ce.post("/",(o,e,r)=>{lo.authenticated(o,e,r)},N.single("photo"),async(o,e)=>{let{createInMemoriamController:r}=$i();await r.handle(o,e)});ce.get("/",async(o,e)=>{let{findInMemoriamsController:r}=Ji();await r.handle(o,e)});ce.get("/:id",async(o,e)=>{let{findInMemoriamByIdController:r}=Yi();await r.handle(o,e)});ce.get("/role/:role",async(o,e)=>{let{findInMemoriamByRoleController:r}=Xi();await r.handle(o,e)});ce.put("/:id",(o,e,r)=>{lo.authenticated(o,e,r)},N.single("photo"),async(o,e)=>{let{updateInMemoriamController:r}=Qi();await r.handle(o,e)});ce.delete("/:id",(o,e,r)=>{lo.authenticated(o,e,r)},async(o,e)=>{let{deleteInMemoriamController:r}=es();await r.handle(o,e)});import{Router as ka}from"express";var yo=ka();yo.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as Ka}from"express";import{extendZodWithOpenApi as _a}from"@asteasolutions/zod-to-openapi";import fo from"zod";_a(fo);var Wa=fo.object({id:fo.string()}),Yr=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=Wa.parse(e.params),i=e.user.id,s=await this.newsRepository.findById(t);if(!s)throw new E("Not\xEDcia n\xE3o encontrada.");if(s.author.id!==i)throw new k("Sem permiss\xE3o.");await Promise.all([this.newsRepository.delete(t),this.firebaseStorageService.deleteFile({fileUrl:s.imageUrl})]),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as za}from"@asteasolutions/zod-to-openapi";import Se from"zod";var Ha=5,rs=1024,La=rs*rs,Za=Ha*La;za(Se);var Va=Se.object({id:Se.string(),title:Se.string().min(1),content:Se.string().min(1),image:Se.any().optional().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=Za,"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB.")}),Xr=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t,title:i,content:s,image:n}=Va.parse({id:e.params.id,image:e.file,...e.body}),a=await this.newsRepository.findById(t);if(!a)throw new E("Not\xEDcia n\xE3o encontrada.");let c=e.user.id;if(a.author.id!==c)throw new k("Sem permiss\xE3o.");let l=a.imageUrl||"";n&&a.imageUrl&&(l=await this.firebaseStorageService.updateFile({file:n,folder:x.NEWS,id:t,fileUrl:a.imageUrl}));let v=await this.newsRepository.update({id:t,title:i,content:s,imageUrl:l});r.status(200).json(v)}catch(t){if(t instanceof Error)throw new m(t.message)}}};function ts(){return{createNewsController:new dr($(),P())}}function os(){return{findAllNewsController:new fr($())}}function is(){return{findNewsByIdController:new yr($())}}function ss(){return{findNewsByAuthorIdController:new ur($())}}function ns(){return{updateNewsController:new Xr($(),P())}}function as(){return{deleteNewsController:new Yr($(),P())}}var pe=Ka(),{authMiddleware:ho}=S();pe.post("/",(o,e,r)=>{ho.authenticated(o,e,r)},N.single("image"),async(o,e)=>{let{createNewsController:r}=ts();await r.handle(o,e)});pe.get("/",async(o,e)=>{let{findAllNewsController:r}=os();await r.handle(o,e)});pe.get("/:id",async(o,e)=>{let{findNewsByIdController:r}=is();await r.handle(o,e)});pe.get("/author/:authorId",async(o,e)=>{let{findNewsByAuthorIdController:r}=ss();await r.handle(o,e)});pe.put("/:id",(o,e,r)=>{ho.authenticated(o,e,r)},N.single("image"),async(o,e)=>{let{updateNewsController:r}=ns();await r.handle(o,e)});pe.delete("/:id",(o,e,r)=>{ho.authenticated(o,e,r)},async(o,e)=>{let{deleteNewsController:r}=as();await r.handle(o,e)});import{Router as Ga}from"express";function ms(){return{createPendencyController:new hr(M(),me(),P())}}function cs(){return{findPendenciesController:new Ir(me())}}function ps(){return{findPendencyByIdController:new wr(me())}}function ds(){return{updatePendencyController:new br(me(),P())}}function us(){return{deletePendencyController:new Rr(me(),P())}}var Ie=Ga(),{authMiddleware:Ne}=S();Ie.post("/:user_id",(o,e,r)=>{Ne.isAdmin(o,e,r)},N.single("document"),async(o,e)=>{let{createPendencyController:r}=ms();await r.handle(o,e)});Ie.get("/",(o,e,r)=>{Ne.isAdmin(o,e,r)},async(o,e)=>{let{findPendenciesController:r}=cs();await r.handle(o,e)});Ie.get("/:pendency_id",(o,e,r)=>{Ne.isAdmin(o,e,r)},async(o,e)=>{let{findPendencyByIdController:r}=ps();await r.handle(o,e)});Ie.put("/:pendency_id",(o,e,r)=>{Ne.isAdmin(o,e,r)},N.single("document"),async(o,e)=>{let{updatePendencyController:r}=ds();await r.handle(o,e)});Ie.delete("/:pendency_id",(o,e,r)=>{Ne.isAdmin(o,e,r)},async(o,e)=>{let{deletePendencyController:r}=us();await r.handle(o,e)});import{Router as Qa}from"express";import{extendZodWithOpenApi as $a}from"@asteasolutions/zod-to-openapi";import B from"zod";var Ja=1,Ya=9;$a(B);var Xa=B.object({page:B.coerce.number().min(1).default(Ja),limit:B.coerce.number().min(1).default(Ya),userId:B.string().optional(),registrationNumber:B.string().optional(),name:B.string().optional(),emailAddress:B.string().optional(),mainEtps:B.string().optional(),formations:B.string().optional(),occupations:B.string().optional(),institutions:B.string().optional(),biography:B.string().optional(),orderBy:B.enum(["asc","desc"]).optional()}),Qr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{page:t,limit:i,...s}=Xa.parse(e.query),n=i*t-i,[a,c]=await Promise.all([this.researcherRepository.find({pagination:{offset:n,limit:i},filter:{userName:s.name,...s}}),this.researcherRepository.count({filter:{userName:s.name,...s}})]),l=Math.max(Math.ceil(c/i),1);r.status(200).json({page:t,totalPages:l,offset:n,limit:i,researchers:a})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var et=class{constructor(e){this.prisma=e}async create(e){return await this.prisma.researcher.create({data:e})}async update(e){return await this.prisma.researcher.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.researcher.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{biography:t,degrees:i,formations:s,institutions:n,mainEtps:a,occupations:c,orderBy:l,registrationNumber:v,seniority:C,userId:j,userName:D}}){let L={OR:D?[{user:{name:{contains:D,mode:"insensitive"}}}]:void 0};return v&&L.OR?.push({registrationNumber:{contains:v,mode:"insensitive"}}),a&&(L.mainEtps={contains:a,mode:"insensitive"}),s&&(L.formations={contains:s,mode:"insensitive"}),i&&i.length>0&&(L.degrees={hasSome:i}),c&&(L.occupations={contains:c,mode:"insensitive"}),C&&(L.seniority=C),n&&(L.institutions={contains:n,mode:"insensitive"}),t&&(L.biography={contains:t,mode:"insensitive"}),j&&(L.userId={equals:j}),await this.prisma.researcher.findMany({where:L,omit:{userId:!0},include:{user:{omit:{passwordHash:!0}}},orderBy:l?{updatedAt:l}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.researcher.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId(e){return await this.prisma.researcher.findFirst({where:{userId:e},include:{user:{omit:{passwordHash:!0}}}})}async findByRegistrationNumber(e){return await this.prisma.researcher.findFirst({where:{registrationNumber:e},include:{user:{omit:{passwordHash:!0}}}})}async count({filter:{biography:e,degrees:r,formations:t,institutions:i,mainEtps:s,occupations:n,registrationNumber:a,seniority:c,userId:l,userName:v}}){let C={OR:v?[{user:{name:{contains:v,mode:"insensitive"}}}]:void 0};return a&&C.OR?.push({registrationNumber:{contains:a,mode:"insensitive"}}),s&&(C.mainEtps={contains:s,mode:"insensitive"}),t&&(C.formations={contains:t,mode:"insensitive"}),r&&r.length>0&&(C.degrees={hasSome:r}),n&&(C.occupations={contains:n,mode:"insensitive"}),c&&(C.seniority=c),i&&(C.institutions={contains:i,mode:"insensitive"}),e&&(C.biography={contains:e,mode:"insensitive"}),l&&(C.userId={equals:l}),await this.prisma.researcher.count({where:C})}};function we(){return new et(T)}function ls(){return{createResearcherController:new vr(we())}}function ys(){return{findResearchersController:new Qr(we())}}function fs(){return{findResearcherByIdController:new Tr(we())}}function hs(){return{findResearcherByUserIdController:new Sr(we())}}function gs(){return{updateResearcherController:new xr(we())}}function Rs(){return{deleteResearcherController:new Cr(we())}}var de=Qa(),{authMiddleware:go}=S();de.post("/",(o,e,r)=>{go.authenticated(o,e,r)},async(o,e)=>{let{createResearcherController:r}=ls();await r.handle(o,e)});de.get("/",async(o,e)=>{let{findResearchersController:r}=ys();await r.handle(o,e)});de.get("/:id",async(o,e)=>{let{findResearcherByIdController:r}=fs();await r.handle(o,e)});de.get("/user/:userId",async(o,e)=>{let{findResearcherByUserIdController:r}=hs();await r.handle(o,e)});de.put("/:id",(o,e,r)=>{go.authenticated(o,e,r)},async(o,e)=>{let{updateResearcherController:r}=gs();await r.handle(o,e)});de.delete("/:id",(o,e,r)=>{go.authenticated(o,e,r)},async(o,e)=>{let{deleteResearcherController:r}=Rs();await r.handle(o,e)});import{Router as mm}from"express";import{extendZodWithOpenApi as em}from"@asteasolutions/zod-to-openapi";import be from"zod";em(be);var rm=be.object({teamId:be.uuid(),member:be.object({userId:be.uuid(),role:be.string(),description:be.string()})}),rt=class{constructor(e,r){this.teamMemberRepository=e;this.userRepository=r}async handle(e,r){try{let{teamId:t,member:{userId:i,...s}}=rm.parse({...e.body,teamId:e.params.teamId});if(!await this.userRepository.findById(i))throw new E("O usu\xE1rio n\xE3o existe.");let a=await this.teamMemberRepository.create({...s,userId:i,teamId:t});r.status(201).json(a)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as tm}from"@asteasolutions/zod-to-openapi";import{z as Ro}from"zod";tm(Ro);var om=Ro.object({id:Ro.uuid()}),tt=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{id:t}=om.parse(e.params);await this.teamMemberRepository.delete(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as im}from"@asteasolutions/zod-to-openapi";import{z as Io}from"zod";im(Io);var sm=Io.object({id:Io.uuid()}),ot=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{id:t}=sm.parse(e.params),i=await this.teamMemberRepository.findById(t);if(!i)throw new E("Membro n\xE3o encontrado.");r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as nm}from"@asteasolutions/zod-to-openapi";import{z as xe}from"zod";nm(xe);var am=xe.object({id:xe.uuid(),role:xe.string(),userId:xe.string(),description:xe.string()}),it=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let t=am.parse(e.body),i=await this.teamMemberRepository.update(t);r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var X=class{constructor(e){this.prisma=e}async findById(e){return await this.prisma.teamMember.findFirst({where:{id:e}})}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{teamId:e}})}async create({description:e,role:r,teamId:t,userId:i}){return await this.prisma.teamMember.create({data:{role:r,description:e,teamId:t,userId:i}})}async update({id:e,...r}){return await this.prisma.teamMember.update({where:{id:e},data:r})}async updateMany({members:e,teamId:r}){await Promise.all(e.map(async({user:t,role:i})=>{let s=await this.prisma.teamMember.findFirst({where:{teamId:r,userId:t.id},include:{user:!0}});s?await this.prisma.teamMember.update({where:{id:s.id},data:{role:i}}):await this.prisma.teamMember.create({data:{teamId:r,userId:t.id,role:i}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async r=>{await this.prisma.teamMember.delete({where:{id:r}})}))}};function Is(){return{createTeamMemberController:new rt(new X(T),M())}}function ws(){return{findTeamMemberController:new ot(new X(T))}}function bs(){return{updateTeamMemberController:new it(new X(T))}}function Es(){return{deleteTeamMemberController:new tt(new X(T))}}var Pe=mm(),{authMiddleware:st}=S();Pe.post("/:teamId/member",(o,e,r)=>{st.isAdmin(o,e,r)},async(o,e)=>{let{createTeamMemberController:r}=Is();await r.handle(o,e)});Pe.get("/member/:id",(o,e,r)=>{st.isAdmin(o,e,r)},async(o,e)=>{let{findTeamMemberController:r}=ws();await r.handle(o,e)});Pe.put("/member/:id",(o,e,r)=>{st.isAdmin(o,e,r)},async(o,e)=>{let{updateTeamMemberController:r}=bs();await r.handle(o,e)});Pe.delete("/member/:id",(o,e,r)=>{st.isAdmin(o,e,r)},async(o,e)=>{let{deleteTeamMemberController:r}=Es();await r.handle(o,e)});import{Router as dm}from"express";import{extendZodWithOpenApi as cm}from"@asteasolutions/zod-to-openapi";import{z as wo}from"zod";cm(wo);var pm=wo.object({id:wo.uuid()}),nt=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=pm.parse(e.params);await this.teamRepository.delete(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var at=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let t=await this.teamRepository.findAll();return r.status(200).json(t)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var mt=class{constructor(e){this.prisma=e}async create({members:e,name:r,type:t}){return await this.prisma.team.create({data:{name:r,type:t,members:{create:e.map(({role:i,user:s})=>({role:i,user:{connect:{id:s.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:r}}){let t={type:e};return r&&(t.name={contains:r,mode:"insensitive"}),await this.prisma.team.findMany({where:t,include:{members:{include:{user:!0}}}})}async update({id:e,name:r}){return await this.prisma.team.update({where:{id:e},data:{name:r}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function Ee(){return new mt(T)}function vs(){return new X(T)}function Cs(){return{findTeamsController:new at(Ee())}}function Ts(){return{findTeamByIdController:new Ar(Ee())}}function js(){return{findTeamByTypeController:new Fr(Ee())}}function Ss(){return{createTeamController:new Pr(Ee())}}function xs(){return{updateTeamController:new Mr(Ee(),vs())}}function Ps(){return{deleteTeamController:new nt(Ee())}}var ue=dm(),{authMiddleware:bo}=S();ue.get("/",async(o,e)=>{let{findTeamsController:r}=Cs();await r.handle(o,e)});ue.get("/id/:id",async(o,e)=>{let{findTeamByIdController:r}=Ts();await r.handle(o,e)});ue.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:r}=js();await r.handle(o,e)});ue.post("/",(o,e,r)=>{bo.isAdmin(o,e,r)},async(o,e)=>{let{createTeamController:r}=Ss();await r.handle(o,e)});ue.put("/:id",(o,e,r)=>{bo.isAdmin(o,e,r)},async(o,e)=>{let{updateTeamController:r}=xs();await r.handle(o,e)});ue.delete("/:id",(o,e,r)=>{bo.isAdmin(o,e,r)},async(o,e)=>{let{deleteTeamController:r}=Ps();await r.handle(o,e)});import{Router as um}from"express";var ct=class{constructor(e){this.userRepository=e}async handle(e,r){try{let t=await this.userRepository.find();r.status(200).json(t)}catch(t){if(t instanceof Error)throw new m(t.message)}}};function As(){return{updateUserController:new Dr(M(),P())}}function Us(){return{deleteUserController:new qr(M())}}function Fs(){return{findUsersController:new ct(M())}}function Ms(){return{findUserController:new Nr(M())}}var Ae=um(),{authMiddleware:qs}=S();Ae.get("/:id",async(o,e)=>{let{findUserController:r}=Ms();await r.handle(o,e)});Ae.put("/",(o,e,r)=>{qs.authenticated(o,e,r)},N.single("avatarImage"),async(o,e)=>{let{updateUserController:r}=As();await r.handle(o,e)});Ae.delete("/:id",(o,e,r)=>{qs.authenticated(o,e,r)},async(o,e)=>{let{deleteUserController:r}=Us();await r.handle(o,e)});Ae.get("/",async(o,e)=>{let{findUsersController:r}=Fs();await r.handle(o,e)});var A=Eo(),fm={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};A.use(ym(fm));A.use(Eo.json());A.use(Eo.urlencoded({extended:!1}));A.use("/docs",lm({content:xi,theme:"kepler"}));A.use("/",yo);A.use("/auth",J);A.use("/user",Ae);A.use("/news",pe);A.use("/team",ue);A.use("/team",Pe);A.use("/certification",he);A.use("/pendency",Ie);A.use("/researcher",de);A.use("/in-memoriam",ce);A.use("/etp",ge);A.use((o,e,r,t)=>{let{errorHandler:i}=vo();i.handle(o,e,r,t)});var gm=hm.createServer(A),Ns=4e3;gm.listen(Ns,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${Ns}.`)});
