import Es from"node:http";import{apiReference as bs}from"@scalar/express-api-reference";import vs from"cors";import sr from"express";import Do from"zod";var w=class extends Error{};var oe=class extends Error{};var p=class extends Error{};var I=class extends Error{};var F=class extends Error{};import{ZodError as Oo}from"zod";var he=class extends Oo{};var ge=class{handle(e,t,r,i){return e instanceof he?r.status(400).json({message:"Validation error",error:Do.treeifyError(e)}):e instanceof w?r.status(400).json({message:e.message}):e instanceof I?r.status(404).json({message:e.message}):e instanceof F?r.status(401).json({message:e.message}):e instanceof oe?r.status(409).json({message:e.message}):e instanceof p?r.status(500).json({message:e.message}):r.status(500).json({message:"Internal server error"})}};function nr(){return{errorHandler:new ge}}import{OpenAPIRegistry as Oi,OpenApiGeneratorV3 as Di}from"@asteasolutions/zod-to-openapi";import{$Enums as ar}from"@prisma/client";import n from"zod";import{extendZodWithOpenApi as ko}from"@asteasolutions/zod-to-openapi";import $ from"zod";var _o=1,Mo=6;ko($);var bt=$.object({page:$.coerce.number().min(1).default(_o),limit:$.coerce.number().min(1).default(Mo),title:$.string(),description:$.string(),orderBy:$.enum(["asc","desc"]).default("desc")}),Re=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let{title:r,description:i,limit:s,orderBy:a,page:m}=bt.parse(e.query),f=m*s-s,h=e.user.id,[b,A]=await Promise.all([this.certificationRepository.findByUserId({userId:h,pagination:{offset:f,limit:s},filter:{title:r,description:i,orderBy:a}}),this.certificationRepository.count({filter:{title:r,description:i,userId:h}})]),U=Math.max(Math.ceil(A/s),1);return t.status(200).json({page:m,totalPages:U,offset:f,limit:s,certifications:b})}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Wo}from"@asteasolutions/zod-to-openapi";import Y from"zod";var zo=1,Ho=7;Wo(Y);var vt=Y.object({page:Y.coerce.number().min(1).default(zo),limit:Y.coerce.number().min(1).default(Ho),title:Y.string().optional(),content:Y.string().optional(),orderBy:Y.enum(["asc","desc"]).default("desc")}),Ie=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let{page:r,limit:i,content:s,orderBy:a,title:m}=vt.parse({page:e.query.page,limit:e.query.limit,title:e.query.title,content:e.query.content,orderBy:e.query.order_by}),f=i*r-i,h=e.user.id,[b,A]=await Promise.all([this.newsRepository.findByAuthorId({authorId:h,pagination:{offset:f,limit:i},filter:{orderBy:a,title:m,content:s}}),this.newsRepository.count({filter:{authorId:h,content:s,title:m}})]),U=Math.ceil(A/i);t.status(200).json({page:r,totalPages:U,offset:f,limit:i,news:b})}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Lo}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Zo}from"@prisma/client";import M from"zod";var Vo=1,Ko=6;Lo(M);var Ct=M.object({page:M.coerce.number().min(1).default(Vo),limit:M.coerce.number().min(1).default(Ko),title:M.string().optional(),description:M.string().optional(),status:M.enum(Zo).default("PENDING"),orderBy:M.enum(["asc","desc"]).default("desc")}),we=class{constructor(e){this.pendencyRepository=e}async handle(e,t){try{let{title:r,description:i,limit:s,orderBy:a,page:m,status:f}=Ct.parse(e.query),h=m*s-s,b=e.user.id,[A,U]=await Promise.all([this.pendencyRepository.findByUserId({userId:b,pagination:{offset:h,limit:s},filter:{title:r,description:i,orderBy:a,status:f}}),this.pendencyRepository.count({filter:{title:r,description:i,userId:b,status:f}})]),wt=Math.max(Math.ceil(U/s),1);return t.status(200).json({page:m,totalPages:wt,offset:h,limit:s,pendencies:A})}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Go}from"@asteasolutions/zod-to-openapi";import be from"zod";Go(be);var Et=be.object({password:be.string(),email:be.email()}),ve=class{constructor(e,t,r){this.userRepository=e;this.bcrypt=t;this.jwtService=r}async handle(e,t){try{let{email:r,password:i}=Et.parse(e.body),s=await this.userRepository.findByEmail(r);if(!s)return t.status(401).json({message:"Usu\xE1rio n\xE3o existe."});if(!await this.bcrypt.compare({password:i,hashedPassword:s.passwordHash}))throw new F("Senha inv\xE1lida.");let{id:m,role:f}=s,h=this.jwtService.sign({id:m,role:f,email:r});return t.status(200).json({token:h})}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Jo}from"@asteasolutions/zod-to-openapi";import ie from"zod";var Ce=8;Jo(ie);var St=ie.object({name:ie.string("Nome \xE9 obrigat\xF3rio.").min(1,"Nome \xE9 obrigat\xF3rio."),email:ie.email("E-mail inv\xE1lido.").min(1,"E-mail \xE9 obrigat\xF3rio."),password:ie.string("A senha \xE9 obrigat\xF3ria.").min(Ce,`A senha deve ter pelo menos ${Ce} caracteres.`),confirmPassword:ie.string("A senha \xE9 obrigat\xF3ria.").min(Ce,`A senha deve ter pelo menos ${Ce} caracteres.`)}).refine(o=>o.password===o.confirmPassword,{message:"As senhas n\xE3o coincidem.",path:["confirmPassword"]}),Ee=class{constructor(e,t){this.userRepository=e;this.bcrypt=t}async handle(e,t){try{let{email:r,name:i,password:s}=St.parse(e.body);if(await this.userRepository.findByEmail(r))throw new oe("Usu\xE1rio j\xE1 existe.");let m=await this.bcrypt.hash(s);return await this.userRepository.create({name:i,emailAddress:r,passwordHash:m}),t.status(201).json()}catch(r){if(r instanceof Error)throw new p(r.message)}}};var cr={method:"post",path:"/auth/sign-up",tags:["Authentication"],summary:"Create a new user",request:{body:{content:{"application/json":{schema:St}}}},responses:{201:{description:"User created successfully",summary:"User Registration Successful",content:{"application/json":{schema:n.object({message:n.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},409:{description:"User already exists with this email",summary:"User Already Exists",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},mr={method:"post",path:"/auth/sign-in",tags:["Authentication"],summary:"Sign in",request:{body:{content:{"application/json":{schema:Et}}}},responses:{200:{description:"Authentication successful, JWT token returned",summary:"Login Successful",content:{"application/json":{schema:n.object({token:n.string()})}}},400:{description:"Invalid credentials or input data",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},401:{description:"Invalid email or password",summary:"Authentication Failed",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},pr={method:"get",path:"/auth/user",tags:["Authentication"],summary:"Search for authenticated user",security:[{bearerAuth:[]}],responses:{200:{description:"Authenticated user information retrieved successfully",summary:"User Information Retrieved",content:{"application/json":{schema:n.object({name:n.string(),id:n.string(),avatarUrl:n.string().nullable(),createdAt:n.date(),updatedAt:n.date(),emailAddress:n.string(),orcid:n.string().nullable(),phone:n.string().nullable(),lattesUrl:n.string().nullable(),role:n.enum(ar.UserRole)}).nullable()}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},404:{description:"User not found or not authenticated",summary:"User Not Found",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},dr={method:"get",path:"/auth/user/news",tags:["Authentication"],summary:"List authenticated user news",security:[{bearerAuth:[]}],request:{query:vt},responses:{200:{description:"Paginated list of authenticated user news retrieved successfully",summary:"User News Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),news:n.object({content:n.string(),id:n.string(),title:n.string(),createdAt:n.date(),updatedAt:n.date(),imageUrl:n.string().nullable()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},ur={method:"get",path:"/auth/admin",tags:["Authentication"],summary:"Verify admin access",security:[{bearerAuth:[]}],responses:{200:{description:"Admin access verified successfully",summary:"Admin Access Granted",content:{"application/json":{schema:n.object({success:n.boolean()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},lr={method:"get",path:"/auth/certifications",tags:["Authentication"],summary:"List all authenticated user's certifications",security:[{bearerAuth:[]}],request:{query:bt},responses:{200:{description:"Paginated list of authenticated user certifications retrieved successfully",summary:"User Certifications Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),certifications:n.object({description:n.string(),id:n.string(),title:n.string(),certificationUrl:n.string(),createdAt:n.date(),updatedAt:n.date(),userId:n.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},fr={method:"get",path:"/auth/pendencies",tags:["Authentication"],summary:"List all authenticated user's pendencies",security:[{bearerAuth:[]}],request:{query:Ct},responses:{200:{description:"Paginated list of authenticated user pendencies retrieved successfully",summary:"User Pendencies Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),pendencies:n.object({id:n.string(),title:n.string(),description:n.string(),status:n.enum(ar.PendencyStatus),createdAt:n.date(),updatedAt:n.date(),userId:n.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}};import{$Enums as oi}from"@prisma/client";import c from"zod";import{extendZodWithOpenApi as $o}from"@asteasolutions/zod-to-openapi";import Tt from"zod";$o(Tt);var jt=Tt.object({id:Tt.string()}),Se=class{constructor(e,t){this.certificationRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{id:r}=jt.parse({id:e.params.certification_id}),i=await this.certificationRepository.findById(r);if(!i)throw new I("A certifica\xE7\xE3o n\xE3o existe.");return await Promise.all([this.certificationRepository.deleteById(i.id),this.firebaseStorageService.deleteFile({fileUrl:i.certificationUrl})]),t.sendStatus(204)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Yo}from"@asteasolutions/zod-to-openapi";import xt from"zod";Yo(xt);var At=xt.object({certificationId:xt.uuid()}),Te=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let{certificationId:r}=At.parse({certificationId:e.params.certification_id}),i=await this.certificationRepository.findById(r);if(!i)throw new I("Certificado n\xE3o encontrado.");return t.status(200).json(i)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Xo}from"@asteasolutions/zod-to-openapi";import W from"zod";var Qo=1,ei=6;Xo(W);var Ut=W.object({page:W.coerce.number().min(1).default(Qo),limit:W.coerce.number().min(1).default(ei),title:W.string().optional(),description:W.string().optional(),userId:W.uuid().optional(),orderBy:W.enum(["asc","desc"]).default("desc")}),je=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let{description:r,limit:i,orderBy:s,page:a,title:m,userId:f}=Ut.parse(e.query),h=a*i-i,[b,A]=await Promise.all([this.certificationRepository.find({pagination:{offset:h,limit:i},filter:{title:m,description:r,orderBy:s,userId:f}}),this.certificationRepository.count({filter:{title:m,description:r}})]),U=Math.max(Math.ceil(A/i),1);return t.status(200).json({page:a,totalPages:U,offset:h,limit:i,certifications:b})}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as ti}from"@asteasolutions/zod-to-openapi";import se from"zod";var E={NEWS:"images/news",USER:"images/user",CERTIFICATION:"documents/certifications",PENDENCY:"documents/pendencies"};ti(se);var Ae=se.object({userId:se.uuid(),title:se.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:se.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:se.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do certificado \xE9 obrigat\xF3rio")}),xe=class{constructor(e,t,r){this.userRepository=e;this.certificationRepository=t;this.firebaseStorageService=r}async handle(e,t){try{let{userId:r,title:i,description:s,certification:a}=Ae.parse({...e.body,userId:e.params.user_id,certification:e.file});if(!await this.userRepository.findById(r))throw new w("O usu\xE1rio n\xE3o existe.");let f=await this.firebaseStorageService.uploadFile({file:a,id:r,folder:E.CERTIFICATION});return await this.certificationRepository.register({userId:r,title:i,description:s,certificationUrl:f}),t.sendStatus(201)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as ri}from"@asteasolutions/zod-to-openapi";import ne from"zod";ri(ne);var Pe=ne.object({id:ne.uuid(),title:ne.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:ne.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:ne.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do certificado \xE9 inv\xE1lido").optional()}),Ue=class{constructor(e,t){this.certificationRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{certification:r,id:i,...s}=Pe.parse({...e.body,id:e.params.certification_id,certification:e.file}),a=await this.certificationRepository.findById(i);if(!a)throw new w("A certifica\xE7\xE3o n\xE3o existe");let m=a.certificationUrl;return r&&r.size>0&&(m=await this.firebaseStorageService.updateFile({file:r,id:a.userId,folder:E.CERTIFICATION,fileUrl:a.certificationUrl})),await this.certificationRepository.update({...s,id:i,certificationUrl:m}),t.sendStatus(204)}catch(r){if(r instanceof Error)throw new p(r.message)}}};var yr={method:"post",path:"/certifications/{user_id}",tags:["Certifications"],summary:"Register certification for user",security:[{bearerAuth:[]}],request:{params:Ae.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:Ae.omit({userId:!0})}}}},responses:{201:{description:"Certification registered successfully for the user",summary:"Certification Registered",content:{"application/json":{schema:c.object({message:c.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},hr={method:"get",path:"/certifications",tags:["Certifications"],summary:"List certifications",security:[{bearerAuth:[]}],request:{query:Ut},responses:{200:{description:"Paginated list of certifications with user information retrieved successfully",summary:"Certifications Retrieved",content:{"application/json":{schema:c.object({page:c.number(),totalPages:c.number(),offset:c.number(),limit:c.number(),certifications:c.array(c.object({description:c.string(),userId:c.string(),title:c.string(),id:c.string(),createdAt:c.date(),updatedAt:c.date(),certificationUrl:c.url(),user:c.object({id:c.uuid(),name:c.string(),createdAt:c.date(),updatedAt:c.date(),avatarUrl:c.string().nullable(),emailAddress:c.email(),orcid:c.string().nullable(),phone:c.string().nullable(),lattesUrl:c.url().nullable(),role:c.enum(oi.UserRole)})}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},gr={method:"get",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Find certification by ID",security:[{bearerAuth:[]}],request:{params:At},responses:{200:{description:"Certification details retrieved successfully",summary:"Certification Retrieved",content:{"application/json":{schema:c.object({description:c.string(),userId:c.string(),title:c.string(),id:c.string(),createdAt:c.date(),updatedAt:c.date(),certificationUrl:c.url()}).nullable()}}},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},Rr={method:"put",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Update certification",security:[{bearerAuth:[]}],request:{params:Pe.pick({id:!0}).transform(()=>({certification_id:""})),body:{content:{"multipart/form-data":{schema:Pe.omit({id:!0})}}}},responses:{204:{description:"Certification updated successfully",summary:"Certification Updated"},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},Ir={method:"delete",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Delete certification",security:[{bearerAuth:[]}],request:{params:jt},responses:{204:{description:"Certification deleted successfully",summary:"Certification Deleted"},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}};import d from"zod";import{extendZodWithOpenApi as ii}from"@asteasolutions/zod-to-openapi";import de from"zod";var si=5,wr=1024,ni=wr*wr,ai=si*ni;ii(de);var Pt=de.object({title:de.string().min(1),content:de.string().min(1),image:de.any().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=ai,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),Ne=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{title:r,content:i,image:s}=Pt.parse({...e.body,image:e.file}),a=e.user.id,m=await this.firebaseStorageService.uploadFile({file:s,folder:E.NEWS,id:a});await this.newsRepository.create({title:r,content:i,authorId:a,imageUrl:m}),t.sendStatus(201)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as ci}from"@asteasolutions/zod-to-openapi";import z from"zod";var mi=1,pi=7;ci(z);var qe=z.object({page:z.coerce.number().min(1).default(mi),limit:z.coerce.number().min(1).default(pi),authorId:z.string(),title:z.string().optional(),content:z.string().optional(),orderBy:z.enum(["asc","desc"]).default("desc")}),Fe=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let{page:r,limit:i,authorId:s,content:a,orderBy:m,title:f}=qe.parse(e.query),h=i*r-i,[b,A]=await Promise.all([this.newsRepository.findByAuthorId({authorId:s,pagination:{offset:h,limit:i},filter:{orderBy:m,title:f,content:a}}),this.newsRepository.count({filter:{authorId:s,content:a,title:f}})]),U=Math.max(Math.ceil(A/i),1);t.status(200).json({page:r,totalPages:U,offset:h,limit:i,news:b})}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as di}from"@asteasolutions/zod-to-openapi";import Nt from"zod";di(Nt);var Ft=Nt.object({id:Nt.string()}),Be=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let{id:r}=Ft.parse(e.params),i=await this.newsRepository.findById(r);if(!i)throw new I("Not\xEDcia n\xE3o encontrada.");t.status(200).json(i)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as ui}from"@asteasolutions/zod-to-openapi";import H from"zod";var li=1,fi=9;ui(H);var qt=H.object({page:H.coerce.number().min(1).default(li),limit:H.coerce.number().min(1).default(fi),title:H.string().optional(),content:H.string().optional(),authorId:H.string().optional(),orderBy:H.enum(["asc","desc"]).default("desc")}),Oe=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let{page:r,limit:i,authorId:s,content:a,orderBy:m,title:f}=qt.parse(e.query),h=i*r-i,[b,A]=await Promise.all([this.newsRepository.find({pagination:{offset:h,limit:i},filter:{authorId:s,content:a,title:f,orderBy:m}}),this.newsRepository.count({filter:{title:f,content:a,authorId:s}})]),U=Math.max(Math.ceil(A/i),1);t.status(200).json({page:r,totalPages:U,offset:h,limit:i,news:b})}catch(r){if(r instanceof Error)throw new p(r.message)}}};var br={method:"post",path:"/news",tags:["News"],summary:"Create news",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Pt}}}},responses:{201:{description:"News article created successfully",summary:"News Created",content:{"application/json":{schema:d.object({message:d.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},vr={method:"get",path:"/news",tags:["News"],summary:"List news",request:{query:qt},responses:{200:{description:"Paginated list of news articles retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),news:d.array(d.object({title:d.string(),content:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),imageUrl:d.string().nullable()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Cr={method:"get",path:"/news/{id}",tags:["News"],summary:"Find news by ID",request:{params:Ft},responses:{200:{description:"News article details retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),news:d.object({title:d.string(),content:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),imageUrl:d.string().nullable()})})}}},400:{description:"Invalid news ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"News article not found with the provided ID",summary:"News Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Er={method:"get",path:"/news/author/{author_id}",tags:["News"],summary:"List news by author",request:{params:qe.pick({authorId:!0}).transform(()=>({author_id:""})),query:qe.omit({authorId:!0})},responses:{200:{description:"Paginated list of news articles by author retrieved successfully",summary:"Author News Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),news:d.array(d.object({title:d.string(),content:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),imageUrl:d.string().nullable()}))})}}},400:{description:"Invalid author ID or query parameters",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Author not found with the provided ID",summary:"Author Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}};import{$Enums as Sr}from"@prisma/client";import l from"zod";import{extendZodWithOpenApi as yi}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as hi}from"@prisma/client";import L from"zod";yi(L);var ke=L.object({userId:L.uuid(),title:L.string().min(1),description:L.string().optional(),status:L.enum(hi).default("PENDING"),dueDate:L.coerce.date().optional(),document:L.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do documento \xE9 obrigat\xF3rio")}),De=class{constructor(e,t,r){this.userRepository=e;this.pendencyRepository=t;this.firebaseStorageService=r}async handle(e,t){try{let{userId:r,title:i,description:s,status:a,dueDate:m,document:f}=ke.parse({...e.body,userId:e.params.user_id,document:e.file});if(!await this.userRepository.findById(r))throw new w("O usu\xE1rio n\xE3o existe.");let b=await this.firebaseStorageService.uploadFile({file:f,id:r,folder:E.PENDENCY});return await this.pendencyRepository.create({userId:r,title:i,description:s,status:a,dueDate:m,documentUrl:b}),t.sendStatus(201)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as gi}from"@asteasolutions/zod-to-openapi";import Bt from"zod";gi(Bt);var Ot=Bt.object({id:Bt.uuid()}),_e=class{constructor(e,t){this.pendencyRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{id:r}=Ot.parse({id:e.params.pendency_id}),i=await this.pendencyRepository.findById(r);if(!i)throw new I("A pend\xEAncia n\xE3o existe.");return await Promise.all([this.pendencyRepository.deleteById(i.id),this.firebaseStorageService.deleteFile({fileUrl:i.documentUrl})]),t.sendStatus(204)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Ri}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Ii}from"@prisma/client";import B from"zod";var wi=1,bi=6;Ri(B);var Dt=B.object({page:B.coerce.number().min(1).default(wi),limit:B.coerce.number().min(1).default(bi),title:B.string().optional(),description:B.string().optional(),status:B.enum(Ii).default("PENDING"),userId:B.uuid().optional(),orderBy:B.enum(["asc","desc"]).default("desc")}),Me=class{constructor(e){this.pendencyRepository=e}async handle(e,t){try{let{description:r,limit:i,orderBy:s,page:a,title:m,status:f,userId:h}=Dt.parse(e.query),b=a*i-i,[A,U]=await Promise.all([this.pendencyRepository.find({pagination:{offset:b,limit:i},filter:{title:m,description:r,status:f,orderBy:s,userId:h}}),this.pendencyRepository.count({filter:{title:m,description:r,status:f,userId:h}})]),wt=Math.max(Math.ceil(U/i),1);return t.status(200).json({page:a,totalPages:wt,offset:b,limit:i,pendencies:A})}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as vi}from"@asteasolutions/zod-to-openapi";import kt from"zod";vi(kt);var _t=kt.object({pendencyId:kt.uuid()}),We=class{constructor(e){this.pendencyRepository=e}async handle(e,t){try{let{pendencyId:r}=_t.parse({pendencyId:e.params.pendency_id}),i=await this.pendencyRepository.findById(r);if(!i)throw new I("Pend\xEAncia n\xE3o encontrada.");return t.status(200).json(i)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Ci}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Ei}from"@prisma/client";import Z from"zod";Ci(Z);var He=Z.object({id:Z.uuid(),title:Z.string().min(1),description:Z.string().optional(),status:Z.enum(Ei),dueDate:Z.coerce.date().optional(),document:Z.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do documento \xE9 inv\xE1lido").optional()}),ze=class{constructor(e,t){this.pendencyRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{document:r,id:i,...s}=He.parse({...e.body,id:e.params.pendency_id,document:e.file}),a=await this.pendencyRepository.findById(i);if(!a)throw new w("A pend\xEAncia n\xE3o existe");let m=a.documentUrl;return r&&r.size>0&&(m=await this.firebaseStorageService.updateFile({file:r,id:a.userId,folder:E.PENDENCY,fileUrl:a.documentUrl})),await this.pendencyRepository.update({...s,id:i,documentUrl:m}),t.status(204).json()}catch(r){if(r instanceof Error)throw new p(r.message)}}};var Tr={method:"post",path:"/pendency/{user_id}",tags:["Pendencies"],summary:"Create pendency for user",security:[{bearerAuth:[]}],request:{params:ke.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:ke.omit({userId:!0})}}}},responses:{201:{description:"Pendency created successfully for the user",summary:"Pendency Created",content:{"application/json":{schema:l.object({})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},jr={method:"get",path:"/pendency",tags:["Pendencies"],summary:"List pendencies",security:[{bearerAuth:[]}],request:{query:Dt},responses:{200:{description:"Paginated list of pendencies retrieved successfully",summary:"Pendencies Retrieved",content:{"application/json":{schema:l.object({page:l.number(),totalPages:l.number(),offset:l.number(),limit:l.number(),pendencies:l.array(l.object({id:l.string(),title:l.string(),description:l.string().nullable(),status:l.enum(Sr.PendencyStatus),dueDate:l.date().nullable(),documentUrl:l.string(),userId:l.string(),createdAt:l.date(),updatedAt:l.date()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},xr={method:"get",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Find pendency by ID",security:[{bearerAuth:[]}],request:{params:_t},responses:{200:{description:"Pendency details retrieved successfully",summary:"Pendency Retrieved",content:{"application/json":{schema:l.object({id:l.string(),title:l.string(),description:l.string().nullable(),status:l.enum(Sr.PendencyStatus),dueDate:l.date().nullable(),documentUrl:l.string(),userId:l.string(),createdAt:l.date(),updatedAt:l.date()}).nullable()}}},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},Ar={method:"put",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Update pendency",security:[{bearerAuth:[]}],request:{params:He.pick({id:!0}).transform(()=>({pendency_id:""})),body:{content:{"multipart/form-data":{schema:He.omit({id:!0})}}}},responses:{204:{description:"Pendency updated successfully",summary:"Pendency Updated"},400:{description:"Invalid input data or pendency does not exist",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},Ur={method:"delete",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Delete pendency",security:[{bearerAuth:[]}],request:{params:Ot},responses:{204:{description:"Pendency deleted successfully",summary:"Pendency Deleted"},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}};import u from"zod";import{extendZodWithOpenApi as Si}from"@asteasolutions/zod-to-openapi";import O from"zod";Si(O);var Mt=O.object({name:O.string().min(1),type:O.string().min(1),members:O.array(O.object({role:O.string().min(1),user:O.object({id:O.string()})}))}),Le=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{name:r,type:i,members:s}=Mt.parse(e.body);await this.teamRepository.create({name:r,type:i,members:s}),t.status(201).json()}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as Ti}from"@asteasolutions/zod-to-openapi";import{z as Wt}from"zod";Ti(Wt);var ue=Wt.object({id:Wt.uuid()}),Ze=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{id:r}=ue.parse(e.params),i=await this.teamRepository.findById(r);t.status(200).json(i)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as ji}from"@asteasolutions/zod-to-openapi";import{z as Ve}from"zod";ji(Ve);var zt=Ve.object({type:Ve.string(),name:Ve.string().optional()}),Ke=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{type:r,name:i}=zt.parse({type:e.params.type,name:e.query.name}),s=await this.teamRepository.findByType({type:r,filter:{name:i}});t.status(200).json(s)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as xi}from"@asteasolutions/zod-to-openapi";import{z as q}from"zod";xi(q);var Ht=q.object({id:q.uuid(),name:q.string().min(1),members:q.array(q.object({role:q.string(),id:q.uuid().optional(),user:q.object({id:q.uuid()})}))}),Ge=class{constructor(e,t){this.teamRepository=e;this.teamMemberRepository=t}async handle(e,t){try{let{id:r,members:i,name:s}=Ht.parse({id:e.params.id,...e.body}),a=await this.teamMemberRepository.findByTeamId(r),m=i.map(h=>h.id),f=a.filter(h=>!m.includes(h.id)).map(h=>h.id);await this.teamMemberRepository.deleteMany(f),await this.teamMemberRepository.updateMany({teamId:r,members:i}),await this.teamRepository.update({id:r,name:s}),t.sendStatus(204)}catch(r){if(r instanceof Error)throw new p(r.message)}}};var Pr={method:"post",path:"/team",tags:["Teams"],summary:"Create team",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:Mt}}}},responses:{201:{description:"Team created successfully",summary:"Team Created",content:{"application/json":{schema:u.object({message:u.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Nr={method:"put",path:"/team/{id}",tags:["Teams"],summary:"Update team",security:[{bearerAuth:[]}],request:{params:ue,body:{content:{"application/json":{schema:Ht}}}},responses:{204:{description:"Team updated successfully",summary:"Team Updated"},400:{description:"Invalid input data or team ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Fr={method:"delete",path:"/team/{id}",tags:["Teams"],summary:"Delete team",security:[{bearerAuth:[]}],request:{params:ue},responses:{204:{description:"Team deleted successfully",summary:"Team Deleted"},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},qr={method:"get",path:"/team/id/{id}",tags:["Teams"],summary:"Find team by ID",request:{params:ue},responses:{200:{description:"Team details retrieved successfully",summary:"Team Retrieved",content:{"application/json":{schema:u.object({type:u.string(),name:u.string(),id:u.string(),createdAt:u.date(),updatedAt:u.date(),description:u.string().nullable()})}}},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Br={method:"get",path:"/team/type/{type}",tags:["Teams"],summary:"Find teams by type",request:{params:zt.pick({type:!0})},responses:{200:{description:"List of teams by type retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:u.array(u.object({type:u.string(),name:u.string(),id:u.string(),createdAt:u.date(),updatedAt:u.date(),description:u.string().nullable()})).nullable()}}},400:{description:"Invalid team type parameter",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Or={method:"get",path:"/team",tags:["Teams"],summary:"List teams",responses:{200:{description:"Complete list of teams retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:u.array(u.object({type:u.string(),name:u.string(),id:u.string(),createdAt:u.date(),updatedAt:u.date(),description:u.string().nullable()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}};import{$Enums as _r}from"@prisma/client";import y from"zod";import{extendZodWithOpenApi as Ai}from"@asteasolutions/zod-to-openapi";import Lt from"zod";Ai(Lt);var Zt=Lt.object({id:Lt.string()}),Je=class{constructor(e){this.userRepository=e}async handle(e,t){try{let{id:r}=Zt.parse({id:e.params.id}),i=await this.userRepository.findById(r);if(!i)return t.status(404).json({message:"O usu\xE1rio n\xE3o existe."});let s=e.user.id;return i.id!==s?t.status(401).json({message:"Voc\xEA n\xE3o tem permiss\xE3o para deletar o usu\xE1rio"}):(await this.userRepository.deleteById(i.id),t.status(204).json())}catch(r){if(console.log(r),r instanceof Error)throw new w(r.message)}}};import{extendZodWithOpenApi as Ui}from"@asteasolutions/zod-to-openapi";import{z as Vt}from"zod";Ui(Vt);var Kt=Vt.object({id:Vt.string().min(1,"id do usu\xE1rio n\xE3o fornecido.")}),$e=class{constructor(e){this.userRepository=e}async handle(e,t){try{let{id:r}=Kt.parse(e.params),i=await this.userRepository.findById(r);if(!i)return t.status(404).json({message:"Usu\xE1rio n\xE3o encontrado"});t.status(200).json(i)}catch(r){if(console.log(r),r instanceof Error)throw new w(r.message)}}};import{extendZodWithOpenApi as Pi}from"@asteasolutions/zod-to-openapi";import X from"zod";var kr=2,Dr=1024,Ni=Dr*Dr,Fi=kr*Ni,qi=/^\d{4}-\d{4}-\d{4}-\d{4}$/,Ye=/^[^0-9]*$/,Bi=/^\(?\d{2}\)?[\s-]?\d{4,5}-?\d{4}$/;Pi(X);var Gt=X.object({name:X.string().optional(),lattesUrl:X.string().optional(),orcid:X.string().transform(o=>o.trim()).transform(o=>Ye.test(o)?"":o).refine(o=>Ye.test(o)||qi.test(o),{message:"ORCID inv\xE1lido. Deve estar no formato 0000-0000-0000-0000"}),phone:X.string().transform(o=>Ye.test(o)?"":o).refine(o=>Ye.test(o)||Bi.test(o),{message:"Telefone inv\xE1lido. Deve estar no formato (99) 99999-9999"}),avatarImage:X.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=Fi,`A imagem deve ter no m\xE1ximo ${kr}MB.`).optional()}),Xe=class{constructor(e,t){this.userRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{avatarImage:r,...i}=Gt.parse({...e.body,avatarImage:e.file}),s=e.user.id,a=await this.userRepository.findById(s);if(!a)return t.status(400).json({message:"O usu\xE1rio n\xE3o existe"});let m=a.avatarUrl;return r&&(a.avatarUrl?m=await this.firebaseStorageService.updateFile({file:r,id:s,folder:E.USER,fileUrl:a.avatarUrl}):m=await this.firebaseStorageService.uploadFile({file:r,id:s,folder:E.USER})),await this.userRepository.update({...i,id:s,avatarUrl:m||void 0}),t.status(204).json()}catch(r){if(console.log(r),r instanceof Error)throw new w(r.message)}}};var Mr={method:"get",path:"/users/{id}",tags:["Users"],summary:"Find user by ID",request:{params:Kt},responses:{200:{description:"User details retrieved successfully",summary:"User Retrieved",content:{"application/json":{schema:y.object({id:y.string(),name:y.string(),createdAt:y.date(),updatedAt:y.date(),role:y.enum(_r.UserRole),lattesUrl:y.string().nullable(),orcid:y.string().nullable(),phone:y.string().nullable(),avatarUrl:y.url().nullable(),emailAddress:y.email()})}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Wr={method:"put",path:"/users",tags:["Users"],summary:"Update authenticated user",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Gt}}}},responses:{200:{description:"User profile updated successfully",summary:"User Updated",content:{"application/json":{schema:y.object({message:y.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},zr={method:"delete",path:"/users",tags:["Users"],summary:"Delete authenticated user",security:[{bearerAuth:[]}],request:{params:Zt},responses:{200:{description:"User account deleted successfully",summary:"User Deleted",content:{"application/json":{schema:y.object({message:y.string()})}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Hr={method:"get",path:"/users",tags:["Users"],summary:"List users",responses:{200:{description:"Complete list of users retrieved successfully",summary:"Users Retrieved",content:{"application/json":{schema:y.array(y.object({id:y.string(),name:y.string(),createdAt:y.date(),updatedAt:y.date(),role:y.enum(_r.UserRole),lattesUrl:y.url().nullable(),orcid:y.string().nullable(),phone:y.string().nullable(),avatarUrl:y.string().nullable(),emailAddress:y.email()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}};var R=new Oi;R.registerComponent("securitySchemes","bearerAuth",{type:"http",scheme:"bearer",bearerFormat:"JWT"});R.registerPath(cr);R.registerPath(mr);R.registerPath(pr);R.registerPath(dr);R.registerPath(lr);R.registerPath(fr);R.registerPath(ur);R.registerPath(Mr);R.registerPath(Wr);R.registerPath(zr);R.registerPath(Hr);R.registerPath(Pr);R.registerPath(Nr);R.registerPath(Fr);R.registerPath(qr);R.registerPath(Br);R.registerPath(Or);R.registerPath(br);R.registerPath(vr);R.registerPath(Cr);R.registerPath(Er);R.registerPath(yr);R.registerPath(hr);R.registerPath(gr);R.registerPath(Rr);R.registerPath(Ir);R.registerPath(Tr);R.registerPath(jr);R.registerPath(xr);R.registerPath(Ar);R.registerPath(Ur);var ki=new Di(R.definitions),Lr=ki.generateDocument({openapi:"3.0.0",info:{title:"API da Rede CT",version:"1.0.0",description:"API com valida\xE7\xE3o Zod"}});import{Router as Zi}from"express";import{extendZodWithOpenApi as _i}from"@asteasolutions/zod-to-openapi";import Jt from"zod";_i(Jt);var Mi=Jt.object({authenticatedUserId:Jt.uuid()}),Qe=class{constructor(e){this.userRepository=e}async handle(e,t){try{let{authenticatedUserId:r}=Mi.parse({authenticatedUserId:e.user.id}),i=await this.userRepository.findById(r);if(!i)throw new I("Usu\xE1rio n\xE3o encontrado.");return t.status(200).json(i)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{PrismaClient as Wi}from"@prisma/client";var v=new Wi({log:["warn","error"]});var et=class{constructor(e){this.prisma=e}async register({userId:e,title:t,description:r,certificationUrl:i}){await this.prisma.certification.create({data:{title:t,description:r,certificationUrl:i,user:{connect:{id:e}}}})}async find({pagination:{limit:e,offset:t},filter:{description:r,orderBy:i,title:s,userId:a}}){let m={userId:a},f=[];return s&&f.push({title:{contains:s,mode:"insensitive"}}),r&&f.push({description:{contains:r,mode:"insensitive"}}),f.length>0&&(m.OR=f),await this.prisma.certification.findMany({where:m,include:{user:{omit:{passwordHash:!0}}},skip:t,take:e,orderBy:{updatedAt:i}})}async findById(e){return await this.prisma.certification.findFirst({where:{id:e}})}async findByUserId({pagination:{limit:e,offset:t},filter:{description:r,orderBy:i,title:s},userId:a}){let m={userId:a},f=[];return s&&f.push({title:{contains:s,mode:"insensitive"}}),r&&f.push({description:{contains:r,mode:"insensitive"}}),f.length>0&&(m.OR=f),await this.prisma.certification.findMany({where:m,include:{user:{omit:{passwordHash:!0}}},skip:t,take:e,orderBy:{updatedAt:i}})}async update({id:e,...t}){await this.prisma.certification.update({where:{id:e},data:t})}async deleteById(e){await this.prisma.certification.delete({where:{id:e}})}async count({filter:{description:e,title:t,userId:r}}){let i={};t&&(i.title={contains:t,mode:"insensitive"});let s=[];return e&&s.push({description:{contains:e,mode:"insensitive"}}),r&&s.push({userId:r}),s.length>0&&(i.OR=s),await this.prisma.certification.count({where:i})}};function V(){return new et(v)}var tt=class{constructor(e){this.prisma=e}async create({authorId:e,...t}){return await this.prisma.news.create({data:{...t,author:{connect:{id:e}}}})}async find({pagination:{offset:e,limit:t},filter:{authorId:r,content:i,title:s,orderBy:a}}){let m={};r&&(m.authorId={contains:r,mode:"insensitive"});let f=[];return s&&f.push({title:{contains:s,mode:"insensitive"}}),i&&f.push({content:{contains:i,mode:"insensitive"}}),f.length>0&&(m.OR=f),await this.prisma.news.findMany({where:m,omit:{authorId:!0},include:{author:!0},orderBy:{updatedAt:a},skip:e,take:t})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},omit:{authorId:!0},include:{author:!0}})}async findByAuthorId({authorId:e,pagination:{offset:t,limit:r},filter:{orderBy:i="desc",content:s,title:a}}){let m={authorId:e},f=[];return a&&f.push({title:{contains:a,mode:"insensitive"}}),s&&f.push({content:{contains:s,mode:"insensitive"}}),f.length>0&&(m.OR=f),await this.prisma.news.findMany({omit:{authorId:!0},where:m,orderBy:{updatedAt:i},skip:t,take:r})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,imageUrl:e.imageUrl}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{authorId:e,content:t,title:r}}){let i={};e&&(i.authorId={contains:e,mode:"insensitive"});let s=[];return r&&s.push({title:{contains:r,mode:"insensitive"}}),t&&s.push({content:{contains:t,mode:"insensitive"}}),s.length>0&&(i.OR=s),await this.prisma.news.count({where:i})}};function D(){return new tt(v)}var rt=class{constructor(e){this.prisma=e}async create(e){await this.prisma.pendency.create({data:e})}async find({filter:{description:e,orderBy:t,title:r,status:i,userId:s},pagination:{limit:a,offset:m}}){let f={userId:s,AND:{status:{equals:i}}};e&&(f.description={contains:e,mode:"insensitive"});let h=[];return r&&h.push({title:{contains:r,mode:"insensitive"}}),h.length>0&&(f.OR=h),await this.prisma.pendency.findMany({where:f,orderBy:{updatedAt:t},include:{user:{omit:{passwordHash:!0}}},skip:m,take:a})}async findById(e){return await this.prisma.pendency.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId({filter:{description:e,orderBy:t,title:r,status:i},pagination:{limit:s,offset:a},userId:m}){let f={userId:m,AND:{status:{equals:i}}},h=[];return e&&h.push({description:{contains:e,mode:"insensitive"}}),r&&h.push({title:{contains:r,mode:"insensitive"}}),h.length>0&&(f.OR=h),await this.prisma.pendency.findMany({where:f,orderBy:{updatedAt:t},skip:a,take:s})}async update({id:e,...t}){await this.prisma.pendency.update({where:{id:e},data:t})}async deleteById(e){await this.prisma.pendency.delete({where:{id:e}})}async count({filter:{description:e,title:t,status:r,userId:i}}){let s={userId:i},a=[];return e&&a.push({description:{contains:e,mode:"insensitive"}}),t&&a.push({title:{contains:t,mode:"insensitive"}}),r&&a.push({status:{equals:r}}),a.length>0&&(s.OR=a),await this.prisma.pendency.count({where:s})}};function K(){return new rt(v)}var ot=class{constructor(e){this.prisma=e}async create(e){await this.prisma.user.create({data:e})}async update(e){await this.prisma.user.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.user.delete({where:{id:e}})}async find(){return await this.prisma.user.findMany({omit:{passwordHash:!0}})}async findByEmail(e){return await this.prisma.user.findFirst({where:{emailAddress:e}})}async findById(e){return await this.prisma.user.findFirst({where:{id:e},omit:{passwordHash:!0}})}};function S(){return new ot(v)}import{compare as zi,hash as Hi}from"bcryptjs";var it=class{constructor(e,t){this.hashFn=e;this.compareFn=t}async hash(e){return await this.hashFn(e,6)}async compare({password:e,hashedPassword:t}){return await this.compareFn(e,t)}};function $t(){return new it(Hi,zi)}import Zr from"jsonwebtoken";import P from"zod";var Li=P.object({JWT_SECRET:P.string(),FIREBASE_BUCKET:P.string(),FIREBASE_CLIENT_EMAIL:P.string(),FIREBASE_PRIVATE_KEY:P.string(),FIREBASE_PROJECT_ID:P.string(),FIREBASE_TYPE:P.string(),FIREBASE_PRIVATE_KEY_ID:P.string(),FIREBASE_CLIENT_ID:P.string(),FIREBASE_AUTH_URI:P.string(),FIREBASE_TOKEN_URI:P.string(),FIREBASE_AUTH_PROVIDER_X509_CERT_URL:P.string(),FIREBASE_CLIENT_X509_CERT_URL:P.string()}),C=Li.parse(process.env);var st=class{constructor(e,t){this.signFn=e;this.verifyFn=t}sign(e){try{return this.signFn(e,C.JWT_SECRET,{expiresIn:"3d",subject:e.id})}catch{return null}}verify(e){try{return this.verifyFn(e,C.JWT_SECRET)}catch{return null}}};function nt(){return new st(Zr.sign,Zr.verify)}function Vr(){return{signUpController:new Ee(S(),$t())}}function Kr(){return{signInController:new ve(S(),$t(),nt())}}function Gr(){return{findAuthenticatedUserController:new Qe(S())}}function Jr(){return{findAuthenticatedUserController:new Ie(D())}}function $r(){return{findAuthenticatedUserCertificationsController:new Re(V())}}function Yr(){return{findAuthenticatedUserPendenciesController:new we(K())}}var at=class{constructor(e){this.jwtService=e}authenticated(e,t,r){let i=e.headers.authorization;if(!i?.startsWith("Bearer "))return t.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let s=i.split(" ")[1];if(!s)return t.status(401).json({message:"Token n\xE3o fornecido."});try{let a=this.jwtService.verify(s);if(!a)return t.status(401).json({message:"Token inv\xE1lido.",invalid:!0});e.user=a,r()}catch(a){if(console.log(a),a instanceof Error)return t.status(401).json({message:a.message})}}isAdmin(e,t,r){let i=e.headers.authorization;if(!i?.startsWith("Bearer "))return t.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let s=i.split(" ")[1];if(!s)return t.status(401).json({message:"Token n\xE3o fornecido."});try{let a=this.jwtService.verify(s);if(!a)return t.status(401).json({message:"Token inv\xE1lido.",invalid:!0});if(a.role!=="ADMIN")return t.status(401).json({message:"\xC9 necess\xE1rio ter permiss\xF5es de administrador."});r()}catch(a){if(console.log(a),a instanceof Error)return t.status(401).json({message:a.message})}}};function j(){return{authMiddleware:new at(nt())}}var k=Zi(),{authMiddleware:le}=j();k.post("/sign-up",async(o,e)=>{let{signUpController:t}=Vr();await t.handle(o,e)});k.post("/sign-in",async(o,e)=>{let{signInController:t}=Kr();await t.handle(o,e)});k.get("/user",(o,e,t)=>{le.authenticated(o,e,t)},async(o,e)=>{let{findAuthenticatedUserController:t}=Gr();await t.handle(o,e)});k.get("/user/news",(o,e,t)=>{le.authenticated(o,e,t)},async(o,e)=>{let{findAuthenticatedUserController:t}=Jr();await t.handle(o,e)});k.get("/admin",(o,e,t)=>{le.isAdmin(o,e,t)},(o,e)=>{try{e.status(200).json({success:!0})}catch(t){t instanceof Error&&e.status(500).json({message:t.message})}});k.get("/certifications",(o,e,t)=>{le.authenticated(o,e,t)},async(o,e)=>{let{findAuthenticatedUserCertificationsController:t}=$r();await t.handle(o,e)});k.get("/pendencies",(o,e,t)=>{le.authenticated(o,e,t)},async(o,e)=>{let{findAuthenticatedUserPendenciesController:t}=Yr();await t.handle(o,e)});import{Router as Yi}from"express";import{getStorage as Ki}from"firebase-admin/storage";import{config as Vi}from"dotenv";import Xr from"firebase-admin";Vi();var Yt=Xr.initializeApp({credential:Xr.credential.cert({clientEmail:C.FIREBASE_CLIENT_EMAIL,privateKey:C.FIREBASE_PRIVATE_KEY,projectId:C.FIREBASE_PROJECT_ID,type:C.FIREBASE_TYPE,privateKeyId:C.FIREBASE_PRIVATE_KEY_ID,clientId:C.FIREBASE_CLIENT_ID,authUri:C.FIREBASE_AUTH_URI,tokenUri:C.FIREBASE_TOKEN_URI,authProviderX509CertUrl:C.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:C.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:C.FIREBASE_BUCKET});Yt.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var Gi=Ki(Yt),Qr=Gi.bucket(C.FIREBASE_BUCKET);import{randomUUID as Ji}from"node:crypto";var $i=/https:\/\/storage\.googleapis\.com\/[^/]+\/(.+)$/,ct=class{constructor(e){this.bucket=e}async uploadFile({file:e,folder:t,id:r}){let i=`${Ji()}-${e?.originalname}`,s=this.bucket.file(`${t}/${r}/${i}`);return await new Promise((a,m)=>{let f=s.createWriteStream({metadata:{contentType:e?.mimetype}});f.on("error",h=>{m(h)}),f.on("finish",async()=>{try{await s.makePublic();let h=`https://storage.googleapis.com/${this.bucket.name}/${s.name}`;a(h)}catch(h){m(h)}}),f.end(e.buffer)})}async updateFile({file:e,id:t,fileUrl:r,folder:i}){try{let s=this.getPath(r);if(!s)throw new Error("Arquivo n\xE3o encontrado.");let[a,m]=await Promise.all([this.bucket.file(s).delete(),this.uploadFile({file:e,id:t,folder:i})]);return m}catch{throw new Error("Erro ao atualizar o arquivo.")}}async deleteFile({fileUrl:e}){let t=this.getPath(e);if(!t)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(t).delete()}catch{throw new Error("Erro ao deletar o arquivo.")}}getPath(e){let t=e.match($i);return t?t[1]:null}};function x(){return new ct(Qr)}function eo(){return{registerCertificationController:new xe(S(),V(),x())}}function to(){return{findCertificationsController:new je(V())}}function ro(){return{findCertificationByIdController:new Te(V())}}function oo(){return{updateCertificationController:new Ue(V(),x())}}function io(){return{deleteCertificationController:new Se(V(),x())}}import so from"multer";var N=so({storage:so.memoryStorage()});var Q=Yi(),{authMiddleware:fe}=j();Q.post("/:user_id",(o,e,t)=>{fe.isAdmin(o,e,t)},N.single("certification"),async(o,e)=>{let{registerCertificationController:t}=eo();await t.handle(o,e)});Q.get("/",(o,e,t)=>{fe.isAdmin(o,e,t)},async(o,e)=>{let{findCertificationsController:t}=to();await t.handle(o,e)});Q.get("/:certification_id",(o,e,t)=>{fe.isAdmin(o,e,t)},async(o,e)=>{let{findCertificationByIdController:t}=ro();await t.handle(o,e)});Q.put("/:certification_id",(o,e,t)=>{fe.isAdmin(o,e,t)},N.single("certification"),async(o,e)=>{let{updateCertificationController:t}=oo();await t.handle(o,e)});Q.delete("/:certification_id",(o,e,t)=>{fe.isAdmin(o,e,t)},async(o,e)=>{let{deleteCertificationController:t}=io();await t.handle(o,e)});import{Router as Xi}from"express";var Xt=Xi();Xt.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as ns}from"express";import{extendZodWithOpenApi as Qi}from"@asteasolutions/zod-to-openapi";import Qt from"zod";Qi(Qt);var es=Qt.object({id:Qt.string()}),mt=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{id:r}=es.parse(e.params),i=e.user.id,s=await this.newsRepository.findById(r);if(!s)throw new I("Not\xEDcia n\xE3o encontrada.");if(s.author.id!==i)throw new F("Sem permiss\xE3o.");await Promise.all([this.newsRepository.delete(r),this.firebaseStorageService.deleteFile({fileUrl:s.imageUrl})]),t.sendStatus(200)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as ts}from"@asteasolutions/zod-to-openapi";import ae from"zod";var rs=5,no=1024,os=no*no,is=rs*os;ts(ae);var ss=ae.object({id:ae.string(),title:ae.string().min(1),content:ae.string().min(1),image:ae.any().optional().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=is,"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB.")}),pt=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{id:r,title:i,content:s,image:a}=ss.parse({id:e.params.id,title:e.body.title,content:e.body.content,image:e.file}),m=await this.newsRepository.findById(r);if(!m)throw new I("Not\xEDcia n\xE3o encontrada.");let f=e.user.id;if(m.author.id!==f)throw new F("Sem permiss\xE3o.");let h=m.imageUrl||"";a&&m.imageUrl&&(h=await this.firebaseStorageService.updateFile({file:a,folder:E.NEWS,id:r,fileUrl:m.imageUrl}));let b=await this.newsRepository.update({id:r,title:i,content:s,imageUrl:h});t.status(200).json(b)}catch(r){if(r instanceof Error)throw new p(r.message)}}};function ao(){return{createNewsController:new Ne(D(),x())}}function co(){return{findAllNewsController:new Oe(D())}}function mo(){return{findNewsByIdController:new Be(D())}}function po(){return{findNewsByAuthorIdController:new Fe(D())}}function uo(){return{updateNewsController:new pt(D(),x())}}function lo(){return{deleteNewsController:new mt(D(),x())}}var G=ns(),{authMiddleware:er}=j();G.post("/",(o,e,t)=>{er.authenticated(o,e,t)},N.single("image"),async(o,e)=>{let{createNewsController:t}=ao();await t.handle(o,e)});G.get("/",async(o,e)=>{let{findAllNewsController:t}=co();await t.handle(o,e)});G.get("/:id",async(o,e)=>{let{findNewsByIdController:t}=mo();await t.handle(o,e)});G.get("/author/:authorId",async(o,e)=>{let{findNewsByAuthorIdController:t}=po();await t.handle(o,e)});G.put("/:id",(o,e,t)=>{er.authenticated(o,e,t)},N.single("image"),async(o,e)=>{let{updateNewsController:t}=uo();await t.handle(o,e)});G.delete("/:id",(o,e,t)=>{er.authenticated(o,e,t)},async(o,e)=>{let{deleteNewsController:t}=lo();await t.handle(o,e)});import{Router as as}from"express";function fo(){return{createPendencyController:new De(S(),K(),x())}}function yo(){return{findPendenciesController:new Me(K())}}function ho(){return{findPendencyByIdController:new We(K())}}function go(){return{updatePendencyController:new ze(K(),x())}}function Ro(){return{deletePendencyController:new _e(K(),x())}}var ee=as(),{authMiddleware:ye}=j();ee.post("/:user_id",(o,e,t)=>{ye.isAdmin(o,e,t)},N.single("document"),async(o,e)=>{let{createPendencyController:t}=fo();await t.handle(o,e)});ee.get("/",(o,e,t)=>{ye.isAdmin(o,e,t)},async(o,e)=>{let{findPendenciesController:t}=yo();await t.handle(o,e)});ee.get("/:pendency_id",(o,e,t)=>{ye.isAdmin(o,e,t)},async(o,e)=>{let{findPendencyByIdController:t}=ho();await t.handle(o,e)});ee.put("/:pendency_id",(o,e,t)=>{ye.isAdmin(o,e,t)},N.single("document"),async(o,e)=>{let{updatePendencyController:t}=go();await t.handle(o,e)});ee.delete("/:pendency_id",(o,e,t)=>{ye.isAdmin(o,e,t)},async(o,e)=>{let{deletePendencyController:t}=Ro();await t.handle(o,e)});import{Router as hs}from"express";import{extendZodWithOpenApi as cs}from"@asteasolutions/zod-to-openapi";import te from"zod";cs(te);var ms=te.object({teamId:te.uuid(),member:te.object({userId:te.uuid(),role:te.string(),description:te.string()})}),dt=class{constructor(e,t){this.teamMemberRepository=e;this.userRepository=t}async handle(e,t){try{let{teamId:r,member:{userId:i,...s}}=ms.parse({...e.body,teamId:e.params.teamId});if(!await this.userRepository.findById(i))throw new I("O usu\xE1rio n\xE3o existe.");let m=await this.teamMemberRepository.create({...s,userId:i,teamId:r});t.status(201).json(m)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as ps}from"@asteasolutions/zod-to-openapi";import{z as tr}from"zod";ps(tr);var ds=tr.object({id:tr.uuid()}),ut=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let{id:r}=ds.parse(e.params);await this.teamMemberRepository.delete(r),t.sendStatus(200)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as us}from"@asteasolutions/zod-to-openapi";import{z as rr}from"zod";us(rr);var ls=rr.object({id:rr.uuid()}),lt=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let{id:r}=ls.parse(e.params),i=await this.teamMemberRepository.findById(r);if(!i)throw new I("Membro n\xE3o encontrado.");t.status(200).json(i)}catch(r){if(r instanceof Error)throw new p(r.message)}}};import{extendZodWithOpenApi as fs}from"@asteasolutions/zod-to-openapi";import{z as ce}from"zod";fs(ce);var ys=ce.object({id:ce.uuid(),role:ce.string(),userId:ce.string(),description:ce.string()}),ft=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=ys.parse(e.body),i=await this.teamMemberRepository.update(r);t.status(200).json(i)}catch(r){if(r instanceof Error)throw new p(r.message)}}};var _=class{constructor(e){this.prisma=e}async findById(e){return await this.prisma.teamMember.findFirst({where:{id:e}})}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{teamId:e}})}async create({description:e,role:t,teamId:r,userId:i}){return await this.prisma.teamMember.create({data:{role:t,description:e,teamId:r,userId:i}})}async update({id:e,...t}){return await this.prisma.teamMember.update({where:{id:e},data:t})}async updateMany({members:e,teamId:t}){await Promise.all(e.map(async({user:r,role:i})=>{let s=await this.prisma.teamMember.findFirst({where:{teamId:t,userId:r.id},include:{user:!0}});s?await this.prisma.teamMember.update({where:{id:s.id},data:{role:i}}):await this.prisma.teamMember.create({data:{teamId:t,userId:r.id,role:i}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async t=>{await this.prisma.teamMember.delete({where:{id:t}})}))}};function Io(){return{createTeamMemberController:new dt(new _(v),S())}}function wo(){return{findTeamMemberController:new lt(new _(v))}}function bo(){return{updateTeamMemberController:new ft(new _(v))}}function vo(){return{deleteTeamMemberController:new ut(new _(v))}}var me=hs(),{authMiddleware:yt}=j();me.post("/:teamId/member",(o,e,t)=>{yt.isAdmin(o,e,t)},async(o,e)=>{let{createTeamMemberController:t}=Io();await t.handle(o,e)});me.get("/member/:id",(o,e,t)=>{yt.isAdmin(o,e,t)},async(o,e)=>{let{findTeamMemberController:t}=wo();await t.handle(o,e)});me.put("/member/:id",(o,e,t)=>{yt.isAdmin(o,e,t)},async(o,e)=>{let{updateTeamMemberController:t}=bo();await t.handle(o,e)});me.delete("/member/:id",(o,e,t)=>{yt.isAdmin(o,e,t)},async(o,e)=>{let{deleteTeamMemberController:t}=vo();await t.handle(o,e)});import{Router as Is}from"express";import{extendZodWithOpenApi as gs}from"@asteasolutions/zod-to-openapi";import{z as or}from"zod";gs(or);var Rs=or.object({id:or.uuid()}),ht=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{id:r}=Rs.parse(e.params);await this.teamRepository.delete(r),t.sendStatus(200)}catch(r){if(r instanceof Error)throw new p(r.message)}}};var gt=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=await this.teamRepository.findAll();return t.status(200).json(r)}catch(r){if(r instanceof Error)throw new p(r.message)}}};var Rt=class{constructor(e){this.prisma=e}async create({members:e,name:t,type:r}){return await this.prisma.team.create({data:{name:t,type:r,members:{create:e.map(({role:i,user:s})=>({role:i,user:{connect:{id:s.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:t}}){let r={type:e};return t&&(r.name={contains:t,mode:"insensitive"}),await this.prisma.team.findMany({where:r,include:{members:{include:{user:!0}}}})}async update({id:e,name:t}){return await this.prisma.team.update({where:{id:e},data:{name:t}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function re(){return new Rt(v)}function Co(){return new _(v)}function Eo(){return{findTeamsController:new gt(re())}}function So(){return{findTeamByIdController:new Ze(re())}}function To(){return{findTeamByTypeController:new Ke(re())}}function jo(){return{createTeamController:new Le(re())}}function xo(){return{updateTeamController:new Ge(re(),Co())}}function Ao(){return{deleteTeamController:new ht(re())}}var J=Is(),{authMiddleware:ir}=j();J.get("/",async(o,e)=>{let{findTeamsController:t}=Eo();await t.handle(o,e)});J.get("/id/:id",async(o,e)=>{let{findTeamByIdController:t}=So();await t.handle(o,e)});J.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:t}=To();await t.handle(o,e)});J.post("/",(o,e,t)=>{ir.isAdmin(o,e,t)},async(o,e)=>{let{createTeamController:t}=jo();await t.handle(o,e)});J.put("/:id",(o,e,t)=>{ir.isAdmin(o,e,t)},async(o,e)=>{let{updateTeamController:t}=xo();await t.handle(o,e)});J.delete("/:id",(o,e,t)=>{ir.isAdmin(o,e,t)},async(o,e)=>{let{deleteTeamController:t}=Ao();await t.handle(o,e)});import{Router as ws}from"express";var It=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=await this.userRepository.find();t.status(200).json(r)}catch(r){if(console.log(r),r instanceof Error)throw new w(r.message)}}};function Uo(){return{updateUserController:new Xe(S(),x())}}function Po(){return{deleteUserController:new Je(S())}}function No(){return{findUsersController:new It(S())}}function Fo(){return{findUserController:new $e(S())}}var pe=ws(),{authMiddleware:qo}=j();pe.get("/:id",async(o,e)=>{let{findUserController:t}=Fo();await t.handle(o,e)});pe.put("/",(o,e,t)=>{qo.authenticated(o,e,t)},N.single("avatarImage"),async(o,e)=>{let{updateUserController:t}=Uo();await t.handle(o,e)});pe.delete("/:id",(o,e,t)=>{qo.authenticated(o,e,t)},async(o,e)=>{let{deleteUserController:t}=Po();await t.handle(o,e)});pe.get("/",async(o,e)=>{let{findUsersController:t}=No();await t.handle(o,e)});var T=sr(),Cs={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};T.use(vs(Cs));T.use(sr.json());T.use(sr.urlencoded({extended:!1}));T.use("/docs",bs({content:Lr,theme:"kepler"}));T.use("/",Xt);T.use("/auth",k);T.use("/user",pe);T.use("/news",G);T.use("/team",J);T.use("/team",me);T.use("/certification",Q);T.use("/pendency",ee);T.use((o,e,t,r)=>{let{errorHandler:i}=nr();i.handle(o,e,t,r)});var Ss=Es.createServer(T),Bo=4e3;Ss.listen(Bo,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${Bo}.`)});
