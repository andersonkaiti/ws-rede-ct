import je from"node:http";import J from"express";import Ae from"cors";import{Router as Re}from"express";var L=Re();L.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as ge}from"express";import{ClerkExpressWithAuth as we}from"@clerk/clerk-sdk-node";var he=we(),X=(o,e,t)=>he(o,e,t);var w=class{async handle(e,t){let r=e.auth;if(!r||!r.userId){t.status(401).json({message:"N\xE3o autenticado"});return}t.status(200).json({message:"Usu\xE1rio autenticado com Clerk",userId:r.userId})}};function H(){return{clerkAuthController:new w}}var K=ge();K.get("/",X,async(o,e)=>{let{clerkAuthController:t}=H();await t.handle(o,e)});import{Router as Ce}from"express";var h=class{constructor(e,t){this.clerkWebhookService=e;this.userRepository=t}async handle(e,t){try{let r=await this.clerkWebhookService.verifyEvent(e);if(!r)throw new Error("Erro ao verificar webhook.");let{type:s,data:{created_at:a,birthday:i,last_sign_in_at:n,updated_at:R,email_addresses:M,...fe}}=r;s==="user.created"&&(await this.userRepository.create({created_at:new Date(a),updated_at:new Date(R),email_addresses:M,...fe}),t.status(201).json({message:"Usu\xE1rio criado com sucesso."}))}catch(r){r instanceof Error&&t.status(400).json({message:r.message})}}};var g=class{constructor(e,t){this.clerkWebhookService=e;this.userRepository=t}async handle(e,t){try{let r=await this.clerkWebhookService.verifyEvent(e);if(!r)throw new Error("Erro ao verificar webhook.");let{type:s,data:a}=r;s==="user.deleted"&&(await this.userRepository.delete(a),t.status(200).json({message:"Usu\xE1rio deletado com sucesso."}))}catch(r){r instanceof Error&&t.status(400).json({message:r.message})}}};var v=class{constructor(e,t){this.clerkWebhookService=e;this.userRepository=t}async handle(e,t){try{let r=await this.clerkWebhookService.verifyEvent(e);if(!r)throw new Error("Erro ao verificar webhook.");let{type:s,data:{email_addresses:a,...i}}=r;s==="user.updated"&&(await this.userRepository.update({...i,email_addresses:a}),t.status(200).json({message:"Usu\xE1rio atualizado com sucesso."}))}catch(r){r instanceof Error&&t.status(400).json({message:r.message})}}};var k=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=await this.userRepository.findAll();return t.status(200).json(r)}catch{return t.status(500).json({message:"Erro ao buscar usu\xE1rios"})}}};var I=class{constructor(e){this.prisma=e}async create({email_addresses:e,first_name:t,last_name:r,...s}){await this.prisma.user.create({data:{first_name:t,last_name:r,id:s.id,created_at:s.created_at,updated_at:s.updated_at,image_url:s.image_url,profile_image_url:s.profile_image_url,email_addresses:{create:e.map(a=>({email_address:a.email_address,linked_to:JSON.stringify(a.linked_to),id:a.id}))}}})}async update(e){await this.prisma.user.update({where:{id:e.id},data:{first_name:e.first_name,last_name:e.last_name,image_url:e.image_url,profile_image_url:e.profile_image_url,email_addresses:{update:e.email_addresses.map(t=>({where:{id:t.id},data:{email_address:t.email_address,linked_to:JSON.stringify(t.linked_to)}}))}}})}async delete(e){await this.prisma.user.delete({where:{id:e.id}})}async findAll(){return await this.prisma.user.findMany({include:{email_addresses:!0}})}};import{PrismaClient as ve}from"@prisma/client";var p=new ve;function f(){return new I(p)}import{Webhook as ke}from"svix";var C=class{constructor(e){this.webhook=e}async verifyEvent(e){let{"svix-id":t,"svix-timestamp":r,"svix-signature":s}=e.headers;if(!t||!r||!s)throw new Error("Headers are missing");let a=JSON.stringify(e.body),i={"svix-id":t,"svix-timestamp":r,"svix-signature":s};try{return this.webhook.verify(a,i)}catch(n){if(n instanceof Error)throw new Error(n.message)}}};function _(o){return new C(new ke(o))}import{config as Ie}from"dotenv";Ie();function V(){return{createUserController:new h(_(process.env.CLERK_USER_CREATED),f())}}function Y(){return{updateUserController:new v(_(process.env.CLERK_USER_UPDATED),f())}}function G(){return{deleteUserController:new g(_(process.env.CLERK_USER_DELETED),f())}}function Q(){return{findAllUsersController:new k(f())}}var{createUserController:_e}=V(),{updateUserController:Ee}=Y(),{deleteUserController:Te}=G(),y=Ce();y.post("/api/webhook/created-user",async(o,e)=>{await _e.handle(o,e)});y.post("/api/webhook/updated-user",async(o,e)=>{await Ee.handle(o,e)});y.post("/api/webhook/deleted-user",async(o,e)=>{await Te.handle(o,e)});y.get("/",async(o,e)=>{let{findAllUsersController:t}=Q();await t.handle(o,e)});import{Router as qe}from"express";var E={NEWS:"news"};var T=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{title:r,content:s,author_id:a}=e.body,i=await this.firebaseStorageService.uploadFile(e,E.NEWS),n=await this.newsRepository.create({title:r,content:s,author_id:a,image_url:i});t.status(201).json(n)}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};var b=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{id:r}=e.params,{title:s,content:a,image_url:i}=e.body,n;i&&(n=await this.firebaseStorageService.updateFile(e,E.NEWS));let R=await this.newsRepository.update({id:r,title:s,content:a,image_url:n});t.status(200).json(R)}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};var S=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let{id:r}=e.params;await Promise.all([this.newsRepository.delete(r),this.firebaseStorageService.deleteFile(e)]),t.status(200).json({message:"Not\xEDcia deletada com sucesso."})}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};var U=class{constructor(e){this.prisma=e}async create({title:e,content:t,author_id:r,image_url:s}){return await this.prisma.news.create({data:{title:e,content:t,author_id:r,image_url:s},include:{author:!0}})}async findAll(){return await this.prisma.news.findMany({include:{author:!0},orderBy:{created_at:"desc"}})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},include:{author:!0}})}async findByAuthorId(e){return await this.prisma.news.findMany({where:{author_id:e},orderBy:{created_at:"desc"}})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,...e.image_url&&{image_url:e.image_url}}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}};function u(){return new U(p)}var x=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=await this.newsRepository.findAll();t.status(200).json(r)}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};var q=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let{id:r}=e.params,s=await this.newsRepository.findById(r);t.status(200).json(s)}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};var N=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let{author_id:r}=e.params,s=await this.newsRepository.findByAuthorId(r);t.status(200).json(s)}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};import{randomUUID as be}from"node:crypto";var A=class{constructor(e){this.bucket=e}async uploadFile(e,t){if(!e.file)throw new Error("Arquivo n\xE3o encontrado.");let r=e.file,s=e.body.author_id,a=`${be()}-${r?.originalname}`,i=this.bucket.file(`images/${t}/${s}/${a}`),n=i.createWriteStream({metadata:{contentType:r?.mimetype}});return n.on("error",M=>{console.log(M)}),n.on("finish",async()=>{await i.makePublic()}),n.end(r?.buffer),`https://storage.googleapis.com/${this.bucket.name}/${i.name}`}async updateFile(e,t){if(!e.file)throw new Error("Arquivo n\xE3o encontrado.");try{let r=this.getPath(e.body.image_url);if(!r)throw new Error("Arquivo n\xE3o encontrado.");let[s,a]=await Promise.all([this.bucket.file(r).delete(),this.uploadFile(e,t)]);return a}catch{throw new Error("Erro ao atualizar o arquivo.")}}async deleteFile(e){if(!e.body.image_url)throw new Error("Arquivo n\xE3o encontrado.");let t=this.getPath(e.body.image_url);if(!t)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(t).delete()}catch{throw new Error("Erro ao deletar o arquivo.")}}getPath(e){let t=e.match(/\/images\/.+$/);return t?t[0].slice(1):null}};import Z from"firebase-admin";import{config as Se}from"dotenv";Se();var $=Z.initializeApp({credential:Z.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY,projectId:process.env.FIREBASE_PROJECT_ID,type:process.env.FIREBASE_TYPE,privateKeyId:process.env.FIREBASE_PRIVATE_KEY_ID,clientId:process.env.FIREBASE_CLIENT_ID,authUri:process.env.FIREBASE_AUTH_URI,tokenUri:process.env.FIREBASE_TOKEN_URI,authProviderX509CertUrl:process.env.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:process.env.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:process.env.FIREBASE_BUCKET});$.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");import{getStorage as Ue}from"firebase-admin/storage";var xe=Ue($),ee=xe.bucket(process.env.FIREBASE_BUCKET);function F(){return new A(ee)}function te(){return{createNewsController:new T(u(),F())}}function re(){return{findAllNewsController:new x(u())}}function oe(){return{findNewsByIdController:new q(u())}}function se(){return{findNewsByAuthorIdController:new N(u())}}function ae(){return{updateNewsController:new b(u(),F())}}function ie(){return{deleteNewsController:new S(u(),F())}}import ne from"multer";var z=ne({storage:ne.memoryStorage()});var c=qe();c.post("/",z.single("image"),async(o,e)=>{let{createNewsController:t}=te();await t.handle(o,e)});c.get("/",async(o,e)=>{let{findAllNewsController:t}=re();await t.handle(o,e)});c.get("/:id",async(o,e)=>{let{findNewsByIdController:t}=oe();await t.handle(o,e)});c.get("/author/:author_id",async(o,e)=>{let{findNewsByAuthorIdController:t}=se();await t.handle(o,e)});c.put("/:id",z.single("image"),async(o,e)=>{let{updateNewsController:t}=ae();await t.handle(o,e)});c.delete("/:id",async(o,e)=>{let{deleteNewsController:t}=ie();await t.handle(o,e)});import{Router as Ne}from"express";var j=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{name:r,type:s,members:a}=e.body,i=await this.teamRepository.create({name:r,type:s,members:a});t.status(201).json(i)}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};var B=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{id:r}=e.params;await this.teamRepository.delete(r),t.status(200).json({message:"Equipe deletada com sucesso"})}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};var P=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=await this.teamRepository.findAll();return t.status(200).json(r)}catch{return t.status(500).json({message:"Internal server error"})}}};var D=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{id:r}=e.params,s=await this.teamRepository.findById(r);t.status(200).json(s)}catch{t.status(500).json({message:"Internal server error"})}}};var O=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{type:r}=e.params,s=await this.teamRepository.findByType(r);t.status(200).json(s)}catch{t.status(500).json({message:"Internal server error"})}}};var W=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let{id:r}=e.params,{name:s,members:a}=e.body,i=await this.teamRepository.update({id:r,name:s,members:a});t.status(200).json(i)}catch(r){console.log(r),r instanceof Error&&t.status(500).json({message:"Erro ao atualizar equipe"})}}};var l=class{constructor(e){this.prisma=e}async create(e){return await this.prisma.team.create({data:{name:e.name,type:e.type,team_members:{create:e.members.map(t=>({name:t.name,role:t.role,user_id:t.user_id}))}}})}async findAll(){return await this.prisma.team.findMany({include:{team_members:!0}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{team_members:!0}})}async findByType(e){return await this.prisma.team.findMany({where:{type:e},include:{team_members:!0}})}async update(e){let t=await this.prisma.teamMember.findMany({where:{team_id:e.id}}),r=e.members.map(a=>a.id),s=t.filter(a=>!r.includes(a.id));for(let a of s)await this.prisma.teamMember.delete({where:{id:a.id}});for(let a of e.members){let i={name:a.name,role:a.role,user_id:a.user_id};a.id?await this.prisma.teamMember.upsert({where:{id:a.id},update:i,create:{...i,team_id:e.id}}):await this.prisma.teamMember.create({data:{...i,team_id:e.id}})}return await this.prisma.team.update({where:{id:e.id},data:{name:e.name}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function pe(){return{findAllTeamsController:new P(new l(p))}}function me(){return{findTeamByIdController:new D(new l(p))}}function le(){return{findTeamByTypeController:new O(new l(p))}}function ce(){return{createTeamController:new j(new l(p))}}function de(){return{updateTeamController:new W(new l(p))}}function ue(){return{deleteTeamController:new B(new l(p))}}var d=Ne();d.get("/",async(o,e)=>{let{findAllTeamsController:t}=pe();await t.handle(o,e)});d.get("/id/:id",async(o,e)=>{let{findTeamByIdController:t}=me();await t.handle(o,e)});d.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:t}=le();await t.handle(o,e)});d.post("/",async(o,e)=>{let{createTeamController:t}=ce();await t.handle(o,e)});d.put("/:id",async(o,e)=>{let{updateTeamController:t}=de();await t.handle(o,e)});d.delete("/:id",async(o,e)=>{let{deleteTeamController:t}=ue();await t.handle(o,e)});var m=J(),Fe={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};m.use(Ae(Fe));m.use(J.json());m.use(J.urlencoded({extended:!1}));m.use("/",L);m.use("/auth",K);m.use("/user",y);m.use("/news",c);m.use("/team",d);var Be=je.createServer(m),ye=4e3;Be.listen(ye,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${ye}.`)});
//# sourceMappingURL=server.js.map