import En from"node:http";import{apiReference as bn}from"@scalar/express-api-reference";import vn from"cors";import Ut from"express";import ws from"zod";var U=class extends Error{};var D=class extends Error{};var m=class extends Error{};var w=class extends Error{};var q=class extends Error{};import{ZodError as Is}from"zod";var Ee=class extends Is{};var Se=class{handle(e,r,t,s){return e instanceof Ee?t.status(400).json({message:"Validation error",error:ws.treeifyError(e)}):e instanceof U?t.status(400).json({message:e.message}):e instanceof w?t.status(404).json({message:e.message}):e instanceof q?t.status(401).json({message:e.message}):e instanceof D?t.status(409).json({message:e.message}):e instanceof m?t.status(500).json({message:e.message}):t.status(500).json({message:"Internal server error"})}};function Pt(){return{errorHandler:new Se}}import{OpenAPIRegistry as Ui,OpenApiGeneratorV3 as Pi}from"@asteasolutions/zod-to-openapi";import{$Enums as Ft}from"@prisma/client";import n from"zod";import{extendZodWithOpenApi as bs}from"@asteasolutions/zod-to-openapi";import se from"zod";var vs=1,Cs=6;bs(se);var Or=se.object({page:se.coerce.number().min(1).default(vs),limit:se.coerce.number().min(1).default(Cs),title:se.string(),description:se.string(),orderBy:se.enum(["asc","desc"]).default("desc")}),je=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{title:t,description:s,limit:i,orderBy:a,page:p}=Or.parse(e.query),u=p*i-i,h=e.user.id,[v,b]=await Promise.all([this.certificationRepository.findByUserId({userId:h,pagination:{offset:u,limit:i},filter:{title:t,description:s,orderBy:a}}),this.certificationRepository.count({filter:{title:t,description:s,userId:h}})]),C=Math.max(Math.ceil(b/i),1);return r.status(200).json({page:p,totalPages:C,offset:u,limit:i,certifications:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Es}from"@asteasolutions/zod-to-openapi";import ie from"zod";var Ss=1,js=7;Es(ie);var Dr=ie.object({page:ie.coerce.number().min(1).default(Ss),limit:ie.coerce.number().min(1).default(js),title:ie.string().optional(),content:ie.string().optional(),orderBy:ie.enum(["asc","desc"]).default("desc")}),xe=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:s,content:i,orderBy:a,title:p}=Dr.parse(e.query),u=s*t-s,h=e.user.id,[v,b]=await Promise.all([this.newsRepository.findByAuthorId({authorId:h,pagination:{offset:u,limit:s},filter:{orderBy:a,title:p,content:i}}),this.newsRepository.count({filter:{authorId:h,content:i,title:p}})]),C=Math.ceil(b/s);r.status(200).json({page:t,totalPages:C,offset:u,limit:s,news:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as xs}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Ts}from"@prisma/client";import K from"zod";var As=1,Us=6;xs(K);var kr=K.object({page:K.coerce.number().min(1).default(As),limit:K.coerce.number().min(1).default(Us),title:K.string().optional(),description:K.string().optional(),status:K.enum(Ts).default("PENDING"),orderBy:K.enum(["asc","desc"]).default("desc")}),Te=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{title:t,description:s,limit:i,orderBy:a,page:p,status:u}=kr.parse(e.query),h=p*i-i,v=e.user.id,[b,C]=await Promise.all([this.pendencyRepository.findByUserId({userId:v,pagination:{offset:h,limit:i},filter:{title:t,description:s,orderBy:a,status:u}}),this.pendencyRepository.count({filter:{title:t,description:s,userId:v,status:u}})]),_=Math.max(Math.ceil(C/i),1);return r.status(200).json({page:p,totalPages:_,offset:h,limit:i,pendencies:b})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ps}from"@asteasolutions/zod-to-openapi";import Ae from"zod";Ps(Ae);var _r=Ae.object({password:Ae.string(),email:Ae.email()}),Ue=class{constructor(e,r,t){this.userRepository=e;this.bcrypt=r;this.jwtService=t}async handle(e,r){try{let{email:t,password:s}=_r.parse(e.body),i=await this.userRepository.findByEmail(t);if(!i)return r.status(401).json({message:"Usu\xE1rio n\xE3o existe."});if(!await this.bcrypt.compare({password:s,hashedPassword:i.passwordHash}))throw new q("Senha inv\xE1lida.");let{id:p,role:u}=i,h=this.jwtService.sign({id:p,role:u,email:t});return r.status(200).json({token:h})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Fs}from"@asteasolutions/zod-to-openapi";import ue from"zod";var Pe=8;Fs(ue);var Mr=ue.object({name:ue.string("Nome \xE9 obrigat\xF3rio.").min(1,"Nome \xE9 obrigat\xF3rio."),emailAddress:ue.email("E-mail inv\xE1lido.").min(1,"E-mail \xE9 obrigat\xF3rio."),password:ue.string("A senha \xE9 obrigat\xF3ria.").min(Pe,`A senha deve ter pelo menos ${Pe} caracteres.`),confirmPassword:ue.string("A senha \xE9 obrigat\xF3ria.").min(Pe,`A senha deve ter pelo menos ${Pe} caracteres.`)}).refine(o=>o.password===o.confirmPassword,{message:"As senhas n\xE3o coincidem.",path:["confirmPassword"]}),Fe=class{constructor(e,r){this.userRepository=e;this.bcrypt=r}async handle(e,r){try{let{emailAddress:t,name:s,password:i}=Mr.parse(e.body);if(await this.userRepository.findByEmail(t))throw new D("Usu\xE1rio j\xE1 existe.");let p=await this.bcrypt.hash(i);return await this.userRepository.create({name:s,emailAddress:t,passwordHash:p}),r.status(201).json()}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Nt={method:"post",path:"/auth/sign-up",tags:["Authentication"],summary:"Create a new user",request:{body:{content:{"application/json":{schema:Mr}}}},responses:{201:{description:"User created successfully",summary:"User Registration Successful",content:{"application/json":{schema:n.object({message:n.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},409:{description:"User already exists with this email",summary:"User Already Exists",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},qt={method:"post",path:"/auth/sign-in",tags:["Authentication"],summary:"Sign in",request:{body:{content:{"application/json":{schema:_r}}}},responses:{200:{description:"Authentication successful, JWT token returned",summary:"Login Successful",content:{"application/json":{schema:n.object({token:n.string()})}}},400:{description:"Invalid credentials or input data",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},401:{description:"Invalid email or password",summary:"Authentication Failed",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},Bt={method:"get",path:"/auth/user",tags:["Authentication"],summary:"Search for authenticated user",security:[{bearerAuth:[]}],responses:{200:{description:"Authenticated user information retrieved successfully",summary:"User Information Retrieved",content:{"application/json":{schema:n.object({name:n.string(),id:n.string(),avatarUrl:n.string().nullable(),createdAt:n.date(),updatedAt:n.date(),emailAddress:n.string(),orcid:n.string().nullable(),phone:n.string().nullable(),lattesUrl:n.string().nullable(),role:n.enum(Ft.UserRole)}).nullable()}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},404:{description:"User not found or not authenticated",summary:"User Not Found",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},Ot={method:"get",path:"/auth/user/news",tags:["Authentication"],summary:"List authenticated user news",security:[{bearerAuth:[]}],request:{query:Dr},responses:{200:{description:"Paginated list of authenticated user news retrieved successfully",summary:"User News Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),news:n.object({content:n.string(),id:n.string(),title:n.string(),createdAt:n.date(),updatedAt:n.date(),imageUrl:n.string().nullable()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},Dt={method:"get",path:"/auth/admin",tags:["Authentication"],summary:"Verify admin access",security:[{bearerAuth:[]}],responses:{200:{description:"Admin access verified successfully",summary:"Admin Access Granted",content:{"application/json":{schema:n.object({success:n.boolean()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},kt={method:"get",path:"/auth/certifications",tags:["Authentication"],summary:"List all authenticated user's certifications",security:[{bearerAuth:[]}],request:{query:Or},responses:{200:{description:"Paginated list of authenticated user certifications retrieved successfully",summary:"User Certifications Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),certifications:n.object({description:n.string(),id:n.string(),title:n.string(),certificationUrl:n.string(),createdAt:n.date(),updatedAt:n.date(),userId:n.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},_t={method:"get",path:"/auth/pendencies",tags:["Authentication"],summary:"List all authenticated user's pendencies",security:[{bearerAuth:[]}],request:{query:kr},responses:{200:{description:"Paginated list of authenticated user pendencies retrieved successfully",summary:"User Pendencies Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),pendencies:n.object({id:n.string(),title:n.string(),description:n.string(),status:n.enum(Ft.PendencyStatus),createdAt:n.date(),updatedAt:n.date(),userId:n.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}};import{$Enums as Ms}from"@prisma/client";import d from"zod";import{extendZodWithOpenApi as Ns}from"@asteasolutions/zod-to-openapi";import Wr from"zod";Ns(Wr);var zr=Wr.object({id:Wr.string()}),Ne=class{constructor(e,r){this.certificationRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=zr.parse({id:e.params.certification_id}),s=await this.certificationRepository.findById(t);if(!s)throw new w("A certifica\xE7\xE3o n\xE3o existe.");return await Promise.all([this.certificationRepository.deleteById(s.id),this.firebaseStorageService.deleteFile({fileUrl:s.certificationUrl})]),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as qs}from"@asteasolutions/zod-to-openapi";import Hr from"zod";qs(Hr);var Lr=Hr.object({certificationId:Hr.uuid()}),qe=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{certificationId:t}=Lr.parse({certificationId:e.params.certification_id}),s=await this.certificationRepository.findById(t);if(!s)throw new w("Certificado n\xE3o encontrado.");return r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Bs}from"@asteasolutions/zod-to-openapi";import G from"zod";var Os=1,Ds=6;Bs(G);var Zr=G.object({page:G.coerce.number().min(1).default(Os),limit:G.coerce.number().min(1).default(Ds),title:G.string().optional(),description:G.string().optional(),userId:G.uuid().optional(),orderBy:G.enum(["asc","desc"]).default("desc")}),Be=class{constructor(e){this.certificationRepository=e}async handle(e,r){try{let{description:t,limit:s,orderBy:i,page:a,title:p,userId:u}=Zr.parse(e.query),h=a*s-s,[v,b]=await Promise.all([this.certificationRepository.find({pagination:{offset:h,limit:s},filter:{title:p,description:t,orderBy:i,userId:u}}),this.certificationRepository.count({filter:{title:p,description:t}})]),C=Math.max(Math.ceil(b/s),1);return r.status(200).json({page:a,totalPages:C,offset:h,limit:s,certifications:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ks}from"@asteasolutions/zod-to-openapi";import le from"zod";var T={NEWS:"images/news",USER:"images/user",CERTIFICATION:"documents/certifications",PENDENCY:"documents/pendencies"};ks(le);var De=le.object({userId:le.uuid(),title:le.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:le.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:le.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do certificado \xE9 obrigat\xF3rio")}),Oe=class{constructor(e,r,t){this.userRepository=e;this.certificationRepository=r;this.firebaseStorageService=t}async handle(e,r){try{let{userId:t,title:s,description:i,certification:a}=De.parse({...e.body,userId:e.params.user_id,certification:e.file});if(!await this.userRepository.findById(t))throw new U("O usu\xE1rio n\xE3o existe.");let u=await this.firebaseStorageService.uploadFile({file:a,id:t,folder:T.CERTIFICATION});return await this.certificationRepository.register({userId:t,title:s,description:i,certificationUrl:u}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as _s}from"@asteasolutions/zod-to-openapi";import fe from"zod";_s(fe);var _e=fe.object({id:fe.uuid(),title:fe.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:fe.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:fe.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do certificado \xE9 inv\xE1lido").optional()}),ke=class{constructor(e,r){this.certificationRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{certification:t,id:s,...i}=_e.parse({...e.body,id:e.params.certification_id,certification:e.file}),a=await this.certificationRepository.findById(s);if(!a)throw new U("A certifica\xE7\xE3o n\xE3o existe");let p=a.certificationUrl;return t&&t.size>0&&(p=await this.firebaseStorageService.updateFile({file:t,id:a.userId,folder:T.CERTIFICATION,fileUrl:a.certificationUrl})),await this.certificationRepository.update({...i,id:s,certificationUrl:p}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Mt={method:"post",path:"/certifications/{user_id}",tags:["Certifications"],summary:"Register certification for user",security:[{bearerAuth:[]}],request:{params:De.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:De.omit({userId:!0})}}}},responses:{201:{description:"Certification registered successfully for the user",summary:"Certification Registered",content:{"application/json":{schema:d.object({message:d.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Wt={method:"get",path:"/certifications",tags:["Certifications"],summary:"List certifications",security:[{bearerAuth:[]}],request:{query:Zr},responses:{200:{description:"Paginated list of certifications with user information retrieved successfully",summary:"Certifications Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),certifications:d.array(d.object({description:d.string(),userId:d.string(),title:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),certificationUrl:d.url(),user:d.object({id:d.uuid(),name:d.string(),createdAt:d.date(),updatedAt:d.date(),avatarUrl:d.string().nullable(),emailAddress:d.email(),orcid:d.string().nullable(),phone:d.string().nullable(),lattesUrl:d.url().nullable(),role:d.enum(Ms.UserRole)})}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},zt={method:"get",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Find certification by ID",security:[{bearerAuth:[]}],request:{params:Lr},responses:{200:{description:"Certification details retrieved successfully",summary:"Certification Retrieved",content:{"application/json":{schema:d.object({description:d.string(),userId:d.string(),title:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),certificationUrl:d.url()}).nullable()}}},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Ht={method:"put",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Update certification",security:[{bearerAuth:[]}],request:{params:_e.pick({id:!0}).transform(()=>({certification_id:""})),body:{content:{"multipart/form-data":{schema:_e.omit({id:!0})}}}},responses:{204:{description:"Certification updated successfully",summary:"Certification Updated"},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Lt={method:"delete",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Delete certification",security:[{bearerAuth:[]}],request:{params:zr},responses:{204:{description:"Certification deleted successfully",summary:"Certification Deleted"},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}};import l from"zod";import{extendZodWithOpenApi as Ws}from"@asteasolutions/zod-to-openapi";import Ie from"zod";var zs=5,Zt=1024,Hs=Zt*Zt,Ls=zs*Hs;Ws(Ie);var Vr=Ie.object({title:Ie.string().min(1),content:Ie.string().min(1),image:Ie.any().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=Ls,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),Me=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{title:t,content:s,image:i}=Vr.parse({...e.body,image:e.file}),a=e.user.id,p=await this.firebaseStorageService.uploadFile({file:i,folder:T.NEWS,id:a});await this.newsRepository.create({title:t,content:s,authorId:a,imageUrl:p}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Zs}from"@asteasolutions/zod-to-openapi";import J from"zod";var Vs=1,Ks=7;Zs(J);var ze=J.object({page:J.coerce.number().min(1).default(Vs),limit:J.coerce.number().min(1).default(Ks),authorId:J.string(),title:J.string().optional(),content:J.string().optional(),orderBy:J.enum(["asc","desc"]).default("desc")}),We=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:s,authorId:i,content:a,orderBy:p,title:u}=ze.parse(e.query),h=s*t-s,[v,b]=await Promise.all([this.newsRepository.findByAuthorId({authorId:i,pagination:{offset:h,limit:s},filter:{orderBy:p,title:u,content:a}}),this.newsRepository.count({filter:{authorId:i,content:a,title:u}})]),C=Math.max(Math.ceil(b/s),1);r.status(200).json({page:t,totalPages:C,offset:h,limit:s,news:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Gs}from"@asteasolutions/zod-to-openapi";import Kr from"zod";Gs(Kr);var Gr=Kr.object({id:Kr.string()}),He=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{id:t}=Gr.parse(e.params),s=await this.newsRepository.findById(t);if(!s)throw new w("Not\xEDcia n\xE3o encontrada.");r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Js}from"@asteasolutions/zod-to-openapi";import $ from"zod";var $s=1,Ys=9;Js($);var Jr=$.object({page:$.coerce.number().min(1).default($s),limit:$.coerce.number().min(1).default(Ys),title:$.string().optional(),content:$.string().optional(),authorId:$.string().optional(),orderBy:$.enum(["asc","desc"]).default("desc")}),Le=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:s,authorId:i,content:a,orderBy:p,title:u}=Jr.parse(e.query),h=s*t-s,[v,b]=await Promise.all([this.newsRepository.find({pagination:{offset:h,limit:s},filter:{authorId:i,content:a,title:u,orderBy:p}}),this.newsRepository.count({filter:{title:u,content:a,authorId:i}})]),C=Math.max(Math.ceil(b/s),1);r.status(200).json({page:t,totalPages:C,offset:h,limit:s,news:v})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Vt={method:"post",path:"/news",tags:["News"],summary:"Create news",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Vr}}}},responses:{201:{description:"News article created successfully",summary:"News Created",content:{"application/json":{schema:l.object({message:l.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},Kt={method:"get",path:"/news",tags:["News"],summary:"List news",request:{query:Jr},responses:{200:{description:"Paginated list of news articles retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:l.object({page:l.number(),totalPages:l.number(),offset:l.number(),limit:l.number(),news:l.array(l.object({title:l.string(),content:l.string(),id:l.string(),createdAt:l.date(),updatedAt:l.date(),imageUrl:l.string().nullable()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},Gt={method:"get",path:"/news/{id}",tags:["News"],summary:"Find news by ID",request:{params:Gr},responses:{200:{description:"News article details retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:l.object({page:l.number(),totalPages:l.number(),offset:l.number(),limit:l.number(),news:l.object({title:l.string(),content:l.string(),id:l.string(),createdAt:l.date(),updatedAt:l.date(),imageUrl:l.string().nullable()})})}}},400:{description:"Invalid news ID format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},404:{description:"News article not found with the provided ID",summary:"News Not Found",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},Jt={method:"get",path:"/news/author/{author_id}",tags:["News"],summary:"List news by author",request:{params:ze.pick({authorId:!0}).transform(()=>({author_id:""})),query:ze.omit({authorId:!0})},responses:{200:{description:"Paginated list of news articles by author retrieved successfully",summary:"Author News Retrieved",content:{"application/json":{schema:l.object({page:l.number(),totalPages:l.number(),offset:l.number(),limit:l.number(),news:l.array(l.object({title:l.string(),content:l.string(),id:l.string(),createdAt:l.date(),updatedAt:l.date(),imageUrl:l.string().nullable()}))})}}},400:{description:"Invalid author ID or query parameters",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},404:{description:"Author not found with the provided ID",summary:"Author Not Found",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}};import{$Enums as $t}from"@prisma/client";import y from"zod";import{extendZodWithOpenApi as Xs}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Qs}from"@prisma/client";import Y from"zod";Xs(Y);var Ve=Y.object({userId:Y.uuid(),title:Y.string().min(1),description:Y.string().optional(),status:Y.enum(Qs).default("PENDING"),dueDate:Y.coerce.date().optional(),document:Y.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do documento \xE9 obrigat\xF3rio")}),Ze=class{constructor(e,r,t){this.userRepository=e;this.pendencyRepository=r;this.firebaseStorageService=t}async handle(e,r){try{let{userId:t,title:s,description:i,status:a,dueDate:p,document:u}=Ve.parse({...e.body,userId:e.params.user_id,document:e.file});if(!await this.userRepository.findById(t))throw new U("O usu\xE1rio n\xE3o existe.");let v=await this.firebaseStorageService.uploadFile({file:u,id:t,folder:T.PENDENCY});return await this.pendencyRepository.create({userId:t,title:s,description:i,status:a,dueDate:p,documentUrl:v}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ei}from"@asteasolutions/zod-to-openapi";import $r from"zod";ei($r);var Yr=$r.object({id:$r.uuid()}),Ke=class{constructor(e,r){this.pendencyRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=Yr.parse({id:e.params.pendency_id}),s=await this.pendencyRepository.findById(t);if(!s)throw new w("A pend\xEAncia n\xE3o existe.");return await Promise.all([this.pendencyRepository.deleteById(s.id),this.firebaseStorageService.deleteFile({fileUrl:s.documentUrl})]),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ri}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as ti}from"@prisma/client";import z from"zod";var oi=1,si=6;ri(z);var Xr=z.object({page:z.coerce.number().min(1).default(oi),limit:z.coerce.number().min(1).default(si),title:z.string().optional(),description:z.string().optional(),status:z.enum(ti).default("PENDING"),userId:z.uuid().optional(),orderBy:z.enum(["asc","desc"]).default("desc")}),Ge=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{description:t,limit:s,orderBy:i,page:a,title:p,status:u,userId:h}=Xr.parse(e.query),v=a*s-s,[b,C]=await Promise.all([this.pendencyRepository.find({pagination:{offset:v,limit:s},filter:{title:p,description:t,status:u,orderBy:i,userId:h}}),this.pendencyRepository.count({filter:{title:p,description:t,status:u,userId:h}})]),_=Math.max(Math.ceil(C/s),1);return r.status(200).json({page:a,totalPages:_,offset:v,limit:s,pendencies:b})}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ii}from"@asteasolutions/zod-to-openapi";import Qr from"zod";ii(Qr);var et=Qr.object({pendencyId:Qr.uuid()}),Je=class{constructor(e){this.pendencyRepository=e}async handle(e,r){try{let{pendencyId:t}=et.parse({pendencyId:e.params.pendency_id}),s=await this.pendencyRepository.findById(t);if(!s)throw new w("Pend\xEAncia n\xE3o encontrada.");return r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ni}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as ai}from"@prisma/client";import X from"zod";ni(X);var Ye=X.object({id:X.uuid(),title:X.string().min(1),description:X.string().optional(),status:X.enum(ai),dueDate:X.coerce.date().optional(),document:X.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do documento \xE9 inv\xE1lido").optional()}),$e=class{constructor(e,r){this.pendencyRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{document:t,id:s,...i}=Ye.parse({...e.body,id:e.params.pendency_id,document:e.file}),a=await this.pendencyRepository.findById(s);if(!a)throw new U("A pend\xEAncia n\xE3o existe");let p=a.documentUrl;return t&&t.size>0&&(p=await this.firebaseStorageService.updateFile({file:t,id:a.userId,folder:T.PENDENCY,fileUrl:a.documentUrl})),await this.pendencyRepository.update({...i,id:s,documentUrl:p}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Yt={method:"post",path:"/pendency/{user_id}",tags:["Pendencies"],summary:"Create pendency for user",security:[{bearerAuth:[]}],request:{params:Ve.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:Ve.omit({userId:!0})}}}},responses:{201:{description:"Pendency created successfully for the user",summary:"Pendency Created",content:{"application/json":{schema:y.object({})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Xt={method:"get",path:"/pendency",tags:["Pendencies"],summary:"List pendencies",security:[{bearerAuth:[]}],request:{query:Xr},responses:{200:{description:"Paginated list of pendencies retrieved successfully",summary:"Pendencies Retrieved",content:{"application/json":{schema:y.object({page:y.number(),totalPages:y.number(),offset:y.number(),limit:y.number(),pendencies:y.array(y.object({id:y.string(),title:y.string(),description:y.string().nullable(),status:y.enum($t.PendencyStatus),dueDate:y.date().nullable(),documentUrl:y.string(),userId:y.string(),createdAt:y.date(),updatedAt:y.date()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Qt={method:"get",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Find pendency by ID",security:[{bearerAuth:[]}],request:{params:et},responses:{200:{description:"Pendency details retrieved successfully",summary:"Pendency Retrieved",content:{"application/json":{schema:y.object({id:y.string(),title:y.string(),description:y.string().nullable(),status:y.enum($t.PendencyStatus),dueDate:y.date().nullable(),documentUrl:y.string(),userId:y.string(),createdAt:y.date(),updatedAt:y.date()}).nullable()}}},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},eo={method:"put",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Update pendency",security:[{bearerAuth:[]}],request:{params:Ye.pick({id:!0}).transform(()=>({pendency_id:""})),body:{content:{"multipart/form-data":{schema:Ye.omit({id:!0})}}}},responses:{204:{description:"Pendency updated successfully",summary:"Pendency Updated"},400:{description:"Invalid input data or pendency does not exist",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},ro={method:"delete",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Delete pendency",security:[{bearerAuth:[]}],request:{params:Yr},responses:{204:{description:"Pendency deleted successfully",summary:"Pendency Deleted"},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}};import{$Enums as ct}from"@prisma/client";import c from"zod";import{extendZodWithOpenApi as ci}from"@asteasolutions/zod-to-openapi";import{Degree as mi,Seniority as pi}from"@prisma/client";import B from"zod";ci(B);var rt=B.object({registrationNumber:B.string(),mainEtps:B.string().optional(),formations:B.string().optional(),degrees:B.array(B.enum(mi)),occupations:B.string(),seniority:B.enum(pi),institutions:B.string(),biography:B.string().optional(),userId:B.string()}),Xe=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{registrationNumber:t,mainEtps:s,formations:i,degrees:a,occupations:p,seniority:u,institutions:h,biography:v,userId:b}=rt.parse(e.body);if(await this.researcherRepository.findByRegistrationNumber(t))throw new D("J\xE1 existe um pesquisador cadastrado com este n\xFAmero de registro.");if(await this.researcherRepository.findByUserId(b))throw new D("Usu\xE1rio j\xE1 possui um perfil de pesquisador.");return await this.researcherRepository.create({registrationNumber:t,mainEtps:s,formations:i,degrees:a,occupations:p,seniority:u,institutions:h,biography:v,userId:b}),r.sendStatus(201)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as di}from"@asteasolutions/zod-to-openapi";import tt from"zod";di(tt);var ot=tt.object({id:tt.uuid()}),Qe=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t}=ot.parse({id:e.params.id});if(!await this.researcherRepository.findById(t))throw new w("O pesquisador n\xE3o existe.");return await this.researcherRepository.deleteById(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as ui}from"@asteasolutions/zod-to-openapi";import st from"zod";ui(st);var rr=st.object({id:st.uuid()}),er=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t}=rr.parse({id:e.params.id}),s=await this.researcherRepository.findById(t);if(!s)throw new w("O pesquisador n\xE3o existe.");return r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as li}from"@asteasolutions/zod-to-openapi";import it from"zod";li(it);var nt=it.object({userId:it.uuid()}),tr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{userId:t}=nt.parse({userId:e.params.userId}),s=await this.researcherRepository.findByUserId(t);if(!s)throw new w("O pesquisador n\xE3o existe para este usu\xE1rio.");return r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as fi}from"@asteasolutions/zod-to-openapi";import{Degree as yi,Seniority as hi}from"@prisma/client";import O from"zod";fi(O);var at=O.object({id:O.uuid(),registrationNumber:O.string().optional(),mainEtps:O.string().optional(),formations:O.string().optional(),degrees:O.array(O.enum(yi)).optional(),occupations:O.string().optional(),seniority:O.enum(hi).optional(),institutions:O.string().optional(),biography:O.string().optional()}),or=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{id:t,registrationNumber:s,mainEtps:i,formations:a,degrees:p,occupations:u,seniority:h,institutions:v,biography:b}=at.parse({id:e.params.id,...e.body}),C=await this.researcherRepository.findById(t);if(!C)throw new w("O pesquisador n\xE3o existe.");if(s&&s!==C.registrationNumber){let _=await this.researcherRepository.findByRegistrationNumber(s);if(_&&_.id!==t)throw new D("J\xE1 existe um pesquisador com este n\xFAmero de registro.")}return await this.researcherRepository.update({id:t,registrationNumber:s,mainEtps:i,formations:a,degrees:p,occupations:u,seniority:h,institutions:v,biography:b}),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var gi=1,Ri=9,mt=c.object({id:c.uuid(),registrationNumber:c.string(),mainEtps:c.string().nullable(),formations:c.string().nullable(),degrees:c.array(c.enum(ct.Degree)),occupations:c.string(),seniority:c.enum(ct.Seniority),institutions:c.string(),biography:c.string().nullable(),createdAt:c.date(),updatedAt:c.date(),userId:c.uuid(),user:c.object({id:c.uuid(),name:c.string(),emailAddress:c.string(),avatarUrl:c.string().nullable(),orcid:c.string().nullable(),phone:c.string().nullable(),lattesUrl:c.string().nullable(),role:c.enum(ct.UserRole)})}),to={method:"post",path:"/researcher",tags:["Researchers"],summary:"Create a new researcher profile",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:rt}}}},responses:{201:{description:"Researcher profile created successfully",summary:"Researcher Created",content:{"application/json":{schema:c.object({message:c.string()})}}},400:{description:"Invalid input data or missing required fields",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:c.object({message:c.string()})}}},409:{description:"Researcher with this registration number already exists or user already has a researcher profile",summary:"Conflict",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},oo={method:"get",path:"/researcher",tags:["Researchers"],summary:"List all researchers with pagination and filters",request:{query:c.object({page:c.coerce.number().min(1).default(gi).optional(),limit:c.coerce.number().min(1).default(Ri).optional(),userId:c.string().optional(),registrationNumber:c.string().optional(),name:c.string().optional(),emailAddress:c.string().optional(),mainEtps:c.string().optional(),formations:c.string().optional(),occupations:c.string().optional(),institutions:c.string().optional(),biography:c.string().optional(),orderBy:c.enum(["asc","desc"]).optional()})},responses:{200:{description:"List of researchers retrieved successfully with pagination",summary:"Researchers Retrieved",content:{"application/json":{schema:c.object({page:c.number(),totalPages:c.number(),offset:c.number(),limit:c.number(),researchers:c.array(mt)})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},so={method:"get",path:"/researcher/{id}",tags:["Researchers"],summary:"Find researcher by ID",request:{params:rr},responses:{200:{description:"Researcher details retrieved successfully",summary:"Researcher Retrieved",content:{"application/json":{schema:mt}}},400:{description:"Invalid researcher ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},io={method:"get",path:"/researcher/user/{userId}",tags:["Researchers"],summary:"Find researcher by user ID",request:{params:nt},responses:{200:{description:"Researcher details retrieved successfully",summary:"Researcher Retrieved",content:{"application/json":{schema:mt}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Researcher not found for this user",summary:"Researcher Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},no={method:"put",path:"/researcher/{id}",tags:["Researchers"],summary:"Update researcher profile",security:[{bearerAuth:[]}],request:{params:rr,body:{content:{"application/json":{schema:at.omit({id:!0})}}}},responses:{200:{description:"Researcher profile updated successfully",summary:"Researcher Updated",content:{"application/json":{schema:c.object({message:c.string()})}}},400:{description:"Invalid input data or researcher ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:c.object({message:c.string()})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},409:{description:"Researcher with this registration number already exists",summary:"Conflict",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},ao={method:"delete",path:"/researcher/{id}",tags:["Researchers"],summary:"Delete researcher profile",security:[{bearerAuth:[]}],request:{params:ot},responses:{200:{description:"Researcher profile deleted successfully",summary:"Researcher Deleted"},400:{description:"Invalid researcher ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},401:{description:"User not authenticated",summary:"Authentication Required",content:{"application/json":{schema:c.object({message:c.string()})}}},404:{description:"Researcher not found with the provided ID",summary:"Researcher Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}};import f from"zod";import{extendZodWithOpenApi as Ii}from"@asteasolutions/zod-to-openapi";import H from"zod";Ii(H);var pt=H.object({name:H.string().min(1),type:H.string().min(1),members:H.array(H.object({role:H.string().min(1),user:H.object({id:H.string()})}))}),sr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{name:t,type:s,members:i}=pt.parse(e.body);await this.teamRepository.create({name:t,type:s,members:i}),r.status(201).json()}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as wi}from"@asteasolutions/zod-to-openapi";import{z as dt}from"zod";wi(dt);var we=dt.object({id:dt.uuid()}),ir=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=we.parse(e.params),s=await this.teamRepository.findById(t);r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as bi}from"@asteasolutions/zod-to-openapi";import{z as nr}from"zod";bi(nr);var ut=nr.object({type:nr.string(),name:nr.string().optional()}),ar=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{type:t,name:s}=ut.parse({type:e.params.type,name:e.query.name}),i=await this.teamRepository.findByType({type:t,filter:{name:s}});r.status(200).json(i)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as vi}from"@asteasolutions/zod-to-openapi";import{z as W}from"zod";vi(W);var lt=W.object({id:W.uuid(),name:W.string().min(1),members:W.array(W.object({role:W.string(),id:W.uuid().optional(),user:W.object({id:W.uuid()})}))}),cr=class{constructor(e,r){this.teamRepository=e;this.teamMemberRepository=r}async handle(e,r){try{let{id:t,members:s,name:i}=lt.parse({id:e.params.id,...e.body}),a=await this.teamMemberRepository.findByTeamId(t),p=s.map(h=>h.id),u=a.filter(h=>!p.includes(h.id)).map(h=>h.id);await this.teamMemberRepository.deleteMany(u),await this.teamMemberRepository.updateMany({teamId:t,members:s}),await this.teamRepository.update({id:t,name:i}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var co={method:"post",path:"/team",tags:["Teams"],summary:"Create team",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:pt}}}},responses:{201:{description:"Team created successfully",summary:"Team Created",content:{"application/json":{schema:f.object({message:f.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},mo={method:"put",path:"/team/{id}",tags:["Teams"],summary:"Update team",security:[{bearerAuth:[]}],request:{params:we,body:{content:{"application/json":{schema:lt}}}},responses:{204:{description:"Team updated successfully",summary:"Team Updated"},400:{description:"Invalid input data or team ID format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},po={method:"delete",path:"/team/{id}",tags:["Teams"],summary:"Delete team",security:[{bearerAuth:[]}],request:{params:we},responses:{204:{description:"Team deleted successfully",summary:"Team Deleted"},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},uo={method:"get",path:"/team/id/{id}",tags:["Teams"],summary:"Find team by ID",request:{params:we},responses:{200:{description:"Team details retrieved successfully",summary:"Team Retrieved",content:{"application/json":{schema:f.object({type:f.string(),name:f.string(),id:f.string(),createdAt:f.date(),updatedAt:f.date(),description:f.string().nullable()})}}},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:f.object({message:f.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},lo={method:"get",path:"/team/type/{type}",tags:["Teams"],summary:"Find teams by type",request:{params:ut.pick({type:!0})},responses:{200:{description:"List of teams by type retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:f.array(f.object({type:f.string(),name:f.string(),id:f.string(),createdAt:f.date(),updatedAt:f.date(),description:f.string().nullable()})).nullable()}}},400:{description:"Invalid team type parameter",summary:"Validation Error",content:{"application/json":{schema:f.object({errors:f.record(f.string(),f.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}},fo={method:"get",path:"/team",tags:["Teams"],summary:"List teams",responses:{200:{description:"Complete list of teams retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:f.array(f.object({type:f.string(),name:f.string(),id:f.string(),createdAt:f.date(),updatedAt:f.date(),description:f.string().nullable()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:f.object({message:f.string()})}}}}};import{$Enums as go}from"@prisma/client";import g from"zod";import{extendZodWithOpenApi as Ci}from"@asteasolutions/zod-to-openapi";import ft from"zod";Ci(ft);var yt=ft.object({id:ft.string()}),mr=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{id:t}=yt.parse({id:e.params.id}),s=await this.userRepository.findById(t);if(!s)throw new w("O usu\xE1rio n\xE3o existe.");let i=e.user.id;if(s.id!==i)throw new q("Voc\xEA n\xE3o tem permiss\xE3o para deletar o usu\xE1rio");return await this.userRepository.deleteById(s.id),r.sendStatus(204)}catch(t){if(console.log(t),t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ei}from"@asteasolutions/zod-to-openapi";import{z as ht}from"zod";Ei(ht);var gt=ht.object({id:ht.string().min(1,"id do usu\xE1rio n\xE3o fornecido.")}),pr=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{id:t}=gt.parse(e.params),s=await this.userRepository.findById(t);if(!s)throw new w("Usu\xE1rio n\xE3o encontrado");r.status(200).json(s)}catch(t){if(console.log(t),t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Si}from"@asteasolutions/zod-to-openapi";import ne from"zod";var ho=2,yo=1024,ji=yo*yo,xi=ho*ji,Ti=/^\d{4}-\d{4}-\d{4}-\d{4}$/,dr=/^[^0-9]*$/,Ai=/^\(?\d{2}\)?[\s-]?\d{4,5}-?\d{4}$/;Si(ne);var Rt=ne.object({name:ne.string().optional(),lattesUrl:ne.string().optional(),orcid:ne.string().transform(o=>o.trim()).transform(o=>dr.test(o)?"":o).refine(o=>dr.test(o)||Ti.test(o),{message:"ORCID inv\xE1lido. Deve estar no formato 0000-0000-0000-0000"}),phone:ne.string().transform(o=>dr.test(o)?"":o).refine(o=>dr.test(o)||Ai.test(o),{message:"Telefone inv\xE1lido. Deve estar no formato (99) 99999-9999"}),avatarImage:ne.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=xi,`A imagem deve ter no m\xE1ximo ${ho}MB.`).optional()}),ur=class{constructor(e,r){this.userRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{avatarImage:t,...s}=Rt.parse({...e.body,avatarImage:e.file}),i=e.user.id,a=await this.userRepository.findById(i);if(!a)throw new U("O usu\xE1rio n\xE3o existe");let p=a.avatarUrl;return t&&(a.avatarUrl?p=await this.firebaseStorageService.updateFile({file:t,id:i,folder:T.USER,fileUrl:a.avatarUrl}):p=await this.firebaseStorageService.uploadFile({file:t,id:i,folder:T.USER})),await this.userRepository.update({...s,id:i,avatarUrl:p||void 0}),r.sendStatus(204)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Ro={method:"get",path:"/users/{id}",tags:["Users"],summary:"Find user by ID",request:{params:gt},responses:{200:{description:"User details retrieved successfully",summary:"User Retrieved",content:{"application/json":{schema:g.object({id:g.string(),name:g.string(),createdAt:g.date(),updatedAt:g.date(),role:g.enum(go.UserRole),lattesUrl:g.string().nullable(),orcid:g.string().nullable(),phone:g.string().nullable(),avatarUrl:g.url().nullable(),emailAddress:g.email()})}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},Io={method:"put",path:"/users",tags:["Users"],summary:"Update authenticated user",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Rt}}}},responses:{200:{description:"User profile updated successfully",summary:"User Updated",content:{"application/json":{schema:g.object({message:g.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},wo={method:"delete",path:"/users",tags:["Users"],summary:"Delete authenticated user",security:[{bearerAuth:[]}],request:{params:yt},responses:{200:{description:"User account deleted successfully",summary:"User Deleted",content:{"application/json":{schema:g.object({message:g.string()})}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:g.object({errors:g.record(g.string(),g.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:g.object({message:g.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}},bo={method:"get",path:"/users",tags:["Users"],summary:"List users",responses:{200:{description:"Complete list of users retrieved successfully",summary:"Users Retrieved",content:{"application/json":{schema:g.array(g.object({id:g.string(),name:g.string(),createdAt:g.date(),updatedAt:g.date(),role:g.enum(go.UserRole),lattesUrl:g.url().nullable(),orcid:g.string().nullable(),phone:g.string().nullable(),avatarUrl:g.string().nullable(),emailAddress:g.email()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:g.object({message:g.string()})}}}}};var I=new Ui;I.registerComponent("securitySchemes","bearerAuth",{type:"http",scheme:"bearer",bearerFormat:"JWT"});I.registerPath(Nt);I.registerPath(qt);I.registerPath(Bt);I.registerPath(Ot);I.registerPath(kt);I.registerPath(_t);I.registerPath(Dt);I.registerPath(Ro);I.registerPath(Io);I.registerPath(wo);I.registerPath(bo);I.registerPath(co);I.registerPath(mo);I.registerPath(po);I.registerPath(uo);I.registerPath(lo);I.registerPath(fo);I.registerPath(Vt);I.registerPath(Kt);I.registerPath(Gt);I.registerPath(Jt);I.registerPath(Mt);I.registerPath(Wt);I.registerPath(zt);I.registerPath(Ht);I.registerPath(Lt);I.registerPath(Yt);I.registerPath(Xt);I.registerPath(Qt);I.registerPath(eo);I.registerPath(ro);I.registerPath(to);I.registerPath(oo);I.registerPath(so);I.registerPath(io);I.registerPath(no);I.registerPath(ao);var Fi=new Pi(I.definitions),vo=Fi.generateDocument({openapi:"3.0.0",info:{title:"API da Rede CT",version:"1.0.0",description:"API com valida\xE7\xE3o Zod"}});import{Router as _i}from"express";import{extendZodWithOpenApi as Ni}from"@asteasolutions/zod-to-openapi";import It from"zod";Ni(It);var qi=It.object({authenticatedUserId:It.uuid()}),lr=class{constructor(e){this.userRepository=e}async handle(e,r){try{let{authenticatedUserId:t}=qi.parse({authenticatedUserId:e.user.id}),s=await this.userRepository.findById(t);if(!s)throw new w("Usu\xE1rio n\xE3o encontrado.");return r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{PrismaClient as Bi}from"@prisma/client";var E=new Bi({log:["warn","error"]});var fr=class{constructor(e){this.prisma=e}async register({userId:e,title:r,description:t,certificationUrl:s}){await this.prisma.certification.create({data:{title:r,description:t,certificationUrl:s,user:{connect:{id:e}}}})}async find({pagination:{limit:e,offset:r},filter:{description:t,orderBy:s,title:i,userId:a}}){let p={userId:a},u=[];return i&&u.push({title:{contains:i,mode:"insensitive"}}),t&&u.push({description:{contains:t,mode:"insensitive"}}),u.length>0&&(p.OR=u),await this.prisma.certification.findMany({where:p,include:{user:{omit:{passwordHash:!0}}},skip:r,take:e,orderBy:{updatedAt:s}})}async findById(e){return await this.prisma.certification.findFirst({where:{id:e}})}async findByUserId({pagination:{limit:e,offset:r},filter:{description:t,orderBy:s,title:i},userId:a}){let p={userId:a},u=[];return i&&u.push({title:{contains:i,mode:"insensitive"}}),t&&u.push({description:{contains:t,mode:"insensitive"}}),u.length>0&&(p.OR=u),await this.prisma.certification.findMany({where:p,include:{user:{omit:{passwordHash:!0}}},skip:r,take:e,orderBy:{updatedAt:s}})}async update({id:e,...r}){await this.prisma.certification.update({where:{id:e},data:r})}async deleteById(e){await this.prisma.certification.delete({where:{id:e}})}async count({filter:{description:e,title:r,userId:t}}){let s={};r&&(s.title={contains:r,mode:"insensitive"});let i=[];return e&&i.push({description:{contains:e,mode:"insensitive"}}),t&&i.push({userId:t}),i.length>0&&(s.OR=i),await this.prisma.certification.count({where:s})}};function Q(){return new fr(E)}var yr=class{constructor(e){this.prisma=e}async create({authorId:e,...r}){return await this.prisma.news.create({data:{...r,author:{connect:{id:e}}}})}async find({pagination:{offset:e,limit:r},filter:{authorId:t,content:s,title:i,orderBy:a}}){let p={};t&&(p.authorId={contains:t,mode:"insensitive"});let u=[];return i&&u.push({title:{contains:i,mode:"insensitive"}}),s&&u.push({content:{contains:s,mode:"insensitive"}}),u.length>0&&(p.OR=u),await this.prisma.news.findMany({where:p,omit:{authorId:!0},include:{author:!0},orderBy:{updatedAt:a},skip:e,take:r})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},omit:{authorId:!0},include:{author:!0}})}async findByAuthorId({authorId:e,pagination:{offset:r,limit:t},filter:{orderBy:s="desc",content:i,title:a}}){let p={authorId:e},u=[];return a&&u.push({title:{contains:a,mode:"insensitive"}}),i&&u.push({content:{contains:i,mode:"insensitive"}}),u.length>0&&(p.OR=u),await this.prisma.news.findMany({omit:{authorId:!0},where:p,orderBy:{updatedAt:s},skip:r,take:t})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,imageUrl:e.imageUrl}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{authorId:e,content:r,title:t}}){let s={};e&&(s.authorId={contains:e,mode:"insensitive"});let i=[];return t&&i.push({title:{contains:t,mode:"insensitive"}}),r&&i.push({content:{contains:r,mode:"insensitive"}}),i.length>0&&(s.OR=i),await this.prisma.news.count({where:s})}};function L(){return new yr(E)}var hr=class{constructor(e){this.prisma=e}async create(e){await this.prisma.pendency.create({data:e})}async find({filter:{description:e,orderBy:r,title:t,status:s,userId:i},pagination:{limit:a,offset:p}}){let u={userId:i,AND:{status:{equals:s}}};e&&(u.description={contains:e,mode:"insensitive"});let h=[];return t&&h.push({title:{contains:t,mode:"insensitive"}}),h.length>0&&(u.OR=h),await this.prisma.pendency.findMany({where:u,orderBy:{updatedAt:r},include:{user:{omit:{passwordHash:!0}}},skip:p,take:a})}async findById(e){return await this.prisma.pendency.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId({filter:{description:e,orderBy:r,title:t,status:s},pagination:{limit:i,offset:a},userId:p}){let u={userId:p,AND:{status:{equals:s}}},h=[];return e&&h.push({description:{contains:e,mode:"insensitive"}}),t&&h.push({title:{contains:t,mode:"insensitive"}}),h.length>0&&(u.OR=h),await this.prisma.pendency.findMany({where:u,orderBy:{updatedAt:r},skip:a,take:i})}async update({id:e,...r}){await this.prisma.pendency.update({where:{id:e},data:r})}async deleteById(e){await this.prisma.pendency.delete({where:{id:e}})}async count({filter:{description:e,title:r,status:t,userId:s}}){let i={userId:s},a=[];return e&&a.push({description:{contains:e,mode:"insensitive"}}),r&&a.push({title:{contains:r,mode:"insensitive"}}),t&&a.push({status:{equals:t}}),a.length>0&&(i.OR=a),await this.prisma.pendency.count({where:i})}};function ee(){return new hr(E)}var gr=class{constructor(e){this.prisma=e}async create(e){await this.prisma.user.create({data:e})}async update(e){await this.prisma.user.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.user.delete({where:{id:e}})}async find(){return await this.prisma.user.findMany({omit:{passwordHash:!0}})}async findByEmail(e){return await this.prisma.user.findFirst({where:{emailAddress:e}})}async findById(e){return await this.prisma.user.findFirst({where:{id:e},omit:{passwordHash:!0}})}};function A(){return new gr(E)}import{compare as Oi,hash as Di}from"bcryptjs";var Rr=class{constructor(e,r){this.hashFn=e;this.compareFn=r}async hash(e){return await this.hashFn(e,6)}async compare({password:e,hashedPassword:r}){return await this.compareFn(e,r)}};function wt(){return new Rr(Di,Oi)}import Co from"jsonwebtoken";import N from"zod";var ki=N.object({JWT_SECRET:N.string(),FIREBASE_BUCKET:N.string(),FIREBASE_CLIENT_EMAIL:N.string(),FIREBASE_PRIVATE_KEY:N.string(),FIREBASE_PROJECT_ID:N.string(),FIREBASE_TYPE:N.string(),FIREBASE_PRIVATE_KEY_ID:N.string(),FIREBASE_CLIENT_ID:N.string(),FIREBASE_AUTH_URI:N.string(),FIREBASE_TOKEN_URI:N.string(),FIREBASE_AUTH_PROVIDER_X509_CERT_URL:N.string(),FIREBASE_CLIENT_X509_CERT_URL:N.string()}),S=ki.parse(process.env);var Ir=class{constructor(e,r){this.signFn=e;this.verifyFn=r}sign(e){try{return this.signFn(e,S.JWT_SECRET,{expiresIn:"3d",subject:e.id})}catch{return null}}verify(e){try{return this.verifyFn(e,S.JWT_SECRET)}catch{return null}}};function wr(){return new Ir(Co.sign,Co.verify)}function Eo(){return{signUpController:new Fe(A(),wt())}}function So(){return{signInController:new Ue(A(),wt(),wr())}}function jo(){return{findAuthenticatedUserController:new lr(A())}}function xo(){return{findAuthenticatedUserController:new xe(L())}}function To(){return{findAuthenticatedUserCertificationsController:new je(Q())}}function Ao(){return{findAuthenticatedUserPendenciesController:new Te(ee())}}var br=class{constructor(e){this.jwtService=e}authenticated(e,r,t){let s=e.headers.authorization;if(!s?.startsWith("Bearer "))return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let i=s.split(" ")[1];if(!i)return r.status(401).json({message:"Token n\xE3o fornecido."});try{let a=this.jwtService.verify(i);if(!a)return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});e.user=a,t()}catch(a){if(console.log(a),a instanceof Error)return r.status(401).json({message:a.message})}}isAdmin(e,r,t){let s=e.headers.authorization;if(!s?.startsWith("Bearer "))return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});let i=s.split(" ")[1];if(!i)return r.status(401).json({message:"Token n\xE3o fornecido."});try{let a=this.jwtService.verify(i);if(!a)return r.status(401).json({message:"Token inv\xE1lido.",invalid:!0});if(a.role!=="ADMIN")return r.status(401).json({message:"\xC9 necess\xE1rio ter permiss\xF5es de administrador."});t()}catch(a){if(console.log(a),a instanceof Error)return r.status(401).json({message:a.message})}}};function j(){return{authMiddleware:new br(wr())}}var Z=_i(),{authMiddleware:be}=j();Z.post("/sign-up",async(o,e)=>{let{signUpController:r}=Eo();await r.handle(o,e)});Z.post("/sign-in",async(o,e)=>{let{signInController:r}=So();await r.handle(o,e)});Z.get("/user",(o,e,r)=>{be.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserController:r}=jo();await r.handle(o,e)});Z.get("/user/news",(o,e,r)=>{be.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserController:r}=xo();await r.handle(o,e)});Z.get("/admin",(o,e,r)=>{be.isAdmin(o,e,r)},(o,e)=>{try{e.status(200).json({success:!0})}catch(r){r instanceof Error&&e.status(500).json({message:r.message})}});Z.get("/certifications",(o,e,r)=>{be.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserCertificationsController:r}=To();await r.handle(o,e)});Z.get("/pendencies",(o,e,r)=>{be.authenticated(o,e,r)},async(o,e)=>{let{findAuthenticatedUserPendenciesController:r}=Ao();await r.handle(o,e)});import{Router as Zi}from"express";import{getStorage as Wi}from"firebase-admin/storage";import{config as Mi}from"dotenv";import Uo from"firebase-admin";Mi();var bt=Uo.initializeApp({credential:Uo.credential.cert({clientEmail:S.FIREBASE_CLIENT_EMAIL,privateKey:S.FIREBASE_PRIVATE_KEY,projectId:S.FIREBASE_PROJECT_ID,type:S.FIREBASE_TYPE,privateKeyId:S.FIREBASE_PRIVATE_KEY_ID,clientId:S.FIREBASE_CLIENT_ID,authUri:S.FIREBASE_AUTH_URI,tokenUri:S.FIREBASE_TOKEN_URI,authProviderX509CertUrl:S.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:S.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:S.FIREBASE_BUCKET});bt.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var zi=Wi(bt),Po=zi.bucket(S.FIREBASE_BUCKET);import{randomUUID as Hi}from"node:crypto";var Li=/https:\/\/storage\.googleapis\.com\/[^/]+\/(.+)$/,vr=class{constructor(e){this.bucket=e}async uploadFile({file:e,folder:r,id:t}){let s=`${Hi()}-${e?.originalname}`,i=this.bucket.file(`${r}/${t}/${s}`);return await new Promise((a,p)=>{let u=i.createWriteStream({metadata:{contentType:e?.mimetype}});u.on("error",h=>{p(h)}),u.on("finish",async()=>{try{await i.makePublic();let h=`https://storage.googleapis.com/${this.bucket.name}/${i.name}`;a(h)}catch(h){p(h)}}),u.end(e.buffer)})}async updateFile({file:e,id:r,fileUrl:t,folder:s}){try{let i=this.getPath(t);if(!i)throw new Error("Arquivo n\xE3o encontrado.");let[a,p]=await Promise.all([this.bucket.file(i).delete(),this.uploadFile({file:e,id:r,folder:s})]);return p}catch{throw new Error("Erro ao atualizar o arquivo.")}}async deleteFile({fileUrl:e}){let r=this.getPath(e);if(!r)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(r).delete()}catch{throw new Error("Erro ao deletar o arquivo.")}}getPath(e){let r=e.match(Li);return r?r[1]:null}};function P(){return new vr(Po)}function Fo(){return{registerCertificationController:new Oe(A(),Q(),P())}}function No(){return{findCertificationsController:new Be(Q())}}function qo(){return{findCertificationByIdController:new qe(Q())}}function Bo(){return{updateCertificationController:new ke(Q(),P())}}function Oo(){return{deleteCertificationController:new Ne(Q(),P())}}import Do from"multer";var k=Do({storage:Do.memoryStorage()});var ae=Zi(),{authMiddleware:ve}=j();ae.post("/:user_id",(o,e,r)=>{ve.isAdmin(o,e,r)},k.single("certification"),async(o,e)=>{let{registerCertificationController:r}=Fo();await r.handle(o,e)});ae.get("/",(o,e,r)=>{ve.isAdmin(o,e,r)},async(o,e)=>{let{findCertificationsController:r}=No();await r.handle(o,e)});ae.get("/:certification_id",(o,e,r)=>{ve.isAdmin(o,e,r)},async(o,e)=>{let{findCertificationByIdController:r}=qo();await r.handle(o,e)});ae.put("/:certification_id",(o,e,r)=>{ve.isAdmin(o,e,r)},k.single("certification"),async(o,e)=>{let{updateCertificationController:r}=Bo();await r.handle(o,e)});ae.delete("/:certification_id",(o,e,r)=>{ve.isAdmin(o,e,r)},async(o,e)=>{let{deleteCertificationController:r}=Oo();await r.handle(o,e)});import{Router as Vi}from"express";var vt=Vi();vt.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as en}from"express";import{extendZodWithOpenApi as Ki}from"@asteasolutions/zod-to-openapi";import Ct from"zod";Ki(Ct);var Gi=Ct.object({id:Ct.string()}),Cr=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=Gi.parse(e.params),s=e.user.id,i=await this.newsRepository.findById(t);if(!i)throw new w("Not\xEDcia n\xE3o encontrada.");if(i.author.id!==s)throw new q("Sem permiss\xE3o.");await Promise.all([this.newsRepository.delete(t),this.firebaseStorageService.deleteFile({fileUrl:i.imageUrl})]),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as Ji}from"@asteasolutions/zod-to-openapi";import ye from"zod";var $i=5,ko=1024,Yi=ko*ko,Xi=$i*Yi;Ji(ye);var Qi=ye.object({id:ye.string(),title:ye.string().min(1),content:ye.string().min(1),image:ye.any().optional().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=Xi,"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB.")}),Er=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t,title:s,content:i,image:a}=Qi.parse({id:e.params.id,image:e.file,...e.body}),p=await this.newsRepository.findById(t);if(!p)throw new w("Not\xEDcia n\xE3o encontrada.");let u=e.user.id;if(p.author.id!==u)throw new q("Sem permiss\xE3o.");let h=p.imageUrl||"";a&&p.imageUrl&&(h=await this.firebaseStorageService.updateFile({file:a,folder:T.NEWS,id:t,fileUrl:p.imageUrl}));let v=await this.newsRepository.update({id:t,title:s,content:i,imageUrl:h});r.status(200).json(v)}catch(t){if(t instanceof Error)throw new m(t.message)}}};function _o(){return{createNewsController:new Me(L(),P())}}function Mo(){return{findAllNewsController:new Le(L())}}function Wo(){return{findNewsByIdController:new He(L())}}function zo(){return{findNewsByAuthorIdController:new We(L())}}function Ho(){return{updateNewsController:new Er(L(),P())}}function Lo(){return{deleteNewsController:new Cr(L(),P())}}var re=en(),{authMiddleware:Et}=j();re.post("/",(o,e,r)=>{Et.authenticated(o,e,r)},k.single("image"),async(o,e)=>{let{createNewsController:r}=_o();await r.handle(o,e)});re.get("/",async(o,e)=>{let{findAllNewsController:r}=Mo();await r.handle(o,e)});re.get("/:id",async(o,e)=>{let{findNewsByIdController:r}=Wo();await r.handle(o,e)});re.get("/author/:authorId",async(o,e)=>{let{findNewsByAuthorIdController:r}=zo();await r.handle(o,e)});re.put("/:id",(o,e,r)=>{Et.authenticated(o,e,r)},k.single("image"),async(o,e)=>{let{updateNewsController:r}=Ho();await r.handle(o,e)});re.delete("/:id",(o,e,r)=>{Et.authenticated(o,e,r)},async(o,e)=>{let{deleteNewsController:r}=Lo();await r.handle(o,e)});import{Router as rn}from"express";function Zo(){return{createPendencyController:new Ze(A(),ee(),P())}}function Vo(){return{findPendenciesController:new Ge(ee())}}function Ko(){return{findPendencyByIdController:new Je(ee())}}function Go(){return{updatePendencyController:new $e(ee(),P())}}function Jo(){return{deletePendencyController:new Ke(ee(),P())}}var ce=rn(),{authMiddleware:Ce}=j();ce.post("/:user_id",(o,e,r)=>{Ce.isAdmin(o,e,r)},k.single("document"),async(o,e)=>{let{createPendencyController:r}=Zo();await r.handle(o,e)});ce.get("/",(o,e,r)=>{Ce.isAdmin(o,e,r)},async(o,e)=>{let{findPendenciesController:r}=Vo();await r.handle(o,e)});ce.get("/:pendency_id",(o,e,r)=>{Ce.isAdmin(o,e,r)},async(o,e)=>{let{findPendencyByIdController:r}=Ko();await r.handle(o,e)});ce.put("/:pendency_id",(o,e,r)=>{Ce.isAdmin(o,e,r)},k.single("document"),async(o,e)=>{let{updatePendencyController:r}=Go();await r.handle(o,e)});ce.delete("/:pendency_id",(o,e,r)=>{Ce.isAdmin(o,e,r)},async(o,e)=>{let{deletePendencyController:r}=Jo();await r.handle(o,e)});import{Router as an}from"express";import{extendZodWithOpenApi as tn}from"@asteasolutions/zod-to-openapi";import F from"zod";var on=1,sn=9;tn(F);var nn=F.object({page:F.coerce.number().min(1).default(on),limit:F.coerce.number().min(1).default(sn),userId:F.string().optional(),registrationNumber:F.string().optional(),name:F.string().optional(),emailAddress:F.string().optional(),mainEtps:F.string().optional(),formations:F.string().optional(),occupations:F.string().optional(),institutions:F.string().optional(),biography:F.string().optional(),orderBy:F.enum(["asc","desc"]).optional()}),Sr=class{constructor(e){this.researcherRepository=e}async handle(e,r){try{let{page:t,limit:s,...i}=nn.parse(e.query),a=s*t-s,[p,u]=await Promise.all([this.researcherRepository.find({pagination:{offset:a,limit:s},filter:{userName:i.name,...i}}),this.researcherRepository.count({filter:{userName:i.name,...i}})]),h=Math.max(Math.ceil(u/s),1);r.status(200).json({page:t,totalPages:h,offset:a,limit:s,researchers:p})}catch(t){if(t instanceof Error)throw new m(t.message)}}};var jr=class{constructor(e){this.prisma=e}async create(e){return await this.prisma.researcher.create({data:e})}async update(e){return await this.prisma.researcher.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.researcher.delete({where:{id:e}})}async find({pagination:{offset:e,limit:r},filter:{biography:t,degrees:s,formations:i,institutions:a,mainEtps:p,occupations:u,orderBy:h,registrationNumber:v,seniority:b,userId:C,userName:_}}){let M={OR:_?[{user:{name:{contains:_,mode:"insensitive"}}}]:void 0};return v&&M.OR?.push({registrationNumber:{contains:v,mode:"insensitive"}}),p&&(M.mainEtps={contains:p,mode:"insensitive"}),i&&(M.formations={contains:i,mode:"insensitive"}),s&&s.length>0&&(M.degrees={hasSome:s}),u&&(M.occupations={contains:u,mode:"insensitive"}),b&&(M.seniority=b),a&&(M.institutions={contains:a,mode:"insensitive"}),t&&(M.biography={contains:t,mode:"insensitive"}),C&&(M.userId={equals:C}),await this.prisma.researcher.findMany({where:M,omit:{userId:!0},include:{user:{omit:{passwordHash:!0}}},orderBy:h?{updatedAt:h}:{updatedAt:"desc"},skip:e,take:r})}async findById(e){return await this.prisma.researcher.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId(e){return await this.prisma.researcher.findFirst({where:{userId:e},include:{user:{omit:{passwordHash:!0}}}})}async findByRegistrationNumber(e){return await this.prisma.researcher.findFirst({where:{registrationNumber:e},include:{user:{omit:{passwordHash:!0}}}})}async count({filter:{biography:e,degrees:r,formations:t,institutions:s,mainEtps:i,occupations:a,registrationNumber:p,seniority:u,userId:h,userName:v}}){let b={OR:v?[{user:{name:{contains:v,mode:"insensitive"}}}]:void 0};return p&&b.OR?.push({registrationNumber:{contains:p,mode:"insensitive"}}),i&&(b.mainEtps={contains:i,mode:"insensitive"}),t&&(b.formations={contains:t,mode:"insensitive"}),r&&r.length>0&&(b.degrees={hasSome:r}),a&&(b.occupations={contains:a,mode:"insensitive"}),u&&(b.seniority=u),s&&(b.institutions={contains:s,mode:"insensitive"}),e&&(b.biography={contains:e,mode:"insensitive"}),h&&(b.userId={equals:h}),await this.prisma.researcher.count({where:b})}};function me(){return new jr(E)}function $o(){return{createResearcherController:new Xe(me())}}function Yo(){return{findResearchersController:new Sr(me())}}function Xo(){return{findResearcherByIdController:new er(me())}}function Qo(){return{findResearcherByUserIdController:new tr(me())}}function es(){return{updateResearcherController:new or(me())}}function rs(){return{deleteResearcherController:new Qe(me())}}var te=an(),{authMiddleware:St}=j();te.post("/",(o,e,r)=>{St.authenticated(o,e,r)},async(o,e)=>{let{createResearcherController:r}=$o();await r.handle(o,e)});te.get("/",async(o,e)=>{let{findResearchersController:r}=Yo();await r.handle(o,e)});te.get("/:id",async(o,e)=>{let{findResearcherByIdController:r}=Xo();await r.handle(o,e)});te.get("/user/:userId",async(o,e)=>{let{findResearcherByUserIdController:r}=Qo();await r.handle(o,e)});te.put("/:id",(o,e,r)=>{St.authenticated(o,e,r)},async(o,e)=>{let{updateResearcherController:r}=es();await r.handle(o,e)});te.delete("/:id",(o,e,r)=>{St.authenticated(o,e,r)},async(o,e)=>{let{deleteResearcherController:r}=rs();await r.handle(o,e)});import{Router as hn}from"express";import{extendZodWithOpenApi as cn}from"@asteasolutions/zod-to-openapi";import pe from"zod";cn(pe);var mn=pe.object({teamId:pe.uuid(),member:pe.object({userId:pe.uuid(),role:pe.string(),description:pe.string()})}),xr=class{constructor(e,r){this.teamMemberRepository=e;this.userRepository=r}async handle(e,r){try{let{teamId:t,member:{userId:s,...i}}=mn.parse({...e.body,teamId:e.params.teamId});if(!await this.userRepository.findById(s))throw new w("O usu\xE1rio n\xE3o existe.");let p=await this.teamMemberRepository.create({...i,userId:s,teamId:t});r.status(201).json(p)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as pn}from"@asteasolutions/zod-to-openapi";import{z as jt}from"zod";pn(jt);var dn=jt.object({id:jt.uuid()}),Tr=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{id:t}=dn.parse(e.params);await this.teamMemberRepository.delete(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as un}from"@asteasolutions/zod-to-openapi";import{z as xt}from"zod";un(xt);var ln=xt.object({id:xt.uuid()}),Ar=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{id:t}=ln.parse(e.params),s=await this.teamMemberRepository.findById(t);if(!s)throw new w("Membro n\xE3o encontrado.");r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};import{extendZodWithOpenApi as fn}from"@asteasolutions/zod-to-openapi";import{z as he}from"zod";fn(he);var yn=he.object({id:he.uuid(),role:he.string(),userId:he.string(),description:he.string()}),Ur=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let t=yn.parse(e.body),s=await this.teamMemberRepository.update(t);r.status(200).json(s)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var V=class{constructor(e){this.prisma=e}async findById(e){return await this.prisma.teamMember.findFirst({where:{id:e}})}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{teamId:e}})}async create({description:e,role:r,teamId:t,userId:s}){return await this.prisma.teamMember.create({data:{role:r,description:e,teamId:t,userId:s}})}async update({id:e,...r}){return await this.prisma.teamMember.update({where:{id:e},data:r})}async updateMany({members:e,teamId:r}){await Promise.all(e.map(async({user:t,role:s})=>{let i=await this.prisma.teamMember.findFirst({where:{teamId:r,userId:t.id},include:{user:!0}});i?await this.prisma.teamMember.update({where:{id:i.id},data:{role:s}}):await this.prisma.teamMember.create({data:{teamId:r,userId:t.id,role:s}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async r=>{await this.prisma.teamMember.delete({where:{id:r}})}))}};function ts(){return{createTeamMemberController:new xr(new V(E),A())}}function os(){return{findTeamMemberController:new Ar(new V(E))}}function ss(){return{updateTeamMemberController:new Ur(new V(E))}}function is(){return{deleteTeamMemberController:new Tr(new V(E))}}var ge=hn(),{authMiddleware:Pr}=j();ge.post("/:teamId/member",(o,e,r)=>{Pr.isAdmin(o,e,r)},async(o,e)=>{let{createTeamMemberController:r}=ts();await r.handle(o,e)});ge.get("/member/:id",(o,e,r)=>{Pr.isAdmin(o,e,r)},async(o,e)=>{let{findTeamMemberController:r}=os();await r.handle(o,e)});ge.put("/member/:id",(o,e,r)=>{Pr.isAdmin(o,e,r)},async(o,e)=>{let{updateTeamMemberController:r}=ss();await r.handle(o,e)});ge.delete("/member/:id",(o,e,r)=>{Pr.isAdmin(o,e,r)},async(o,e)=>{let{deleteTeamMemberController:r}=is();await r.handle(o,e)});import{Router as In}from"express";import{extendZodWithOpenApi as gn}from"@asteasolutions/zod-to-openapi";import{z as Tt}from"zod";gn(Tt);var Rn=Tt.object({id:Tt.uuid()}),Fr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=Rn.parse(e.params);await this.teamRepository.delete(t),r.sendStatus(200)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var Nr=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let t=await this.teamRepository.findAll();return r.status(200).json(t)}catch(t){if(t instanceof Error)throw new m(t.message)}}};var qr=class{constructor(e){this.prisma=e}async create({members:e,name:r,type:t}){return await this.prisma.team.create({data:{name:r,type:t,members:{create:e.map(({role:s,user:i})=>({role:s,user:{connect:{id:i.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:r}}){let t={type:e};return r&&(t.name={contains:r,mode:"insensitive"}),await this.prisma.team.findMany({where:t,include:{members:{include:{user:!0}}}})}async update({id:e,name:r}){return await this.prisma.team.update({where:{id:e},data:{name:r}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function de(){return new qr(E)}function ns(){return new V(E)}function as(){return{findTeamsController:new Nr(de())}}function cs(){return{findTeamByIdController:new ir(de())}}function ms(){return{findTeamByTypeController:new ar(de())}}function ps(){return{createTeamController:new sr(de())}}function ds(){return{updateTeamController:new cr(de(),ns())}}function us(){return{deleteTeamController:new Fr(de())}}var oe=In(),{authMiddleware:At}=j();oe.get("/",async(o,e)=>{let{findTeamsController:r}=as();await r.handle(o,e)});oe.get("/id/:id",async(o,e)=>{let{findTeamByIdController:r}=cs();await r.handle(o,e)});oe.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:r}=ms();await r.handle(o,e)});oe.post("/",(o,e,r)=>{At.isAdmin(o,e,r)},async(o,e)=>{let{createTeamController:r}=ps();await r.handle(o,e)});oe.put("/:id",(o,e,r)=>{At.isAdmin(o,e,r)},async(o,e)=>{let{updateTeamController:r}=ds();await r.handle(o,e)});oe.delete("/:id",(o,e,r)=>{At.isAdmin(o,e,r)},async(o,e)=>{let{deleteTeamController:r}=us();await r.handle(o,e)});import{Router as wn}from"express";var Br=class{constructor(e){this.userRepository=e}async handle(e,r){try{let t=await this.userRepository.find();r.status(200).json(t)}catch(t){if(t instanceof Error)throw new m(t.message)}}};function ls(){return{updateUserController:new ur(A(),P())}}function fs(){return{deleteUserController:new mr(A())}}function ys(){return{findUsersController:new Br(A())}}function hs(){return{findUserController:new pr(A())}}var Re=wn(),{authMiddleware:gs}=j();Re.get("/:id",async(o,e)=>{let{findUserController:r}=hs();await r.handle(o,e)});Re.put("/",(o,e,r)=>{gs.authenticated(o,e,r)},k.single("avatarImage"),async(o,e)=>{let{updateUserController:r}=ls();await r.handle(o,e)});Re.delete("/:id",(o,e,r)=>{gs.authenticated(o,e,r)},async(o,e)=>{let{deleteUserController:r}=fs();await r.handle(o,e)});Re.get("/",async(o,e)=>{let{findUsersController:r}=ys();await r.handle(o,e)});var x=Ut(),Cn={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};x.use(vn(Cn));x.use(Ut.json());x.use(Ut.urlencoded({extended:!1}));x.use("/docs",bn({content:vo,theme:"kepler"}));x.use("/",vt);x.use("/auth",Z);x.use("/user",Re);x.use("/news",re);x.use("/team",oe);x.use("/team",ge);x.use("/certification",ae);x.use("/pendency",ce);x.use("/researcher",te);x.use((o,e,r,t)=>{let{errorHandler:s}=Pt();s.handle(o,e,r,t)});var Sn=En.createServer(x),Rs=4e3;Sn.listen(Rs,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${Rs}.`)});
