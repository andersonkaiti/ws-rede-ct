import rt from"node:http";import et from"cors";import oe from"express";import{Router as Ae}from"express";var E=class{handle(e,r){let t=e.auth;if(!t?.userId){r.status(401).json({message:"N\xE3o autenticado"});return}r.status(200).json({message:"Usu\xE1rio autenticado com Clerk",userId:t.userId})}};function se(){return{clerkAuthController:new E}}import{ClerkExpressWithAuth as Ue}from"@clerk/clerk-sdk-node";var xe=Ue(),ae=(o,e,r)=>xe(o,e,r);var Y=Ae();Y.get("/",ae,async(o,e)=>{let{clerkAuthController:r}=se();await r.handle(o,e)});import{Router as De}from"express";var Z=De();Z.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as Le}from"express";var v={NEWS:"news"};var k=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{title:t,content:s,author_id:a}=e.body,i=await this.firebaseStorageService.uploadFile(e,v.NEWS),n=await this.newsRepository.create({title:t,content:s,author_id:a,image_url:i});r.status(201).json(n)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var C=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=e.params;await Promise.all([this.newsRepository.delete(t),this.firebaseStorageService.deleteFile(e)]),r.status(200).json({message:"Not\xEDcia deletada com sucesso."})}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};import f from"zod";var Me=1,Ne=9,qe=f.object({page:f.coerce.number().min(1).default(Me),limit:f.coerce.number().min(1).default(Ne),title:f.string().optional(),content:f.string().optional(),author_id:f.string().optional(),order_by:f.union([f.enum(["asc","desc"]),f.literal("")]).optional().transform(o=>o===""?void 0:o)}),_=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:s,author_id:a,content:i,order_by:n="desc",title:m}=qe.parse({page:e.query.page,limit:e.query.limit,title:e.query.title,content:e.query.content,author_id:e.query.author_id,order_by:e.query.order_by}),u=s*t-s,[l,J]=await Promise.all([this.newsRepository.findAll({pagination:{offset:u,limit:s},filter:{author_id:a,content:i,title:m,order_by:n}}),this.newsRepository.count({filter:{title:m,content:i,author_id:a}})]),V=Math.ceil(J/s);r.status(200).json({page:t,totalPages:V,offset:u,limit:s,news:l})}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};import R from"zod";var Be=1,Pe=7,Fe=R.object({page:R.coerce.number().min(1).default(Be),limit:R.coerce.number().min(1).default(Pe),author_id:R.string(),title:R.string().optional(),content:R.string().optional(),order_by:R.union([R.enum(["asc","desc"]),R.literal("")]).optional().transform(o=>o===""?void 0:o)}),S=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{page:t,limit:s,author_id:a,content:i,order_by:n,title:m}=Fe.parse({page:e.query.page,limit:e.query.limit,author_id:e.params.author_id,title:e.query.title,content:e.query.content,order_by:e.query.order_by}),u=t*s-s,[l,J]=await Promise.all([this.newsRepository.findByAuthorId({author_id:a,pagination:{offset:u,limit:s},filter:{order_by:n,title:m,content:i}}),this.newsRepository.count({filter:{author_id:a,content:i,title:m}})]),V=Math.ceil(J/s);r.status(200).json({page:t,totalPages:V,offset:u,limit:s,news:l})}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var U=class{constructor(e){this.newsRepository=e}async handle(e,r){try{let{id:t}=e.params,s=await this.newsRepository.findById(t);r.status(200).json(s)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var x=class{constructor(e,r){this.newsRepository=e;this.firebaseStorageService=r}async handle(e,r){try{let{id:t}=e.params,{title:s,content:a,image_url:i}=e.body,n;i&&(n=await this.firebaseStorageService.updateFile(e,v.NEWS));let m=await this.newsRepository.update({id:t,title:s,content:a,image_url:n});r.status(200).json(m)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};import{PrismaClient as Oe}from"@prisma/client";var c=new Oe({log:["query"]});var A=class{constructor(e){this.prisma=e}async create({title:e,content:r,author_id:t,image_url:s}){return await this.prisma.news.create({data:{title:e,content:r,author_id:t,image_url:s},include:{author:!0}})}async findAll({pagination:{offset:e,limit:r},filter:{author_id:t,content:s,title:a,order_by:i="desc"}}){let n={};t&&(n.author_id={contains:t,mode:"insensitive"});let m=[];return a&&m.push({title:{contains:a,mode:"insensitive"}}),s&&m.push({content:{contains:s,mode:"insensitive"}}),m.length>0&&(n.OR=m),await this.prisma.news.findMany({include:{author:!0},where:n,orderBy:{updated_at:i},skip:e,take:r})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},include:{author:!0}})}async findByAuthorId({author_id:e,pagination:{offset:r,limit:t},filter:{order_by:s="desc",content:a,title:i}}){let n={author_id:e},m=[];return i&&m.push({title:{contains:i,mode:"insensitive"}}),a&&m.push({content:{contains:a,mode:"insensitive"}}),m.length>0&&(n.OR=m),await this.prisma.news.findMany({where:n,orderBy:{updated_at:s},skip:r,take:t})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,...e.image_url&&{image_url:e.image_url}}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{author_id:e,content:r,title:t}}){let s={};e&&(s.author_id={contains:e,mode:"insensitive"});let a=[];return t&&a.push({title:{contains:t,mode:"insensitive"}}),r&&a.push({content:{contains:r,mode:"insensitive"}}),a.length>0&&(s.OR=a),await this.prisma.news.count({where:s})}};function g(){return new A(c)}import{getStorage as We}from"firebase-admin/storage";import{config as je}from"dotenv";import ie from"firebase-admin";je();var ee=ie.initializeApp({credential:ie.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY,projectId:process.env.FIREBASE_PROJECT_ID,type:process.env.FIREBASE_TYPE,privateKeyId:process.env.FIREBASE_PRIVATE_KEY_ID,clientId:process.env.FIREBASE_CLIENT_ID,authUri:process.env.FIREBASE_AUTH_URI,tokenUri:process.env.FIREBASE_TOKEN_URI,authProviderX509CertUrl:process.env.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:process.env.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:process.env.FIREBASE_BUCKET});ee.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var Ke=We(ee),ne=Ke.bucket(process.env.FIREBASE_BUCKET);import{randomUUID as Qe}from"node:crypto";var He=/\/images\/.+$/,D=class{constructor(e){this.bucket=e}async uploadFile(e,r){if(!e.file)throw new Error("Arquivo n\xE3o encontrado.");let t=e.file,s=e.body.author_id,a=`${Qe()}-${t?.originalname}`,i=this.bucket.file(`images/${r}/${s}/${a}`);return await new Promise((n,m)=>{let u=i.createWriteStream({metadata:{contentType:t?.mimetype}});u.on("error",l=>{console.log(l),m(l)}),u.on("finish",async()=>{try{await i.makePublic();let l=`https://storage.googleapis.com/${this.bucket.name}/${i.name}`;n(l)}catch(l){console.error(l),m(l)}}),u.end(t?.buffer)})}async updateFile(e,r){if(!e.file)throw new Error("Arquivo n\xE3o encontrado.");if(e.file.size!==0)try{let t=this.getPath(e.body.image_url);if(!t)throw new Error("Arquivo n\xE3o encontrado.");let[s,a]=await Promise.all([this.bucket.file(t).delete(),this.uploadFile(e,r)]);return a}catch(t){throw console.error(t),new Error("Erro ao atualizar o arquivo.")}}async deleteFile(e){if(!e.body.image_url)throw new Error("Arquivo n\xE3o encontrado.");let r=this.getPath(e.body.image_url);if(!r)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(r).delete()}catch(t){throw console.error(t),new Error("Erro ao deletar o arquivo.")}}getPath(e){let r=e.match(He);return r?r[0].slice(1):null}};function M(){return new D(ne)}function me(){return{createNewsController:new k(g(),M())}}function pe(){return{findAllNewsController:new _(g())}}function le(){return{findNewsByIdController:new U(g())}}function ce(){return{findNewsByAuthorIdController:new S(g())}}function ue(){return{updateNewsController:new x(g(),M())}}function de(){return{deleteNewsController:new C(g(),M())}}import ye from"multer";var te=ye({storage:ye.memoryStorage()});var h=Le();h.post("/",te.single("image"),async(o,e)=>{let{createNewsController:r}=me();await r.handle(o,e)});h.get("/",async(o,e)=>{let{findAllNewsController:r}=pe();await r.handle(o,e)});h.get("/:id",async(o,e)=>{let{findNewsByIdController:r}=le();await r.handle(o,e)});h.get("/author/:author_id",async(o,e)=>{let{findNewsByAuthorIdController:r}=ce();await r.handle(o,e)});h.put("/:id",te.single("image"),async(o,e)=>{let{updateNewsController:r}=ue();await r.handle(o,e)});h.delete("/:id",async(o,e)=>{let{deleteNewsController:r}=de();await r.handle(o,e)});import{Router as ze}from"express";var N=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{team_id:t}=e.params,{member:s}=e.body,a=await this.teamMemberRepository.create({team_id:t,...s});r.status(201).json(a)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var q=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{id:t}=e.params;await this.teamMemberRepository.delete(t),r.status(200).json({message:"Membro removido com sucesso"})}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var B=class{constructor(e){this.teamMemberRepository=e}async handle(e,r){try{let{member:t}=e.body,s=await this.teamMemberRepository.update({member:t});r.status(200).json(s)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var T=class{constructor(e){this.prisma=e}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{team_id:e}})}async create(e){return await this.prisma.teamMember.create({data:e})}async update({member:{id:e,...r}}){return await this.prisma.teamMember.update({where:{id:e},data:r})}async updateMany({id:e,members:r}){await Promise.all(r.map(async t=>{let s=await this.prisma.teamMember.findFirst({where:{team_id:e,user_id:t.user.id},include:{user:!0}});s?await this.prisma.teamMember.update({where:{id:s.id},data:{role:t.role}}):await this.prisma.teamMember.create({data:{team_id:e,user_id:t.user.id,role:t.role}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async r=>{await this.prisma.teamMember.delete({where:{id:r}})}))}};function fe(){return{createTeamMemberController:new N(new T(c))}}function Re(){return{updateTeamMemberController:new B(new T(c))}}function we(){return{deleteTeamMemberController:new q(new T(c))}}var P=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{name:t,type:s,members:a}=e.body,i=await this.teamRepository.create({name:t,type:s,members:a});r.status(201).json(i)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var F=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=e.params;await this.teamRepository.delete(t),r.status(200).json({message:"Equipe deletada com sucesso"})}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var O=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let t=await this.teamRepository.findAll();return r.status(200).json(t)}catch(t){if(console.error(t),t instanceof Error)return r.status(400).json({message:t.message})}}};var j=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{id:t}=e.params,s=await this.teamRepository.findById(t);r.status(200).json(s)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};import re from"zod";var $e=re.object({type:re.string(),name:re.string().optional()}),W=class{constructor(e){this.teamRepository=e}async handle(e,r){try{let{type:t,name:s}=$e.parse({type:e.params.type,name:e.query.name}),a=await this.teamRepository.findByType({type:t,filter:{name:s}});r.status(200).json(a)}catch(t){console.error(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var K=class{constructor(e,r){this.teamRepository=e;this.teamMemberRepository=r}async handle(e,r){try{let{id:t}=e.params,{name:s,members:a}=e.body,i=await this.teamMemberRepository.findByTeamId(t),n=a.map(l=>l.id),m=i.filter(l=>!n.includes(l.id)).map(l=>l.id);await this.teamMemberRepository.deleteMany(m),await this.teamMemberRepository.updateMany({id:t,members:a});let u=await this.teamRepository.update({id:t,name:s});r.status(200).json(u)}catch(t){t instanceof Error&&r.status(400).json({message:t.message})}}};var w=class{constructor(e){this.prisma=e}async create({members:e,name:r,type:t}){return await this.prisma.team.create({data:{name:r,type:t,team_members:{create:e.map(s=>({role:s.role,user:{connect:{id:s.user.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{team_members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{team_members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:r}}){let t={type:e};return r&&(t.name={contains:r,mode:"insensitive"}),await this.prisma.team.findMany({where:t,include:{team_members:{include:{user:!0}}}})}async update({id:e,name:r}){return await this.prisma.team.update({where:{id:e},data:{name:r}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function he(){return{findAllTeamsController:new O(new w(c))}}function Te(){return{findTeamByIdController:new j(new w(c))}}function ge(){return{findTeamByTypeController:new W(new w(c))}}function be(){return{createTeamController:new P(new w(c))}}function Ie(){return{updateTeamController:new K(new w(c),new T(c))}}function Ee(){return{deleteTeamController:new F(new w(c))}}var d=ze();d.get("/",async(o,e)=>{let{findAllTeamsController:r}=he();await r.handle(o,e)});d.get("/id/:id",async(o,e)=>{let{findTeamByIdController:r}=Te();await r.handle(o,e)});d.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:r}=ge();await r.handle(o,e)});d.post("/",async(o,e)=>{let{createTeamController:r}=be();await r.handle(o,e)});d.put("/member/:id",async(o,e)=>{let{updateTeamMemberController:r}=Re();await r.handle(o,e)});d.post("/:team_id/member",async(o,e)=>{let{createTeamMemberController:r}=fe();await r.handle(o,e)});d.put("/:id",async(o,e)=>{let{updateTeamController:r}=Ie();await r.handle(o,e)});d.delete("/member/:id",async(o,e)=>{let{deleteTeamMemberController:r}=we();await r.handle(o,e)});d.delete("/:id",async(o,e)=>{let{deleteTeamController:r}=Ee();await r.handle(o,e)});import{Router as Je}from"express";import{config as Xe}from"dotenv";var Q=class{constructor(e,r){this.clerkWebhookService=e;this.userRepository=r}async handle(e,r){try{let t=await this.clerkWebhookService.verifyEvent(e);if(!t)throw new Error("Erro ao verificar webhook.");let{type:s,data:{created_at:a,updated_at:i,email_addresses:n,...m}}=t;s==="user.created"&&(await this.userRepository.create({created_at:new Date(a),updated_at:new Date(i),email_addresses:n,...m}),r.status(201).json({message:"Usu\xE1rio criado com sucesso."}))}catch(t){t instanceof Error&&r.status(400).json({message:t.message})}}};var H=class{constructor(e,r){this.clerkWebhookService=e;this.userRepository=r}async handle(e,r){try{let t=await this.clerkWebhookService.verifyEvent(e);if(!t)throw new Error("Erro ao verificar webhook.");let{type:s,data:a}=t;s==="user.deleted"&&(await this.userRepository.delete(a),r.status(200).json({message:"Usu\xE1rio deletado com sucesso."}))}catch(t){t instanceof Error&&r.status(400).json({message:t.message})}}};var L=class{constructor(e){this.userRepository=e}async handle(e,r){try{let t=await this.userRepository.findAll();r.status(200).json(t)}catch(t){console.log(t),t instanceof Error&&r.status(400).json({message:"Erro ao buscar usu\xE1rios"})}}};var $=class{constructor(e,r){this.clerkWebhookService=e;this.userRepository=r}async handle(e,r){try{let t=await this.clerkWebhookService.verifyEvent(e);if(!t)throw new Error("Erro ao verificar webhook.");let{type:s,data:{email_addresses:a,...i}}=t;s==="user.updated"&&(await this.userRepository.update({...i,email_addresses:a}),r.status(200).json({message:"Usu\xE1rio atualizado com sucesso."}))}catch(t){console.log(t),t instanceof Error&&r.status(400).json({message:t.message})}}};var z=class{constructor(e){this.prisma=e}async create({email_addresses:e,first_name:r,last_name:t,...s}){await this.prisma.user.create({data:{first_name:r,last_name:t,id:s.id,created_at:s.created_at,updated_at:s.updated_at,image_url:s.image_url,profile_image_url:s.profile_image_url,email_addresses:{create:e.map(a=>({email_address:a.email_address,linked_to:JSON.stringify(a.linked_to),id:a.id}))}}})}async update(e){await this.prisma.user.update({where:{id:e.id},data:{first_name:e.first_name,last_name:e.last_name,image_url:e.image_url,profile_image_url:e.profile_image_url,email_addresses:{update:e.email_addresses.map(r=>({where:{id:r.id},data:{email_address:r.email_address,linked_to:JSON.stringify(r.linked_to)}}))}}})}async delete(e){await this.prisma.user.delete({where:{id:e.id}})}async findAll(){return await this.prisma.user.findMany({include:{email_addresses:!0}})}};function I(){return new z(c)}import{Webhook as Ge}from"svix";var G=class{constructor(e){this.webhook=e}async verifyEvent(e){let{"svix-id":r,"svix-timestamp":t,"svix-signature":s}=e.headers;if(!(r&&t&&s))throw new Error("Headers are missing");let a=JSON.stringify(e.body),i={"svix-id":r,"svix-timestamp":t,"svix-signature":s};try{return await this.webhook.verify(a,i)}catch(n){if(n instanceof Error)throw new Error(n.message)}}};function X(o){return new G(new Ge(o))}Xe();function ve(){return{createUserController:new Q(X(process.env.CLERK_USER_CREATED),I())}}function ke(){return{updateUserController:new $(X(process.env.CLERK_USER_UPDATED),I())}}function Ce(){return{deleteUserController:new H(X(process.env.CLERK_USER_DELETED),I())}}function _e(){return{findAllUsersController:new L(I())}}var{createUserController:Ve}=ve(),{updateUserController:Ye}=ke(),{deleteUserController:Ze}=Ce(),b=Je();b.post("/api/webhook/created-user",async(o,e)=>{await Ve.handle(o,e)});b.post("/api/webhook/updated-user",async(o,e)=>{await Ye.handle(o,e)});b.post("/api/webhook/deleted-user",async(o,e)=>{await Ze.handle(o,e)});b.get("/",async(o,e)=>{let{findAllUsersController:r}=_e();await r.handle(o,e)});var y=oe(),tt={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};y.use(et(tt));y.use(oe.json());y.use(oe.urlencoded({extended:!1}));y.use("/",Z);y.use("/auth",Y);y.use("/user",b);y.use("/news",h);y.use("/team",d);var ot=rt.createServer(y),Se=4e3;ot.listen(Se,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${Se}.`)});
