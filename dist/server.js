import kr from"node:http";import _r from"cors";import fe from"express";import{Router as Ke}from"express";var x=class{handle(e,t){let r=e.auth;if(!r?.userId){t.status(401).json({message:"N\xE3o autenticado"});return}t.status(200).json({message:"Usu\xE1rio autenticado com Clerk",userId:r.userId})}};function Re(){return{clerkAuthController:new x}}import{ClerkExpressWithAuth as Qe}from"@clerk/clerk-sdk-node";var We=Qe(),we=(o,e,t)=>We(o,e,t);var ie=Ke();ie.get("/",we,async(o,e)=>{let{clerkAuthController:t}=Re();await t.handle(o,e)});import{Router as He}from"express";var ne=He();ne.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as nr}from"express";import U from"zod";var D={NEWS:"news"};var ze=U.object({author_id:U.string(),title:U.string().min(1),content:U.string().min(1)}),B=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=ze.safeParse(e.body);if(!r.success)return t.status(400).json({errors:U.treeifyError(r.error)});let{title:s,content:a,author_id:i}=r.data,n=await this.firebaseStorageService.uploadFile(e,D.NEWS),m=await this.newsRepository.create({title:s,content:a,author_id:i,image_url:n});t.status(201).json(m)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import me from"zod";var Le=me.object({id:me.string()}),P=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Le.safeParse(e.params);if(!r.success)return t.status(400).json({errors:me.treeifyError(r.error)});let{id:s}=r.data;await Promise.all([this.newsRepository.delete(s),this.firebaseStorageService.deleteFile(e)]),t.status(200).json({message:"Not\xEDcia deletada com sucesso."})}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import R from"zod";var $e=1,Ge=9,Xe=R.object({page:R.coerce.number().min(1).default($e),limit:R.coerce.number().min(1).default(Ge),title:R.string().optional(),content:R.string().optional(),author_id:R.string().optional(),order_by:R.union([R.enum(["asc","desc"]),R.literal("")]).optional().transform(o=>o===""?void 0:o)}),M=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=Xe.safeParse({page:e.query.page,limit:e.query.limit,title:e.query.title,content:e.query.content,author_id:e.query.author_id,order_by:e.query.order_by});if(!r.success)return t.status(400).json({errors:R.treeifyError(r.error)});let{page:s,limit:a,author_id:i,content:n,order_by:m="desc",title:u}=r.data,l=a*s-a,[S,T]=await Promise.all([this.newsRepository.findAll({pagination:{offset:l,limit:a},filter:{author_id:i,content:n,title:u,order_by:m}}),this.newsRepository.count({filter:{title:u,content:n,author_id:i}})]),ae=Math.ceil(T/a);t.status(200).json({page:s,totalPages:ae,offset:l,limit:a,news:S})}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import w from"zod";var Je=1,Ve=7,Ye=w.object({page:w.coerce.number().min(1).default(Je),limit:w.coerce.number().min(1).default(Ve),author_id:w.string(),title:w.string().optional(),content:w.string().optional(),order_by:w.union([w.enum(["asc","desc"]),w.literal("")]).optional().transform(o=>o===""?void 0:o)}),N=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=Ye.safeParse({page:e.query.page,limit:e.query.limit,author_id:e.params.author_id,title:e.query.title,content:e.query.content,order_by:e.query.order_by});if(!r.success)return t.status(400).json({errors:w.treeifyError(r.error)});let{page:s,limit:a,author_id:i,content:n,order_by:m,title:u}=r.data,l=a*s-a,[S,T]=await Promise.all([this.newsRepository.findByAuthorId({author_id:i,pagination:{offset:l,limit:a},filter:{order_by:m,title:u,content:n}}),this.newsRepository.count({filter:{author_id:i,content:n,title:u}})]),ae=Math.ceil(T/a);t.status(200).json({page:s,totalPages:ae,offset:l,limit:a,news:S})}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import pe from"zod";var Ze=pe.object({id:pe.string()}),j=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=Ze.safeParse(e.params);if(!r.success)return t.status(400).json({errors:pe.treeifyError(r.error)});let{id:s}=r.data,a=await this.newsRepository.findById(s);t.status(200).json(a)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import v from"zod";var er=v.object({id:v.string(),title:v.string().min(1),content:v.string().min(1),image_url:v.string().optional()}),q=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=er.safeParse({id:e.params.id,title:e.body.title,content:e.body.content,image_url:e.body.image_url});if(!r.success)return t.status(400).json({errors:v.treeifyError(r.error)});let{id:s,title:a,content:i,image_url:n}=r.data,m;n&&(m=await this.firebaseStorageService.updateFile(e,D.NEWS));let u=await this.newsRepository.update({id:s,title:a,content:i,image_url:m});t.status(200).json(u)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{PrismaClient as rr}from"@prisma/client";var c=new rr({log:["query"]});var F=class{constructor(e){this.prisma=e}async create({title:e,content:t,author_id:r,image_url:s}){return await this.prisma.news.create({data:{title:e,content:t,author_id:r,image_url:s},include:{author:!0}})}async findAll({pagination:{offset:e,limit:t},filter:{author_id:r,content:s,title:a,order_by:i="desc"}}){let n={};r&&(n.author_id={contains:r,mode:"insensitive"});let m=[];return a&&m.push({title:{contains:a,mode:"insensitive"}}),s&&m.push({content:{contains:s,mode:"insensitive"}}),m.length>0&&(n.OR=m),await this.prisma.news.findMany({include:{author:!0},where:n,orderBy:{updated_at:i},skip:e,take:t})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},include:{author:!0}})}async findByAuthorId({author_id:e,pagination:{offset:t,limit:r},filter:{order_by:s="desc",content:a,title:i}}){let n={author_id:e},m=[];return i&&m.push({title:{contains:i,mode:"insensitive"}}),a&&m.push({content:{contains:a,mode:"insensitive"}}),m.length>0&&(n.OR=m),await this.prisma.news.findMany({where:n,orderBy:{updated_at:s},skip:t,take:r})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,...e.image_url&&{image_url:e.image_url}}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{author_id:e,content:t,title:r}}){let s={};e&&(s.author_id={contains:e,mode:"insensitive"});let a=[];return r&&a.push({title:{contains:r,mode:"insensitive"}}),t&&a.push({content:{contains:t,mode:"insensitive"}}),a.length>0&&(s.OR=a),await this.prisma.news.count({where:s})}};function I(){return new F(c)}import{getStorage as or}from"firebase-admin/storage";import{config as tr}from"dotenv";import he from"firebase-admin";tr();var ce=he.initializeApp({credential:he.credential.cert({clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY,projectId:process.env.FIREBASE_PROJECT_ID,type:process.env.FIREBASE_TYPE,privateKeyId:process.env.FIREBASE_PRIVATE_KEY_ID,clientId:process.env.FIREBASE_CLIENT_ID,authUri:process.env.FIREBASE_AUTH_URI,tokenUri:process.env.FIREBASE_TOKEN_URI,authProviderX509CertUrl:process.env.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:process.env.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:process.env.FIREBASE_BUCKET});ce.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var sr=or(ce),Te=sr.bucket(process.env.FIREBASE_BUCKET);import{randomUUID as ar}from"node:crypto";var ir=/\/images\/.+$/,O=class{constructor(e){this.bucket=e}async uploadFile(e,t){if(!e.file)throw new Error("Arquivo n\xE3o encontrado.");let r=e.file,s=e.body.author_id,a=`${ar()}-${r?.originalname}`,i=this.bucket.file(`images/${t}/${s}/${a}`);return await new Promise((n,m)=>{let u=i.createWriteStream({metadata:{contentType:r?.mimetype}});u.on("error",l=>{console.log(l),m(l)}),u.on("finish",async()=>{try{await i.makePublic();let l=`https://storage.googleapis.com/${this.bucket.name}/${i.name}`;n(l)}catch(l){console.error(l),m(l)}}),u.end(r?.buffer)})}async updateFile(e,t){if(!e.file)throw new Error("Arquivo n\xE3o encontrado.");if(e.file.size!==0)try{let r=this.getPath(e.body.image_url);if(!r)throw new Error("Arquivo n\xE3o encontrado.");let[s,a]=await Promise.all([this.bucket.file(r).delete(),this.uploadFile(e,t)]);return a}catch(r){throw console.error(r),new Error("Erro ao atualizar o arquivo.")}}async deleteFile(e){if(!e.body.image_url)throw new Error("Arquivo n\xE3o encontrado.");let t=this.getPath(e.body.image_url);if(!t)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(t).delete()}catch(r){throw console.error(r),new Error("Erro ao deletar o arquivo.")}}getPath(e){let t=e.match(ir);return t?t[0].slice(1):null}};function Q(){return new O(Te)}function ge(){return{createNewsController:new B(I(),Q())}}function Ee(){return{findAllNewsController:new M(I())}}function be(){return{findNewsByIdController:new j(I())}}function Ie(){return{findNewsByAuthorIdController:new N(I())}}function _e(){return{updateNewsController:new q(I(),Q())}}function ve(){return{deleteNewsController:new P(I(),Q())}}import ke from"multer";var le=ke({storage:ke.memoryStorage()});var E=nr();E.post("/",le.single("image"),async(o,e)=>{let{createNewsController:t}=ge();await t.handle(o,e)});E.get("/",async(o,e)=>{let{findAllNewsController:t}=Ee();await t.handle(o,e)});E.get("/:id",async(o,e)=>{let{findNewsByIdController:t}=be();await t.handle(o,e)});E.get("/author/:author_id",async(o,e)=>{let{findNewsByAuthorIdController:t}=Ie();await t.handle(o,e)});E.put("/:id",le.single("image"),async(o,e)=>{let{updateNewsController:t}=_e();await t.handle(o,e)});E.delete("/:id",async(o,e)=>{let{deleteNewsController:t}=ve();await t.handle(o,e)});import{Router as wr}from"express";import y from"zod";var mr=y.object({type:y.string().min(1),name:y.string().min(1),members:y.array(y.object({role:y.string(),user:y.object({id:y.string(),first_name:y.string(),last_name:y.string().optional()})}))}),W=class{constructor(e){this.teamRepository=e}async handle(e,t){try{console.log(e.body.members);let r=mr.safeParse(e.body);if(console.log(r.data),!r.success)return t.status(400).json({errors:y.treeifyError(r.error)});let{name:s,type:a,members:i}=r.data,n=await this.teamRepository.create({name:s,type:a,members:i});t.status(201).json(n)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{z as ue}from"zod";var pr=ue.object({id:ue.uuid()}),K=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=pr.safeParse(e.params);if(!r.success)return t.status(400).json({errors:ue.treeifyError(r.error)});let{id:s}=r.data;await this.teamRepository.delete(s),t.status(200).json({message:"Equipe deletada com sucesso"})}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};var H=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=await this.teamRepository.findAll();return t.status(200).json(r)}catch(r){if(console.error(r),r instanceof Error)return t.status(400).json({message:r.message})}}};import{z as de}from"zod";var cr=de.object({id:de.uuid()}),z=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=cr.safeParse(e.params);if(!r.success)return t.status(400).json({errors:de.treeifyError(r.error)});let{id:s}=r.data,a=await this.teamRepository.findById(s);t.status(200).json(a)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{z as L}from"zod";var lr=L.object({type:L.string(),name:L.string().optional()}),$=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=lr.safeParse({type:e.params.type,name:e.query.name});if(!r.success)return t.status(400).json({errors:L.treeifyError?.(r.error)});let{type:s,name:a}=r.data,i=await this.teamRepository.findByType({type:s,filter:{name:a}});t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{z as d}from"zod";var ur=d.object({id:d.uuid()}),dr=d.object({name:d.string().min(1),members:d.array(d.object({role:d.string(),user:d.object({id:d.string(),first_name:d.string(),last_name:d.string().optional()})}))}),G=class{constructor(e,t){this.teamRepository=e;this.teamMemberRepository=t}async handle(e,t){try{let r=ur.safeParse(e.params);if(!r.success)return t.status(400).json({errors:d.treeifyError?.(r.error)});let s=dr.safeParse(e.body);if(!s.success)return t.status(400).json({errors:d.treeifyError(s.error)});let{id:a}=r.data,{name:i,members:n}=s.data,m=await this.teamMemberRepository.findByTeamId(a),u=n.map(T=>T.id),l=m.filter(T=>!u.includes(T.id)).map(T=>T.id);await this.teamMemberRepository.deleteMany(l),await this.teamMemberRepository.updateMany({id:a,members:n});let S=await this.teamRepository.update({id:a,name:i});t.status(200).json(S)}catch(r){r instanceof Error&&t.status(400).json({message:r.message})}}};var g=class{constructor(e){this.prisma=e}async create({members:e,name:t,type:r}){return await this.prisma.team.create({data:{name:t,type:r,team_members:{create:e.map(s=>({role:s.role,user:{connect:{id:s.user.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{team_members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{team_members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:t}}){let r={type:e};return t&&(r.name={contains:t,mode:"insensitive"}),await this.prisma.team.findMany({where:r,include:{team_members:{include:{user:!0}}}})}async update({id:e,name:t}){return await this.prisma.team.update({where:{id:e},data:{name:t}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};var b=class{constructor(e){this.prisma=e}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{team_id:e}})}async create(e){return await this.prisma.teamMember.create({data:e})}async update({member:{id:e,...t}}){return await this.prisma.teamMember.update({where:{id:e},data:t})}async updateMany({id:e,members:t}){await Promise.all(t.map(async r=>{let s=await this.prisma.teamMember.findFirst({where:{team_id:e,user_id:r.user.id},include:{user:!0}});s?await this.prisma.teamMember.update({where:{id:s.id},data:{role:r.role}}):await this.prisma.teamMember.create({data:{team_id:e,user_id:r.user.id,role:r.role}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async t=>{await this.prisma.teamMember.delete({where:{id:t}})}))}};function Ce(){return{findAllTeamsController:new H(new g(c))}}function Se(){return{findTeamByIdController:new z(new g(c))}}function Ue(){return{findTeamByTypeController:new $(new g(c))}}function Ae(){return{createTeamController:new W(new g(c))}}function xe(){return{updateTeamController:new G(new g(c),new b(c))}}function De(){return{deleteTeamController:new K(new g(c))}}import k from"zod";var yr=k.object({member:k.object({user_id:k.string(),role:k.string(),description:k.string()})}),X=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let{team_id:r}=e.params,s=yr.safeParse(e.body);if(!s.success)return t.status(400).json({errors:k.treeifyError(s.error)});let{member:a}=s.data,i=await this.teamMemberRepository.create({...a,team_id:r});t.status(201).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{z as ye}from"zod";var fr=ye.object({id:ye.uuid()}),J=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=fr.safeParse(e.params);if(!r.success)return t.status(400).json({errors:ye.treeifyError(r.error)});let{id:s}=r.data;await this.teamMemberRepository.delete(s),t.status(200).json({message:"Membro removido com sucesso"})}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{z as _}from"zod";var Rr=_.object({member:_.object({id:_.uuid(),role:_.string(),user_id:_.string(),description:_.string()})}),V=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=Rr.safeParse(e.body);if(!r.success)return t.status(400).json({errors:_.treeifyError(r.error)});let{member:s}=r.data,a=await this.teamMemberRepository.update({member:s});t.status(200).json(a)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};function Be(){return{createTeamMemberController:new X(new b(c))}}function Pe(){return{updateTeamMemberController:new V(new b(c))}}function Me(){return{deleteTeamMemberController:new J(new b(c))}}var f=wr();f.get("/",async(o,e)=>{let{findAllTeamsController:t}=Ce();await t.handle(o,e)});f.get("/id/:id",async(o,e)=>{let{findTeamByIdController:t}=Se();await t.handle(o,e)});f.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:t}=Ue();await t.handle(o,e)});f.post("/",async(o,e)=>{let{createTeamController:t}=Ae();await t.handle(o,e)});f.put("/member/:id",async(o,e)=>{let{updateTeamMemberController:t}=Pe();await t.handle(o,e)});f.post("/:team_id/member",async(o,e)=>{let{createTeamMemberController:t}=Be();await t.handle(o,e)});f.put("/:id",async(o,e)=>{let{updateTeamController:t}=xe();await t.handle(o,e)});f.delete("/member/:id",async(o,e)=>{let{deleteTeamMemberController:t}=Me();await t.handle(o,e)});f.delete("/:id",async(o,e)=>{let{deleteTeamController:t}=De();await t.handle(o,e)});import{Router as gr}from"express";import{config as Tr}from"dotenv";var Y=class{constructor(e,t){this.clerkWebhookService=e;this.userRepository=t}async handle(e,t){try{let r=await this.clerkWebhookService.verifyEvent(e);if(!r)throw new Error("Erro ao verificar webhook.");let{type:s,data:{created_at:a,updated_at:i,email_addresses:n,...m}}=r;s==="user.created"&&(await this.userRepository.create({created_at:new Date(a),updated_at:new Date(i),email_addresses:n,...m}),t.status(201).json({message:"Usu\xE1rio criado com sucesso."}))}catch(r){r instanceof Error&&t.status(400).json({message:r.message})}}};var Z=class{constructor(e,t){this.clerkWebhookService=e;this.userRepository=t}async handle(e,t){try{let r=await this.clerkWebhookService.verifyEvent(e);if(!r)throw new Error("Erro ao verificar webhook.");let{type:s,data:a}=r;s==="user.deleted"&&(await this.userRepository.delete(a.id),t.status(200).json({message:"Usu\xE1rio deletado com sucesso."}))}catch(r){r instanceof Error&&t.status(400).json({message:r.message})}}};var ee=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=await this.userRepository.findAll();t.status(200).json(r)}catch(r){console.log(r),r instanceof Error&&t.status(400).json({message:"Erro ao buscar usu\xE1rios"})}}};var re=class{constructor(e,t){this.clerkWebhookService=e;this.userRepository=t}async handle(e,t){try{let r=await this.clerkWebhookService.verifyEvent(e);if(!r)throw new Error("Erro ao verificar webhook.");let{type:s,data:a}=r;s==="user.updated"&&(await this.userRepository.update({...a,last_name:a.last_name===null?void 0:a.last_name}),t.status(200).json({message:"Usu\xE1rio atualizado com sucesso."}))}catch(r){console.log(r),r instanceof Error&&t.status(400).json({message:r.message})}}};var te=class{constructor(e){this.prisma=e}async create({email_addresses:e,first_name:t,last_name:r,...s}){await this.prisma.user.create({data:{first_name:t,last_name:r,id:s.id,created_at:s.created_at,updated_at:s.updated_at,image_url:s.image_url,profile_image_url:s.profile_image_url,email_addresses:{create:e.map(a=>({email_address:a.email_address,linked_to:JSON.stringify(a.linked_to),id:a.id}))}}})}async update(e){await this.prisma.user.update({where:{id:e.id},data:{first_name:e.first_name,last_name:e.last_name,image_url:e.image_url,profile_image_url:e.profile_image_url,email_addresses:{update:e.email_addresses.map(t=>({where:{id:t.id},data:{email_address:t.email_address,linked_to:JSON.stringify(t.linked_to)}}))}}})}async delete(e){await this.prisma.user.delete({where:{id:e.id}})}async findAll(){return await this.prisma.user.findMany({include:{email_addresses:!0}})}};function A(){return new te(c)}import{Webhook as hr}from"svix";var oe=class{constructor(e){this.webhook=e}async verifyEvent(e){let{"svix-id":t,"svix-timestamp":r,"svix-signature":s}=e.headers;if(!(t&&r&&s))throw new Error("Headers are missing");let a=JSON.stringify(e.body),i={"svix-id":t,"svix-timestamp":r,"svix-signature":s};try{return await this.webhook.verify(a,i)}catch(n){if(n instanceof Error)throw new Error(n.message)}}};function se(o){return new oe(new hr(o))}Tr();function Ne(){return{createUserController:new Y(se(process.env.CLERK_USER_CREATED),A())}}function je(){return{updateUserController:new re(se(process.env.CLERK_USER_UPDATED),A())}}function qe(){return{deleteUserController:new Z(se(process.env.CLERK_USER_DELETED),A())}}function Fe(){return{findAllUsersController:new ee(A())}}var{createUserController:Er}=Ne(),{updateUserController:br}=je(),{deleteUserController:Ir}=qe(),C=gr();C.post("/api/webhook/created-user",async(o,e)=>{await Er.handle(o,e)});C.post("/api/webhook/updated-user",async(o,e)=>{await br.handle(o,e)});C.post("/api/webhook/deleted-user",async(o,e)=>{await Ir.handle(o,e)});C.get("/",async(o,e)=>{let{findAllUsersController:t}=Fe();await t.handle(o,e)});var h=fe(),vr={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};h.use(_r(vr));h.use(fe.json());h.use(fe.urlencoded({extended:!1}));h.use("/",ne);h.use("/auth",ie);h.use("/user",C);h.use("/news",E);h.use("/team",f);var Cr=kr.createServer(h),Oe=4e3;Cr.listen(Oe,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${Oe}.`)});
