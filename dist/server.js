import fi from"node:http";import{apiReference as ui}from"@scalar/express-api-reference";import li from"cors";import Xt from"express";import{OpenAPIRegistry as So,OpenApiGeneratorV3 as vo}from"@asteasolutions/zod-to-openapi";import{$Enums as er}from"@prisma/client";import n from"zod";import{extendZodWithOpenApi as vs}from"@asteasolutions/zod-to-openapi";import V from"zod";var Us=1,Ns=6;vs(V);var St=V.object({page:V.coerce.number().min(1).default(Us),limit:V.coerce.number().min(1).default(Ns),title:V.string(),description:V.string(),orderBy:V.enum(["asc","desc"]).default("desc")}),ye=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let r=St.safeParse({page:e.query.page,limit:e.query.limit,title:e.query.title,description:e.query.description,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:V.prettifyError(r.error)});let{title:o,description:i,limit:a,orderBy:p,page:c}=r.data,f=c*a-a,h=e.user.id,[I,S]=await Promise.all([this.certificationRepository.findByUserId({userId:h,pagination:{offset:f,limit:a},filter:{title:o,description:i,orderBy:p}}),this.certificationRepository.count({filter:{title:o,description:i,userId:h}})]),v=Math.max(Math.ceil(S/a),1);return t.status(200).json({page:c,totalPages:v,offset:f,limit:a,certifications:I})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Ps}from"@asteasolutions/zod-to-openapi";import z from"zod";var xs=1,_s=7;Ps(z);var vt=z.object({page:z.coerce.number().min(1).default(xs),limit:z.coerce.number().min(1).default(_s),title:z.string().optional(),content:z.string().optional(),orderBy:z.enum(["asc","desc"]).default("desc")}),fe=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=vt.safeParse({page:e.query.page,limit:e.query.limit,title:e.query.title,content:e.query.content,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:z.prettifyError(r.error)});let{page:o,limit:i,content:a,orderBy:p,title:c}=r.data,f=i*o-i,h=e.user.id,[I,S]=await Promise.all([this.newsRepository.findByAuthorId({authorId:h,pagination:{offset:f,limit:i},filter:{orderBy:p,title:c,content:a}}),this.newsRepository.count({filter:{authorId:h,content:a,title:c}})]),v=Math.ceil(S/i);t.status(200).json({page:o,totalPages:v,offset:f,limit:i,news:I})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Fs}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as Os}from"@prisma/client";import F from"zod";var Bs=1,Ds=6;Fs(F);var Ut=F.object({page:F.coerce.number().min(1).default(Bs),limit:F.coerce.number().min(1).default(Ds),title:F.string().optional(),description:F.string().optional(),status:F.enum(Os).default("PENDING"),orderBy:F.enum(["asc","desc"]).default("desc")}),Re=class{constructor(e){this.pendencyRepository=e}async handle(e,t){try{let r=Ut.safeParse(e.query);if(!r.success)return t.status(400).json({errors:F.prettifyError(r.error)});let{title:o,description:i,limit:a,orderBy:p,page:c,status:f}=r.data,h=c*a-a,I=e.user.id,[S,v]=await Promise.all([this.pendencyRepository.findByUserId({userId:I,pagination:{offset:h,limit:a},filter:{title:o,description:i,orderBy:p,status:f}}),this.pendencyRepository.count({filter:{title:o,description:i,userId:I,status:f}})]),Ct=Math.max(Math.ceil(v/a),1);return t.status(200).json({page:c,totalPages:Ct,offset:h,limit:a,pendencies:S})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as qs}from"@asteasolutions/zod-to-openapi";import ce from"zod";qs(ce);var Nt=ce.object({password:ce.string(),email:ce.email()}),ge=class{constructor(e,t,r){this.userRepository=e;this.bcrypt=t;this.jwtService=r}async handle(e,t){try{let r=Nt.safeParse(e.body);if(!r.success)return t.status(400).json({errors:ce.prettifyError(r.error)});let{email:o,password:i}=r.data,a=await this.userRepository.findByEmail(o);if(!a)return t.status(401).json({message:"Usu\xE1rio n\xE3o existe."});if(!await this.bcrypt.compare({password:i,hashedPassword:a.passwordHash}))return t.status(401).json({message:"Senha inv\xE1lida."});let{id:c,role:f}=a,h=this.jwtService.sign({id:c,role:f,email:o});return t.status(200).json({token:h})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as ks}from"@asteasolutions/zod-to-openapi";import $ from"zod";var he=8;ks($);var Pt=$.object({name:$.string("Nome \xE9 obrigat\xF3rio.").min(1,"Nome \xE9 obrigat\xF3rio."),email:$.email("E-mail inv\xE1lido.").min(1,"E-mail \xE9 obrigat\xF3rio."),password:$.string("A senha \xE9 obrigat\xF3ria.").min(he,`A senha deve ter pelo menos ${he} caracteres.`),confirmPassword:$.string("A senha \xE9 obrigat\xF3ria.").min(he,`A senha deve ter pelo menos ${he} caracteres.`)}).refine(s=>s.password===s.confirmPassword,{message:"As senhas n\xE3o coincidem.",path:["confirmPassword"]}),Ie=class{constructor(e,t){this.userRepository=e;this.bcrypt=t}async handle(e,t){try{let r=Pt.safeParse(e.body);if(!r.success)return t.status(400).json({errors:$.prettifyError(r.error)});let{email:o,name:i,password:a}=r.data;if(await this.userRepository.findByEmail(o))return t.status(409).json({message:"Usu\xE1rio j\xE1 existe."});let c=await this.bcrypt.hash(a);return await this.userRepository.create({name:i,emailAddress:o,passwordHash:c}),t.status(201).json()}catch(r){if(r instanceof Error)return t.status(500).json({message:r.message})}}};var tr={method:"post",path:"/auth/sign-up",tags:["Authentication"],summary:"Create a new user",request:{body:{content:{"application/json":{schema:Pt}}}},responses:{201:{description:"User created successfully",summary:"User Registration Successful",content:{"application/json":{schema:n.object({message:n.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},409:{description:"User already exists with this email",summary:"User Already Exists",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},rr={method:"post",path:"/auth/sign-in",tags:["Authentication"],summary:"Sign in",request:{body:{content:{"application/json":{schema:Nt}}}},responses:{200:{description:"Authentication successful, JWT token returned",summary:"Login Successful",content:{"application/json":{schema:n.object({token:n.string()})}}},400:{description:"Invalid credentials or input data",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},401:{description:"Invalid email or password",summary:"Authentication Failed",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},sr={method:"get",path:"/auth/user",tags:["Authentication"],summary:"Search for authenticated user",security:[{bearerAuth:[]}],responses:{200:{description:"Authenticated user information retrieved successfully",summary:"User Information Retrieved",content:{"application/json":{schema:n.object({name:n.string(),id:n.string(),avatarUrl:n.string().nullable(),createdAt:n.date(),updatedAt:n.date(),emailAddress:n.string(),orcid:n.string().nullable(),phone:n.string().nullable(),lattesUrl:n.string().nullable(),role:n.enum(er.UserRole)}).nullable()}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},404:{description:"User not found or not authenticated",summary:"User Not Found",content:{"application/json":{schema:n.object({message:n.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},or={method:"get",path:"/auth/user/news",tags:["Authentication"],summary:"List authenticated user news",security:[{bearerAuth:[]}],request:{query:vt},responses:{200:{description:"Paginated list of authenticated user news retrieved successfully",summary:"User News Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),news:n.object({content:n.string(),id:n.string(),title:n.string(),createdAt:n.date(),updatedAt:n.date(),imageUrl:n.string().nullable()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},ir={method:"get",path:"/auth/admin",tags:["Authentication"],summary:"Verify admin access",security:[{bearerAuth:[]}],responses:{200:{description:"Admin access verified successfully",summary:"Admin Access Granted",content:{"application/json":{schema:n.object({success:n.boolean()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},nr={method:"get",path:"/auth/certifications",tags:["Authentication"],summary:"List all authenticated user's certifications",security:[{bearerAuth:[]}],request:{query:St},responses:{200:{description:"Paginated list of authenticated user certifications retrieved successfully",summary:"User Certifications Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),certifications:n.object({description:n.string(),id:n.string(),title:n.string(),certificationUrl:n.string(),createdAt:n.date(),updatedAt:n.date(),userId:n.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}},ar={method:"get",path:"/auth/pendencies",tags:["Authentication"],summary:"List all authenticated user's pendencies",security:[{bearerAuth:[]}],request:{query:Ut},responses:{200:{description:"Paginated list of authenticated user pendencies retrieved successfully",summary:"User Pendencies Retrieved",content:{"application/json":{schema:n.object({page:n.number(),totalPages:n.number(),offset:n.number(),limit:n.number(),pendencies:n.object({id:n.string(),title:n.string(),description:n.string(),status:n.enum(er.PendencyStatus),createdAt:n.date(),updatedAt:n.date(),userId:n.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:n.object({errors:n.record(n.string(),n.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:n.object({message:n.string()})}}}}};import{$Enums as Ks}from"@prisma/client";import m from"zod";import{extendZodWithOpenApi as Ms}from"@asteasolutions/zod-to-openapi";import Ee from"zod";Ms(Ee);var xt=Ee.object({id:Ee.string()}),be=class{constructor(e,t){this.certificationRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=xt.safeParse({id:e.params.certification_id});if(!r.success)return t.status(400).json({message:Ee.prettifyError(r.error)});let o=await this.certificationRepository.findById(r.data.id);return o?(await Promise.all([this.certificationRepository.deleteById(o.id),this.firebaseStorageService.deleteFile({fileUrl:o.certificationUrl})]),t.status(204).json()):t.status(404).json({message:"A certifica\xE7\xE3o n\xE3o existe."})}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Ls}from"@asteasolutions/zod-to-openapi";import we from"zod";Ls(we);var _t=we.object({certificationId:we.uuid()}),Te=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let r=_t.safeParse({certificationId:e.params.certification_id});if(!r.success)return t.status(400).json({message:we.prettifyError(r.error)});let o=await this.certificationRepository.findById(r.data.certificationId);return o?t.status(200).json(o):t.status(404).json({message:"Certificado n\xE3o encontrado."})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Ws}from"@asteasolutions/zod-to-openapi";import O from"zod";var Vs=1,zs=6;Ws(O);var Ft=O.object({page:O.coerce.number().min(1).default(Vs),limit:O.coerce.number().min(1).default(zs),title:O.string().optional(),description:O.string().optional(),userId:O.uuid().optional(),orderBy:O.enum(["asc","desc"]).default("desc")}),je=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let r=Ft.safeParse(e.query);if(!r.success)return t.status(400).json({errors:O.prettifyError(r.error)});let{description:o,limit:i,orderBy:a,page:p,title:c,userId:f}=r.data,h=p*i-i,[I,S]=await Promise.all([this.certificationRepository.find({pagination:{offset:h,limit:i},filter:{title:c,description:o,orderBy:a,userId:f}}),this.certificationRepository.count({filter:{title:c,description:o}})]),v=Math.max(Math.ceil(S/i),1);return t.status(200).json({page:p,totalPages:v,offset:h,limit:i,certifications:I})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Hs}from"@asteasolutions/zod-to-openapi";import Y from"zod";var w={NEWS:"images/news",USER:"images/user",CERTIFICATION:"documents/certifications",PENDENCY:"documents/pendencies"};Hs(Y);var Ce=Y.object({userId:Y.uuid(),title:Y.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:Y.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:Y.any().refine(s=>s&&typeof s=="object"&&s.size>0,"Arquivo do certificado \xE9 obrigat\xF3rio")}),Ae=class{constructor(e,t,r){this.userRepository=e;this.certificationRepository=t;this.firebaseStorageService=r}async handle(e,t){try{let r=Ce.safeParse({...e.body,userId:e.params.user_id,certification:e.file});if(!r.success)return t.status(400).json({errors:Y.prettifyError(r.error)});let{userId:o,title:i,description:a,certification:p}=r.data;if(!await this.userRepository.findById(o))return t.status(400).json({message:"O usu\xE1rio n\xE3o existe."});let f=await this.firebaseStorageService.uploadFile({file:p,id:o,folder:w.CERTIFICATION});return await this.certificationRepository.register({userId:o,title:i,description:a,certificationUrl:f}),t.status(201).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Zs}from"@asteasolutions/zod-to-openapi";import X from"zod";Zs(X);var ve=X.object({id:X.uuid(),title:X.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:X.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:X.any().refine(s=>s==null||typeof s=="object"&&typeof s.size=="number"&&(s.size===0||s.size>0),"Arquivo do certificado \xE9 inv\xE1lido").optional()}),Se=class{constructor(e,t){this.certificationRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=ve.safeParse({...e.body,id:e.params.certification_id,certification:e.file});if(!r.success)return t.status(400).json({errors:X.prettifyError(r.error)});let{certification:o,id:i,...a}=r.data,p=await this.certificationRepository.findById(i);if(!p)return t.status(400).json({message:"A certifica\xE7\xE3o n\xE3o existe"});let c=p.certificationUrl;return o&&o.size>0&&(c=await this.firebaseStorageService.updateFile({file:o,id:p.userId,folder:w.CERTIFICATION,fileUrl:p.certificationUrl})),await this.certificationRepository.update({...a,id:i,certificationUrl:c}),t.status(204).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};var cr={method:"post",path:"/certifications/{user_id}",tags:["Certifications"],summary:"Register certification for user",security:[{bearerAuth:[]}],request:{params:Ce.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:Ce.omit({userId:!0})}}}},responses:{201:{description:"Certification registered successfully for the user",summary:"Certification Registered",content:{"application/json":{schema:m.object({message:m.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:m.object({message:m.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}},mr={method:"get",path:"/certifications",tags:["Certifications"],summary:"List certifications",security:[{bearerAuth:[]}],request:{query:Ft},responses:{200:{description:"Paginated list of certifications with user information retrieved successfully",summary:"Certifications Retrieved",content:{"application/json":{schema:m.object({page:m.number(),totalPages:m.number(),offset:m.number(),limit:m.number(),certifications:m.array(m.object({description:m.string(),userId:m.string(),title:m.string(),id:m.string(),createdAt:m.date(),updatedAt:m.date(),certificationUrl:m.url(),user:m.object({id:m.uuid(),name:m.string(),createdAt:m.date(),updatedAt:m.date(),avatarUrl:m.string().nullable(),emailAddress:m.email(),orcid:m.string().nullable(),phone:m.string().nullable(),lattesUrl:m.url().nullable(),role:m.enum(Ks.UserRole)})}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}},pr={method:"get",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Find certification by ID",security:[{bearerAuth:[]}],request:{params:_t},responses:{200:{description:"Certification details retrieved successfully",summary:"Certification Retrieved",content:{"application/json":{schema:m.object({description:m.string(),userId:m.string(),title:m.string(),id:m.string(),createdAt:m.date(),updatedAt:m.date(),certificationUrl:m.url()}).nullable()}}},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:m.object({message:m.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}},dr={method:"put",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Update certification",security:[{bearerAuth:[]}],request:{params:ve.pick({id:!0}).transform(()=>({certification_id:""})),body:{content:{"multipart/form-data":{schema:ve.omit({id:!0})}}}},responses:{204:{description:"Certification updated successfully",summary:"Certification Updated"},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:m.object({message:m.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}},ur={method:"delete",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Delete certification",security:[{bearerAuth:[]}],request:{params:xt},responses:{204:{description:"Certification deleted successfully",summary:"Certification Deleted"},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:m.object({message:m.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}};import d from"zod";import{extendZodWithOpenApi as Qs}from"@asteasolutions/zod-to-openapi";import ie from"zod";var Gs=5,lr=1024,Js=lr*lr,$s=Gs*Js;Qs(ie);var Ot=ie.object({title:ie.string().min(1),content:ie.string().min(1),image:ie.any().refine(s=>!s||typeof s=="object"&&typeof s.mimetype=="string"&&s.mimetype.startsWith("image/")&&typeof s.size=="number"&&s.size<=$s,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),Ue=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Ot.safeParse({...e.body,image:e.file});if(!r.success)return t.status(400).json({errors:ie.prettifyError(r.error)});let{title:o,content:i,image:a}=r.data,p=e.user.id,c=await this.firebaseStorageService.uploadFile({file:a,folder:w.NEWS,id:p});await this.newsRepository.create({title:o,content:i,authorId:p,imageUrl:c}),t.status(201).json()}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Ys}from"@asteasolutions/zod-to-openapi";import B from"zod";var Xs=1,eo=7;Ys(B);var Pe=B.object({page:B.coerce.number().min(1).default(Xs),limit:B.coerce.number().min(1).default(eo),authorId:B.string(),title:B.string().optional(),content:B.string().optional(),orderBy:B.enum(["asc","desc"]).default("desc")}),Ne=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=Pe.safeParse({page:e.query.page,limit:e.query.limit,author_id:e.params.author_id,title:e.query.title,content:e.query.content,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:B.prettifyError(r.error)});let{page:o,limit:i,authorId:a,content:p,orderBy:c,title:f}=r.data,h=i*o-i,[I,S]=await Promise.all([this.newsRepository.findByAuthorId({authorId:a,pagination:{offset:h,limit:i},filter:{orderBy:c,title:f,content:p}}),this.newsRepository.count({filter:{authorId:a,content:p,title:f}})]),v=Math.max(Math.ceil(S/i),1);t.status(200).json({page:o,totalPages:v,offset:h,limit:i,news:I})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as to}from"@asteasolutions/zod-to-openapi";import xe from"zod";to(xe);var Bt=xe.object({id:xe.string()}),_e=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=Bt.safeParse(e.params);if(!r.success)return t.status(400).json({errors:xe.prettifyError(r.error)});let{id:o}=r.data,i=await this.newsRepository.findById(o);t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as ro}from"@asteasolutions/zod-to-openapi";import D from"zod";var so=1,oo=9;ro(D);var Dt=D.object({page:D.coerce.number().min(1).default(so),limit:D.coerce.number().min(1).default(oo),title:D.string().optional(),content:D.string().optional(),authorId:D.string().optional(),orderBy:D.enum(["asc","desc"]).default("desc")}),Fe=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=Dt.safeParse(e.query);if(!r.success)return t.status(400).json({errors:D.prettifyError(r.error)});let{page:o,limit:i,authorId:a,content:p,orderBy:c,title:f}=r.data,h=i*o-i,[I,S]=await Promise.all([this.newsRepository.find({pagination:{offset:h,limit:i},filter:{authorId:a,content:p,title:f,orderBy:c}}),this.newsRepository.count({filter:{title:f,content:p,authorId:a}})]),v=Math.max(Math.ceil(S/i),1);t.status(200).json({page:o,totalPages:v,offset:h,limit:i,news:I})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var yr={method:"post",path:"/news",tags:["News"],summary:"Create news",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Ot}}}},responses:{201:{description:"News article created successfully",summary:"News Created",content:{"application/json":{schema:d.object({message:d.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},fr={method:"get",path:"/news",tags:["News"],summary:"List news",request:{query:Dt},responses:{200:{description:"Paginated list of news articles retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),news:d.array(d.object({title:d.string(),content:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),imageUrl:d.string().nullable()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},Rr={method:"get",path:"/news/{id}",tags:["News"],summary:"Find news by ID",request:{params:Bt},responses:{200:{description:"News article details retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),news:d.object({title:d.string(),content:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),imageUrl:d.string().nullable()})})}}},400:{description:"Invalid news ID format",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"News article not found with the provided ID",summary:"News Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}},gr={method:"get",path:"/news/author/{author_id}",tags:["News"],summary:"List news by author",request:{params:Pe.pick({authorId:!0}).transform(()=>({author_id:""})),query:Pe.omit({authorId:!0})},responses:{200:{description:"Paginated list of news articles by author retrieved successfully",summary:"Author News Retrieved",content:{"application/json":{schema:d.object({page:d.number(),totalPages:d.number(),offset:d.number(),limit:d.number(),news:d.array(d.object({title:d.string(),content:d.string(),id:d.string(),createdAt:d.date(),updatedAt:d.date(),imageUrl:d.string().nullable()}))})}}},400:{description:"Invalid author ID or query parameters",summary:"Validation Error",content:{"application/json":{schema:d.object({errors:d.record(d.string(),d.string())})}}},404:{description:"Author not found with the provided ID",summary:"Author Not Found",content:{"application/json":{schema:d.object({message:d.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:d.object({message:d.string()})}}}}};import{$Enums as hr}from"@prisma/client";import l from"zod";import{extendZodWithOpenApi as io}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as no}from"@prisma/client";import q from"zod";io(q);var Be=q.object({userId:q.uuid(),title:q.string().min(1),description:q.string().optional(),status:q.enum(no).default("PENDING"),dueDate:q.coerce.date().optional(),document:q.any().refine(s=>s&&typeof s=="object"&&s.size>0,"Arquivo do documento \xE9 obrigat\xF3rio")}),Oe=class{constructor(e,t,r){this.userRepository=e;this.pendencyRepository=t;this.firebaseStorageService=r}async handle(e,t){try{let r=Be.safeParse({...e.body,userId:e.params.user_id,document:e.file});if(!r.success)return t.status(400).json({errors:q.prettifyError(r.error)});let{userId:o,title:i,description:a,status:p,dueDate:c,document:f}=r.data;if(!await this.userRepository.findById(o))return t.status(400).json({message:"O usu\xE1rio n\xE3o existe."});let I=await this.firebaseStorageService.uploadFile({file:f,id:o,folder:w.PENDENCY});return await this.pendencyRepository.create({userId:o,title:i,description:a,status:p,dueDate:c,documentUrl:I}),t.status(201).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as ao}from"@asteasolutions/zod-to-openapi";import De from"zod";ao(De);var qt=De.object({id:De.uuid()}),qe=class{constructor(e,t){this.pendencyRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=qt.safeParse({id:e.params.pendency_id});if(!r.success)return t.status(400).json({errors:De.prettifyError(r.error)});let o=await this.pendencyRepository.findById(r.data.id);return o?(await Promise.all([this.pendencyRepository.deleteById(o.id),this.firebaseStorageService.deleteFile({fileUrl:o.documentUrl})]),t.status(204).json()):t.status(404).json({message:"A pend\xEAncia n\xE3o existe."})}catch(r){if(r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as co}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as mo}from"@prisma/client";import x from"zod";var po=1,uo=6;co(x);var kt=x.object({page:x.coerce.number().min(1).default(po),limit:x.coerce.number().min(1).default(uo),title:x.string().optional(),description:x.string().optional(),status:x.enum(mo).default("PENDING"),userId:x.uuid().optional(),orderBy:x.enum(["asc","desc"]).default("desc")}),ke=class{constructor(e){this.pendencyRepository=e}async handle(e,t){try{let r=kt.safeParse(e.query);if(!r.success)return t.status(400).json({errors:x.prettifyError(r.error)});let{description:o,limit:i,orderBy:a,page:p,title:c,status:f,userId:h}=r.data,I=p*i-i,[S,v]=await Promise.all([this.pendencyRepository.find({pagination:{offset:I,limit:i},filter:{title:c,description:o,status:f,orderBy:a,userId:h}}),this.pendencyRepository.count({filter:{title:c,description:o,status:f,userId:h}})]),Ct=Math.max(Math.ceil(v/i),1);return t.status(200).json({page:p,totalPages:Ct,offset:I,limit:i,pendencies:S})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as lo}from"@asteasolutions/zod-to-openapi";import Me from"zod";lo(Me);var Mt=Me.object({pendencyId:Me.uuid()}),Le=class{constructor(e){this.pendencyRepository=e}async handle(e,t){try{let r=Mt.safeParse({pendencyId:e.params.pendency_id});if(!r.success)return t.status(400).json({errors:Me.prettifyError(r.error)});let o=await this.pendencyRepository.findById(r.data.pendencyId);return o?t.status(200).json(o):t.status(404).json({message:"Pend\xEAncia n\xE3o encontrada."})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as yo}from"@asteasolutions/zod-to-openapi";import{PendencyStatus as fo}from"@prisma/client";import k from"zod";yo(k);var Ve=k.object({id:k.uuid(),title:k.string().min(1),description:k.string().optional(),status:k.enum(fo),dueDate:k.coerce.date().optional(),document:k.any().refine(s=>s==null||typeof s=="object"&&typeof s.size=="number"&&(s.size===0||s.size>0),"Arquivo do documento \xE9 inv\xE1lido").optional()}),We=class{constructor(e,t){this.pendencyRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Ve.safeParse({...e.body,id:e.params.pendency_id,document:e.file});if(!r.success)return t.status(400).json({errors:k.prettifyError(r.error)});let{document:o,id:i,...a}=r.data,p=await this.pendencyRepository.findById(i);if(!p)return t.status(400).json({message:"A pend\xEAncia n\xE3o existe"});let c=p.documentUrl;return o&&o.size>0&&(c=await this.firebaseStorageService.updateFile({file:o,id:p.userId,folder:w.PENDENCY,fileUrl:p.documentUrl})),await this.pendencyRepository.update({...a,id:i,documentUrl:c}),t.status(204).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};var Ir={method:"post",path:"/pendency/{user_id}",tags:["Pendencies"],summary:"Create pendency for user",security:[{bearerAuth:[]}],request:{params:Be.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:Be.omit({userId:!0})}}}},responses:{201:{description:"Pendency created successfully for the user",summary:"Pendency Created",content:{"application/json":{schema:l.object({})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},Er={method:"get",path:"/pendency",tags:["Pendencies"],summary:"List pendencies",security:[{bearerAuth:[]}],request:{query:kt},responses:{200:{description:"Paginated list of pendencies retrieved successfully",summary:"Pendencies Retrieved",content:{"application/json":{schema:l.object({page:l.number(),totalPages:l.number(),offset:l.number(),limit:l.number(),pendencies:l.array(l.object({id:l.string(),title:l.string(),description:l.string().nullable(),status:l.enum(hr.PendencyStatus),dueDate:l.date().nullable(),documentUrl:l.string(),userId:l.string(),createdAt:l.date(),updatedAt:l.date()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},br={method:"get",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Find pendency by ID",security:[{bearerAuth:[]}],request:{params:Mt},responses:{200:{description:"Pendency details retrieved successfully",summary:"Pendency Retrieved",content:{"application/json":{schema:l.object({id:l.string(),title:l.string(),description:l.string().nullable(),status:l.enum(hr.PendencyStatus),dueDate:l.date().nullable(),documentUrl:l.string(),userId:l.string(),createdAt:l.date(),updatedAt:l.date()}).nullable()}}},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},wr={method:"put",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Update pendency",security:[{bearerAuth:[]}],request:{params:Ve.pick({id:!0}).transform(()=>({pendency_id:""})),body:{content:{"multipart/form-data":{schema:Ve.omit({id:!0})}}}},responses:{204:{description:"Pendency updated successfully",summary:"Pendency Updated"},400:{description:"Invalid input data or pendency does not exist",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},Tr={method:"delete",path:"/pendency/{pendency_id}",tags:["Pendencies"],summary:"Delete pendency",security:[{bearerAuth:[]}],request:{params:qt},responses:{204:{description:"Pendency deleted successfully",summary:"Pendency Deleted"},400:{description:"Invalid pendency ID format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},404:{description:"Pendency not found with the provided ID",summary:"Pendency Not Found",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}};import u from"zod";import{extendZodWithOpenApi as Ro}from"@asteasolutions/zod-to-openapi";import _ from"zod";Ro(_);var Lt=_.object({name:_.string().min(1),type:_.string().min(1),members:_.array(_.object({role:_.string().min(1),user:_.object({id:_.string()})}))}),ze=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=Lt.safeParse(e.body);if(!r.success)return t.status(400).json({errors:_.prettifyError(r.error)});let{name:o,type:i,members:a}=r.data;await this.teamRepository.create({name:o,type:i,members:a}),t.status(201).json()}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as go}from"@asteasolutions/zod-to-openapi";import{z as He}from"zod";go(He);var me=He.object({id:He.uuid()}),Ze=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=me.safeParse(e.params);if(!r.success)return t.status(400).json({errors:He.prettifyError(r.error)});let{id:o}=r.data,i=await this.teamRepository.findById(o);t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as ho}from"@asteasolutions/zod-to-openapi";import{z as pe}from"zod";ho(pe);var Wt=pe.object({type:pe.string(),name:pe.string().optional()}),Ke=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=Wt.safeParse({type:e.params.type,name:e.query.name});if(!r.success)return t.status(400).json({errors:pe.prettifyError?.(r.error)});let{type:o,name:i}=r.data,a=await this.teamRepository.findByType({type:o,filter:{name:i}});t.status(200).json(a)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Io}from"@asteasolutions/zod-to-openapi";import{z as N}from"zod";Io(N);var Vt=N.object({id:N.uuid(),name:N.string().min(1),members:N.array(N.object({role:N.string(),id:N.uuid().optional(),user:N.object({id:N.uuid()})}))}),Qe=class{constructor(e,t){this.teamRepository=e;this.teamMemberRepository=t}async handle(e,t){try{let r=Vt.safeParse({id:e.params.id,...e.body});if(!r.success)return t.status(400).json({errors:N.prettifyError(r.error)});let{name:o,members:i,id:a}=r.data,p=await this.teamMemberRepository.findByTeamId(a),c=i.map(h=>h.id),f=p.filter(h=>!c.includes(h.id)).map(h=>h.id);await this.teamMemberRepository.deleteMany(f),await this.teamMemberRepository.updateMany({teamId:a,members:i}),await this.teamRepository.update({id:a,name:o}),t.status(204).json()}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var jr={method:"post",path:"/team",tags:["Teams"],summary:"Create team",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:Lt}}}},responses:{201:{description:"Team created successfully",summary:"Team Created",content:{"application/json":{schema:u.object({message:u.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Ar={method:"put",path:"/team/{id}",tags:["Teams"],summary:"Update team",security:[{bearerAuth:[]}],request:{params:me,body:{content:{"application/json":{schema:Vt}}}},responses:{204:{description:"Team updated successfully",summary:"Team Updated"},400:{description:"Invalid input data or team ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Cr={method:"delete",path:"/team/{id}",tags:["Teams"],summary:"Delete team",security:[{bearerAuth:[]}],request:{params:me},responses:{204:{description:"Team deleted successfully",summary:"Team Deleted"},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Sr={method:"get",path:"/team/id/{id}",tags:["Teams"],summary:"Find team by ID",request:{params:me},responses:{200:{description:"Team details retrieved successfully",summary:"Team Retrieved",content:{"application/json":{schema:u.object({type:u.string(),name:u.string(),id:u.string(),createdAt:u.date(),updatedAt:u.date(),description:u.string().nullable()})}}},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:u.object({message:u.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},vr={method:"get",path:"/team/type/{type}",tags:["Teams"],summary:"Find teams by type",request:{params:Wt.pick({type:!0})},responses:{200:{description:"List of teams by type retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:u.array(u.object({type:u.string(),name:u.string(),id:u.string(),createdAt:u.date(),updatedAt:u.date(),description:u.string().nullable()})).nullable()}}},400:{description:"Invalid team type parameter",summary:"Validation Error",content:{"application/json":{schema:u.object({errors:u.record(u.string(),u.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}},Ur={method:"get",path:"/team",tags:["Teams"],summary:"List teams",responses:{200:{description:"Complete list of teams retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:u.array(u.object({type:u.string(),name:u.string(),id:u.string(),createdAt:u.date(),updatedAt:u.date(),description:u.string().nullable()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:u.object({message:u.string()})}}}}};import{$Enums as xr}from"@prisma/client";import y from"zod";import{extendZodWithOpenApi as Eo}from"@asteasolutions/zod-to-openapi";import zt from"zod";Eo(zt);var Ht=zt.object({id:zt.string()}),Ge=class{constructor(e){this.userRepository=e}async handle(e,t){try{let{id:r}=Ht.parse({id:e.params.id}),o=await this.userRepository.findById(r);if(!o)return t.status(404).json({message:"O usu\xE1rio n\xE3o existe."});let i=e.user.id;return o.id!==i?t.status(401).json({message:"Voc\xEA n\xE3o tem permiss\xE3o para deletar o usu\xE1rio"}):(await this.userRepository.deleteById(o.id),t.status(204).json())}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as bo}from"@asteasolutions/zod-to-openapi";import{z as Je}from"zod";bo(Je);var Zt=Je.object({id:Je.string().min(1,"id do usu\xE1rio n\xE3o fornecido.")}),$e=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=Zt.safeParse(e.params);if(!r.success)return t.status(400).json({errors:Je.treeifyError(r.error)});let{id:o}=r.data,i=await this.userRepository.findById(o);if(!i)return t.status(404).json({message:"Usu\xE1rio n\xE3o encontrado"});t.status(200).json(i)}catch(r){console.log(r),r instanceof Error&&t.status(500).json({message:"Erro ao buscar usu\xE1rio"})}}};import{extendZodWithOpenApi as wo}from"@asteasolutions/zod-to-openapi";import H from"zod";var Pr=2,Nr=1024,To=Nr*Nr,jo=Pr*To,Ao=/^\d{4}-\d{4}-\d{4}-\d{4}$/,Ye=/^[^0-9]*$/,Co=/^\(?\d{2}\)?[\s-]?\d{4,5}-?\d{4}$/;wo(H);var Kt=H.object({name:H.string().optional(),lattesUrl:H.string().optional(),orcid:H.string().transform(s=>s.trim()).transform(s=>Ye.test(s)?"":s).refine(s=>Ye.test(s)||Ao.test(s),{message:"ORCID inv\xE1lido. Deve estar no formato 0000-0000-0000-0000"}),phone:H.string().transform(s=>Ye.test(s)?"":s).refine(s=>Ye.test(s)||Co.test(s),{message:"Telefone inv\xE1lido. Deve estar no formato (99) 99999-9999"}),avatarImage:H.any().refine(s=>s==null?!0:typeof s!="object"||typeof s.size!="number"?!1:s.size<=jo,`A imagem deve ter no m\xE1ximo ${Pr}MB.`).optional()}),Xe=class{constructor(e,t){this.userRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Kt.safeParse({...e.body,avatarImage:e.file});if(!r.success)return t.status(400).json({errors:H.prettifyError(r.error)});let{avatarImage:o,...i}=r.data,a=e.user.id,p=await this.userRepository.findById(a);if(!p)return t.status(400).json({message:"O usu\xE1rio n\xE3o existe"});let c=p.avatarUrl;return o&&(p.avatarUrl?c=await this.firebaseStorageService.updateFile({file:o,id:a,folder:w.USER,fileUrl:p.avatarUrl}):c=await this.firebaseStorageService.uploadFile({file:o,id:a,folder:w.USER})),await this.userRepository.update({...i,id:a,avatarUrl:c||void 0}),t.status(204).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};var _r={method:"get",path:"/users/{id}",tags:["Users"],summary:"Find user by ID",request:{params:Zt},responses:{200:{description:"User details retrieved successfully",summary:"User Retrieved",content:{"application/json":{schema:y.object({id:y.string(),name:y.string(),createdAt:y.date(),updatedAt:y.date(),role:y.enum(xr.UserRole),lattesUrl:y.string().nullable(),orcid:y.string().nullable(),phone:y.string().nullable(),avatarUrl:y.url().nullable(),emailAddress:y.email()})}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Fr={method:"put",path:"/users",tags:["Users"],summary:"Update authenticated user",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Kt}}}},responses:{200:{description:"User profile updated successfully",summary:"User Updated",content:{"application/json":{schema:y.object({message:y.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Or={method:"delete",path:"/users",tags:["Users"],summary:"Delete authenticated user",security:[{bearerAuth:[]}],request:{params:Ht},responses:{200:{description:"User account deleted successfully",summary:"User Deleted",content:{"application/json":{schema:y.object({message:y.string()})}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:y.object({errors:y.record(y.string(),y.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:y.object({message:y.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}},Br={method:"get",path:"/users",tags:["Users"],summary:"List users",responses:{200:{description:"Complete list of users retrieved successfully",summary:"Users Retrieved",content:{"application/json":{schema:y.array(y.object({id:y.string(),name:y.string(),createdAt:y.date(),updatedAt:y.date(),role:y.enum(xr.UserRole),lattesUrl:y.url().nullable(),orcid:y.string().nullable(),phone:y.string().nullable(),avatarUrl:y.string().nullable(),emailAddress:y.email()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:y.object({message:y.string()})}}}}};var g=new So;g.registerComponent("securitySchemes","bearerAuth",{type:"http",scheme:"bearer",bearerFormat:"JWT"});g.registerPath(tr);g.registerPath(rr);g.registerPath(sr);g.registerPath(or);g.registerPath(nr);g.registerPath(ar);g.registerPath(ir);g.registerPath(_r);g.registerPath(Fr);g.registerPath(Or);g.registerPath(Br);g.registerPath(jr);g.registerPath(Ar);g.registerPath(Cr);g.registerPath(Sr);g.registerPath(vr);g.registerPath(Ur);g.registerPath(yr);g.registerPath(fr);g.registerPath(Rr);g.registerPath(gr);g.registerPath(cr);g.registerPath(mr);g.registerPath(pr);g.registerPath(dr);g.registerPath(ur);g.registerPath(Ir);g.registerPath(Er);g.registerPath(br);g.registerPath(wr);g.registerPath(Tr);var Uo=new vo(g.definitions),Dr=Uo.generateDocument({openapi:"3.0.0",info:{title:"API da Rede CT",version:"1.0.0",description:"API com valida\xE7\xE3o Zod"}});import{Router as Bo}from"express";import{extendZodWithOpenApi as No}from"@asteasolutions/zod-to-openapi";import et from"zod";No(et);var Po=et.object({authenticatedUserId:et.uuid()}),tt=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=Po.safeParse({authenticatedUserId:e.user.id});if(!r.success)return t.status(400).json({errors:et.prettifyError(r.error)});let o=await this.userRepository.findById(r.data.authenticatedUserId);return o?t.status(200).json(o):t.status(404).json({message:"Usu\xE1rio n\xE3o encontrado."})}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};import{PrismaClient as xo}from"@prisma/client";var E=new xo({log:["query"]});var rt=class{constructor(e){this.prisma=e}async register({userId:e,title:t,description:r,certificationUrl:o}){await this.prisma.certification.create({data:{title:t,description:r,certificationUrl:o,user:{connect:{id:e}}}})}async find({pagination:{limit:e,offset:t},filter:{description:r,orderBy:o,title:i,userId:a}}){let p={userId:a},c=[];return i&&c.push({title:{contains:i,mode:"insensitive"}}),r&&c.push({description:{contains:r,mode:"insensitive"}}),c.length>0&&(p.OR=c),await this.prisma.certification.findMany({where:p,include:{user:{omit:{passwordHash:!0}}},skip:t,take:e,orderBy:{updatedAt:o}})}async findById(e){return await this.prisma.certification.findFirst({where:{id:e}})}async findByUserId({pagination:{limit:e,offset:t},filter:{description:r,orderBy:o,title:i},userId:a}){let p={userId:a},c=[];return i&&c.push({title:{contains:i,mode:"insensitive"}}),r&&c.push({description:{contains:r,mode:"insensitive"}}),c.length>0&&(p.OR=c),await this.prisma.certification.findMany({where:p,include:{user:{omit:{passwordHash:!0}}},skip:t,take:e,orderBy:{updatedAt:o}})}async update({id:e,...t}){await this.prisma.certification.update({where:{id:e},data:t})}async deleteById(e){await this.prisma.certification.delete({where:{id:e}})}async count({filter:{description:e,title:t,userId:r}}){let o={};t&&(o.title={contains:t,mode:"insensitive"});let i=[];return e&&i.push({description:{contains:e,mode:"insensitive"}}),r&&i.push({userId:r}),i.length>0&&(o.OR=i),await this.prisma.certification.count({where:o})}};function Z(){return new rt(E)}var st=class{constructor(e){this.prisma=e}async create({authorId:e,...t}){return await this.prisma.news.create({data:{...t,author:{connect:{id:e}}}})}async find({pagination:{offset:e,limit:t},filter:{authorId:r,content:o,title:i,orderBy:a}}){let p={};r&&(p.authorId={contains:r,mode:"insensitive"});let c=[];return i&&c.push({title:{contains:i,mode:"insensitive"}}),o&&c.push({content:{contains:o,mode:"insensitive"}}),c.length>0&&(p.OR=c),await this.prisma.news.findMany({where:p,omit:{authorId:!0},include:{author:!0},orderBy:{updatedAt:a},skip:e,take:t})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},omit:{authorId:!0},include:{author:!0}})}async findByAuthorId({authorId:e,pagination:{offset:t,limit:r},filter:{orderBy:o="desc",content:i,title:a}}){let p={authorId:e},c=[];return a&&c.push({title:{contains:a,mode:"insensitive"}}),i&&c.push({content:{contains:i,mode:"insensitive"}}),c.length>0&&(p.OR=c),await this.prisma.news.findMany({omit:{authorId:!0},where:p,orderBy:{updatedAt:o},skip:t,take:r})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,imageUrl:e.imageUrl}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{authorId:e,content:t,title:r}}){let o={};e&&(o.authorId={contains:e,mode:"insensitive"});let i=[];return r&&i.push({title:{contains:r,mode:"insensitive"}}),t&&i.push({content:{contains:t,mode:"insensitive"}}),i.length>0&&(o.OR=i),await this.prisma.news.count({where:o})}};function M(){return new st(E)}var ot=class{constructor(e){this.prisma=e}async create(e){await this.prisma.pendency.create({data:e})}async find({filter:{description:e,orderBy:t,title:r,status:o,userId:i},pagination:{limit:a,offset:p}}){let c={userId:i,AND:{status:{equals:o}}};e&&(c.description={contains:e,mode:"insensitive"});let f=[];return r&&f.push({title:{contains:r,mode:"insensitive"}}),f.length>0&&(c.OR=f),await this.prisma.pendency.findMany({where:c,orderBy:{updatedAt:t},include:{user:{omit:{passwordHash:!0}}},skip:p,take:a})}async findById(e){return await this.prisma.pendency.findFirst({where:{id:e},include:{user:{omit:{passwordHash:!0}}}})}async findByUserId({filter:{description:e,orderBy:t,title:r,status:o},pagination:{limit:i,offset:a},userId:p}){let c={userId:p,AND:{status:{equals:o}}},f=[];return e&&f.push({description:{contains:e,mode:"insensitive"}}),r&&f.push({title:{contains:r,mode:"insensitive"}}),f.length>0&&(c.OR=f),await this.prisma.pendency.findMany({where:c,orderBy:{updatedAt:t},skip:a,take:i})}async update({id:e,...t}){await this.prisma.pendency.update({where:{id:e},data:t})}async deleteById(e){await this.prisma.pendency.delete({where:{id:e}})}async count({filter:{description:e,title:t,status:r,userId:o}}){let i={userId:o},a=[];return e&&a.push({description:{contains:e,mode:"insensitive"}}),t&&a.push({title:{contains:t,mode:"insensitive"}}),r&&a.push({status:{equals:r}}),a.length>0&&(i.OR=a),await this.prisma.pendency.count({where:i})}};function K(){return new ot(E)}var it=class{constructor(e){this.prisma=e}async create(e){await this.prisma.user.create({data:e})}async update(e){await this.prisma.user.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.user.delete({where:{id:e}})}async find(){return await this.prisma.user.findMany({omit:{passwordHash:!0}})}async findByEmail(e){return await this.prisma.user.findFirst({where:{emailAddress:e}})}async findById(e){return await this.prisma.user.findFirst({where:{id:e},omit:{passwordHash:!0}})}};function T(){return new it(E)}import{compare as _o,hash as Fo}from"bcryptjs";var nt=class{constructor(e,t){this.hashFn=e;this.compareFn=t}async hash(e){return await this.hashFn(e,6)}async compare({password:e,hashedPassword:t}){return await this.compareFn(e,t)}};function Qt(){return new nt(Fo,_o)}import qr from"jsonwebtoken";import U from"zod";var Oo=U.object({JWT_SECRET:U.string(),FIREBASE_BUCKET:U.string(),FIREBASE_CLIENT_EMAIL:U.string(),FIREBASE_PRIVATE_KEY:U.string(),FIREBASE_PROJECT_ID:U.string(),FIREBASE_TYPE:U.string(),FIREBASE_PRIVATE_KEY_ID:U.string(),FIREBASE_CLIENT_ID:U.string(),FIREBASE_AUTH_URI:U.string(),FIREBASE_TOKEN_URI:U.string(),FIREBASE_AUTH_PROVIDER_X509_CERT_URL:U.string(),FIREBASE_CLIENT_X509_CERT_URL:U.string()}),b=Oo.parse(process.env);var at=class{constructor(e,t){this.signFn=e;this.verifyFn=t}sign(e){try{return this.signFn(e,b.JWT_SECRET,{expiresIn:"3d",subject:e.id})}catch{return null}}verify(e){try{return this.verifyFn(e,b.JWT_SECRET)}catch{return null}}};function ct(){return new at(qr.sign,qr.verify)}function kr(){return{signUpController:new Ie(T(),Qt())}}function Mr(){return{signInController:new ge(T(),Qt(),ct())}}function Lr(){return{findAuthenticatedUserController:new tt(T())}}function Wr(){return{findAuthenticatedUserController:new fe(M())}}function Vr(){return{findAuthenticatedUserCertificationsController:new ye(Z())}}function zr(){return{findAuthenticatedUserPendenciesController:new Re(K())}}var mt=class{constructor(e){this.jwtService=e}authenticated(e,t,r){let o=e.headers.authorization;if(!(o||o?.startsWith("Bearer ")))return t.status(401).json({message:"Token inv\xE1lido."});let i=o.split(" ")[1];if(!i)return t.status(401).json({message:"Token n\xE3o fornecido."});try{let a=this.jwtService.verify(i);if(!a)return t.status(401).json({message:"Token inv\xE1lido."});e.user=a,r()}catch(a){if(console.log(a),a instanceof Error)return t.status(401).json({message:a.message})}}isAdmin(e,t,r){let o=e.headers.authorization;if(!(o||o?.startsWith("Bearer ")))return t.status(401).json({message:"Token inv\xE1lido."});let i=o.split(" ")[1];if(!i)return t.status(401).json({message:"Token n\xE3o fornecido."});try{let a=this.jwtService.verify(i);if(!a)return t.status(401).json({message:"Token inv\xE1lido."});if(a.role!=="ADMIN")return t.status(401).json({message:"\xC9 necess\xE1rio ter permiss\xF5es de administrador."});r()}catch(a){if(console.log(a),a instanceof Error)return t.status(401).json({message:a.message})}}};function j(){return{authMiddleware:new mt(ct())}}var L=Bo(),{authMiddleware:de}=j();L.post("/sign-up",async(s,e)=>{let{signUpController:t}=kr();await t.handle(s,e)});L.post("/sign-in",async(s,e)=>{let{signInController:t}=Mr();await t.handle(s,e)});L.get("/user",(s,e,t)=>{de.authenticated(s,e,t)},async(s,e)=>{let{findAuthenticatedUserController:t}=Lr();await t.handle(s,e)});L.get("/user/news",(s,e,t)=>{de.authenticated(s,e,t)},async(s,e)=>{let{findAuthenticatedUserController:t}=Wr();await t.handle(s,e)});L.get("/admin",(s,e,t)=>{de.isAdmin(s,e,t)},(s,e)=>{try{e.status(200).json({success:!0})}catch(t){t instanceof Error&&e.status(500).json({message:t.message})}});L.get("/certifications",(s,e,t)=>{de.authenticated(s,e,t)},async(s,e)=>{let{findAuthenticatedUserCertificationsController:t}=Vr();await t.handle(s,e)});L.get("/pendencies",(s,e,t)=>{de.authenticated(s,e,t)},async(s,e)=>{let{findAuthenticatedUserPendenciesController:t}=zr();await t.handle(s,e)});import{Router as Wo}from"express";import{getStorage as qo}from"firebase-admin/storage";import{config as Do}from"dotenv";import Hr from"firebase-admin";Do();var Gt=Hr.initializeApp({credential:Hr.credential.cert({clientEmail:b.FIREBASE_CLIENT_EMAIL,privateKey:b.FIREBASE_PRIVATE_KEY,projectId:b.FIREBASE_PROJECT_ID,type:b.FIREBASE_TYPE,privateKeyId:b.FIREBASE_PRIVATE_KEY_ID,clientId:b.FIREBASE_CLIENT_ID,authUri:b.FIREBASE_AUTH_URI,tokenUri:b.FIREBASE_TOKEN_URI,authProviderX509CertUrl:b.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:b.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:b.FIREBASE_BUCKET});Gt.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var ko=qo(Gt),Zr=ko.bucket(b.FIREBASE_BUCKET);import{randomUUID as Mo}from"node:crypto";var Lo=/https:\/\/storage\.googleapis\.com\/[^/]+\/(.+)$/,pt=class{constructor(e){this.bucket=e}async uploadFile({file:e,folder:t,id:r}){let o=`${Mo()}-${e?.originalname}`,i=this.bucket.file(`${t}/${r}/${o}`);return await new Promise((a,p)=>{let c=i.createWriteStream({metadata:{contentType:e?.mimetype}});c.on("error",f=>{console.log(f),p(f)}),c.on("finish",async()=>{try{await i.makePublic();let f=`https://storage.googleapis.com/${this.bucket.name}/${i.name}`;a(f)}catch(f){console.error(f),p(f)}}),c.end(e.buffer)})}async updateFile({file:e,id:t,fileUrl:r,folder:o}){try{let i=this.getPath(r);if(!i)throw new Error("Arquivo n\xE3o encontrado.");let[a,p]=await Promise.all([this.bucket.file(i).delete(),this.uploadFile({file:e,id:t,folder:o})]);return p}catch(i){throw console.error(i),new Error("Erro ao atualizar o arquivo.")}}async deleteFile({fileUrl:e}){let t=this.getPath(e);if(!t)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(t).delete()}catch(r){throw console.error(r),new Error("Erro ao deletar o arquivo.")}}getPath(e){let t=e.match(Lo);return t?t[1]:null}};function A(){return new pt(Zr)}function Kr(){return{registerCertificationController:new Ae(T(),Z(),A())}}function Qr(){return{findCertificationsController:new je(Z())}}function Gr(){return{findCertificationByIdController:new Te(Z())}}function Jr(){return{updateCertificationController:new Se(Z(),A())}}function $r(){return{deleteCertificationController:new be(Z(),A())}}import Yr from"multer";var P=Yr({storage:Yr.memoryStorage()});var ee=Wo(),{authMiddleware:ue}=j();ee.post("/:user_id",(s,e,t)=>{ue.isAdmin(s,e,t)},P.single("certification"),async(s,e)=>{let{registerCertificationController:t}=Kr();await t.handle(s,e)});ee.get("/",(s,e,t)=>{ue.isAdmin(s,e,t)},async(s,e)=>{let{findCertificationsController:t}=Qr();await t.handle(s,e)});ee.get("/:certification_id",(s,e,t)=>{ue.isAdmin(s,e,t)},async(s,e)=>{let{findCertificationByIdController:t}=Gr();await t.handle(s,e)});ee.put("/:certification_id",(s,e,t)=>{ue.isAdmin(s,e,t)},P.single("certification"),async(s,e)=>{let{updateCertificationController:t}=Jr();await t.handle(s,e)});ee.delete("/:certification_id",(s,e,t)=>{ue.isAdmin(s,e,t)},async(s,e)=>{let{deleteCertificationController:t}=$r();await t.handle(s,e)});import{Router as Vo}from"express";var Jt=Vo();Jt.get("/",(s,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as $o}from"express";import{extendZodWithOpenApi as zo}from"@asteasolutions/zod-to-openapi";import dt from"zod";zo(dt);var Ho=dt.object({id:dt.string()}),ut=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Ho.safeParse(e.params);if(!r.success)return t.status(400).json({errors:dt.prettifyError(r.error)});let{id:o}=r.data,i=e.user.id,a=await this.newsRepository.findById(o);if(!a)return t.status(404).json({message:"Not\xEDcia n\xE3o encontrada."});if(a.author.id!==i)return t.status(401).json({message:"Sem permiss\xE3o."});await Promise.all([this.newsRepository.delete(o),this.firebaseStorageService.deleteFile({fileUrl:a.imageUrl})]),t.status(200).json({message:"Not\xEDcia deletada com sucesso."})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Zo}from"@asteasolutions/zod-to-openapi";import te from"zod";var Ko=5,Xr=1024,Qo=Xr*Xr,Go=Ko*Qo;Zo(te);var Jo=te.object({id:te.string(),title:te.string().min(1),content:te.string().min(1),image:te.any().optional().refine(s=>!s||typeof s=="object"&&typeof s.mimetype=="string"&&s.mimetype.startsWith("image/")&&typeof s.size=="number"&&s.size<=Go,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),lt=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Jo.safeParse({id:e.params.id,title:e.body.title,content:e.body.content,image:e.file});if(!r.success)return t.status(400).json({errors:te.prettifyError(r.error)});let{id:o,title:i,content:a,image:p}=r.data,c=await this.newsRepository.findById(o);if(!c)return t.status(404).json({message:"Not\xEDcia n\xE3o encontrada."});let f=e.user.id;if(c.author.id!==f)return t.status(401).json({message:"Sem permiss\xE3o."});let h=c.imageUrl||"";p&&c.imageUrl&&(h=await this.firebaseStorageService.updateFile({file:p,folder:w.NEWS,id:o,fileUrl:c.imageUrl}));let I=await this.newsRepository.update({id:o,title:i,content:a,imageUrl:h});t.status(200).json(I)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};function es(){return{createNewsController:new Ue(M(),A())}}function ts(){return{findAllNewsController:new Fe(M())}}function rs(){return{findNewsByIdController:new _e(M())}}function ss(){return{findNewsByAuthorIdController:new Ne(M())}}function os(){return{updateNewsController:new lt(M(),A())}}function is(){return{deleteNewsController:new ut(M(),A())}}var Q=$o(),{authMiddleware:$t}=j();Q.post("/",(s,e,t)=>{$t.authenticated(s,e,t)},P.single("image"),async(s,e)=>{let{createNewsController:t}=es();await t.handle(s,e)});Q.get("/",async(s,e)=>{let{findAllNewsController:t}=ts();await t.handle(s,e)});Q.get("/:id",async(s,e)=>{let{findNewsByIdController:t}=rs();await t.handle(s,e)});Q.get("/author/:authorId",async(s,e)=>{let{findNewsByAuthorIdController:t}=ss();await t.handle(s,e)});Q.put("/:id",(s,e,t)=>{$t.authenticated(s,e,t)},P.single("image"),async(s,e)=>{let{updateNewsController:t}=os();await t.handle(s,e)});Q.delete("/:id",(s,e,t)=>{$t.authenticated(s,e,t)},async(s,e)=>{let{deleteNewsController:t}=is();await t.handle(s,e)});import{Router as Yo}from"express";function ns(){return{createPendencyController:new Oe(T(),K(),A())}}function as(){return{findPendenciesController:new ke(K())}}function cs(){return{findPendencyByIdController:new Le(K())}}function ms(){return{updatePendencyController:new We(K(),A())}}function ps(){return{deletePendencyController:new qe(K(),A())}}var re=Yo(),{authMiddleware:le}=j();re.post("/:user_id",(s,e,t)=>{le.isAdmin(s,e,t)},P.single("document"),async(s,e)=>{let{createPendencyController:t}=ns();await t.handle(s,e)});re.get("/",(s,e,t)=>{le.isAdmin(s,e,t)},async(s,e)=>{let{findPendenciesController:t}=as();await t.handle(s,e)});re.get("/:pendency_id",(s,e,t)=>{le.isAdmin(s,e,t)},async(s,e)=>{let{findPendencyByIdController:t}=cs();await t.handle(s,e)});re.put("/:pendency_id",(s,e,t)=>{le.isAdmin(s,e,t)},P.single("document"),async(s,e)=>{let{updatePendencyController:t}=ms();await t.handle(s,e)});re.delete("/:pendency_id",(s,e,t)=>{le.isAdmin(s,e,t)},async(s,e)=>{let{deletePendencyController:t}=ps();await t.handle(s,e)});import{Router as ai}from"express";import{extendZodWithOpenApi as Xo}from"@asteasolutions/zod-to-openapi";import G from"zod";Xo(G);var ei=G.object({teamId:G.uuid(),member:G.object({userId:G.uuid(),role:G.string(),description:G.string()})}),yt=class{constructor(e,t){this.teamMemberRepository=e;this.userRepository=t}async handle(e,t){try{let r=ei.safeParse({...e.body,teamId:e.params.teamId});if(!r.success)return t.status(400).json({errors:G.prettifyError(r.error)});let{teamId:o,member:{userId:i,...a}}=r.data;if(!await this.userRepository.findById(i))return t.status(404).json({message:"O usu\xE1rio n\xE3o existe."});let c=await this.teamMemberRepository.create({...a,userId:i,teamId:o});t.status(201).json(c)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as ti}from"@asteasolutions/zod-to-openapi";import{z as ft}from"zod";ti(ft);var ri=ft.object({id:ft.uuid()}),Rt=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=ri.safeParse(e.params);if(!r.success)return t.status(400).json({errors:ft.prettifyError(r.error)});let{id:o}=r.data;await this.teamMemberRepository.delete(o),t.status(200).json({message:"Membro removido com sucesso"})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as si}from"@asteasolutions/zod-to-openapi";import{z as gt}from"zod";si(gt);var oi=gt.object({id:gt.uuid()}),ht=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=oi.safeParse(e.params);if(!r.success)return t.status(400).json({errors:gt.prettifyError(r.error)});let{id:o}=r.data,i=await this.teamMemberRepository.findById(o);if(!i)return t.status(404).json({message:"Membro n\xE3o encontrado."});t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{extendZodWithOpenApi as ii}from"@asteasolutions/zod-to-openapi";import{z as se}from"zod";ii(se);var ni=se.object({id:se.uuid(),role:se.string(),userId:se.string(),description:se.string()}),It=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=ni.safeParse(e.body);if(!r.success)return t.status(400).json({errors:se.prettifyError(r.error)});let o=r.data,i=await this.teamMemberRepository.update(o);t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var W=class{constructor(e){this.prisma=e}async findById(e){return await this.prisma.teamMember.findFirst({where:{id:e}})}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{teamId:e}})}async create({description:e,role:t,teamId:r,userId:o}){return await this.prisma.teamMember.create({data:{role:t,description:e,teamId:r,userId:o}})}async update({id:e,...t}){return await this.prisma.teamMember.update({where:{id:e},data:t})}async updateMany({members:e,teamId:t}){await Promise.all(e.map(async({user:r,role:o})=>{let i=await this.prisma.teamMember.findFirst({where:{teamId:t,userId:r.id},include:{user:!0}});i?await this.prisma.teamMember.update({where:{id:i.id},data:{role:o}}):await this.prisma.teamMember.create({data:{teamId:t,userId:r.id,role:o}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async t=>{await this.prisma.teamMember.delete({where:{id:t}})}))}};function ds(){return{createTeamMemberController:new yt(new W(E),T())}}function us(){return{findTeamMemberController:new ht(new W(E))}}function ls(){return{updateTeamMemberController:new It(new W(E))}}function ys(){return{deleteTeamMemberController:new Rt(new W(E))}}var ne=ai(),{authMiddleware:Et}=j();ne.post("/:teamId/member",(s,e,t)=>{Et.isAdmin(s,e,t)},async(s,e)=>{let{createTeamMemberController:t}=ds();await t.handle(s,e)});ne.get("/member/:id",(s,e,t)=>{Et.isAdmin(s,e,t)},async(s,e)=>{let{findTeamMemberController:t}=us();await t.handle(s,e)});ne.put("/member/:id",(s,e,t)=>{Et.isAdmin(s,e,t)},async(s,e)=>{let{updateTeamMemberController:t}=ls();await t.handle(s,e)});ne.delete("/member/:id",(s,e,t)=>{Et.isAdmin(s,e,t)},async(s,e)=>{let{deleteTeamMemberController:t}=ys();await t.handle(s,e)});import{Router as pi}from"express";import{extendZodWithOpenApi as ci}from"@asteasolutions/zod-to-openapi";import{z as bt}from"zod";ci(bt);var mi=bt.object({id:bt.uuid()}),wt=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=mi.safeParse(e.params);if(!r.success)return t.status(400).json({errors:bt.prettifyError(r.error)});let{id:o}=r.data;await this.teamRepository.delete(o),t.status(200).json({message:"Equipe deletada com sucesso"})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var Tt=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=await this.teamRepository.findAll();return t.status(200).json(r)}catch(r){if(console.error(r),r instanceof Error)return t.status(500).json({message:r.message})}}};var jt=class{constructor(e){this.prisma=e}async create({members:e,name:t,type:r}){return await this.prisma.team.create({data:{name:t,type:r,members:{create:e.map(({role:o,user:i})=>({role:o,user:{connect:{id:i.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:t}}){let r={type:e};return t&&(r.name={contains:t,mode:"insensitive"}),await this.prisma.team.findMany({where:r,include:{members:{include:{user:!0}}}})}async update({id:e,name:t}){return await this.prisma.team.update({where:{id:e},data:{name:t}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function oe(){return new jt(E)}function fs(){return new W(E)}function Rs(){return{findTeamsController:new Tt(oe())}}function gs(){return{findTeamByIdController:new Ze(oe())}}function hs(){return{findTeamByTypeController:new Ke(oe())}}function Is(){return{createTeamController:new ze(oe())}}function Es(){return{updateTeamController:new Qe(oe(),fs())}}function bs(){return{deleteTeamController:new wt(oe())}}var J=pi(),{authMiddleware:Yt}=j();J.get("/",async(s,e)=>{let{findTeamsController:t}=Rs();await t.handle(s,e)});J.get("/id/:id",async(s,e)=>{let{findTeamByIdController:t}=gs();await t.handle(s,e)});J.get("/type/:type",async(s,e)=>{let{findTeamByTypeController:t}=hs();await t.handle(s,e)});J.post("/",(s,e,t)=>{Yt.isAdmin(s,e,t)},async(s,e)=>{let{createTeamController:t}=Is();await t.handle(s,e)});J.put("/:id",(s,e,t)=>{Yt.isAdmin(s,e,t)},async(s,e)=>{let{updateTeamController:t}=Es();await t.handle(s,e)});J.delete("/:id",(s,e,t)=>{Yt.isAdmin(s,e,t)},async(s,e)=>{let{deleteTeamController:t}=bs();await t.handle(s,e)});import{Router as di}from"express";var At=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=await this.userRepository.find();t.status(200).json(r)}catch(r){console.log(r),r instanceof Error&&t.status(500).json({message:"Erro ao buscar usu\xE1rios"})}}};function ws(){return{updateUserController:new Xe(T(),A())}}function Ts(){return{deleteUserController:new Ge(T())}}function js(){return{findUsersController:new At(T())}}function As(){return{findUserController:new $e(T())}}var ae=di(),{authMiddleware:Cs}=j();ae.get("/:id",async(s,e)=>{let{findUserController:t}=As();await t.handle(s,e)});ae.put("/",(s,e,t)=>{Cs.authenticated(s,e,t)},P.single("avatarImage"),async(s,e)=>{let{updateUserController:t}=ws();await t.handle(s,e)});ae.delete("/:id",(s,e,t)=>{Cs.authenticated(s,e,t)},async(s,e)=>{let{deleteUserController:t}=Ts();await t.handle(s,e)});ae.get("/",async(s,e)=>{let{findUsersController:t}=js();await t.handle(s,e)});var C=Xt(),yi={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};C.use(li(yi));C.use(Xt.json());C.use(Xt.urlencoded({extended:!1}));C.use("/docs",ui({content:Dr,theme:"kepler"}));C.use("/",Jt);C.use("/auth",L);C.use("/user",ae);C.use("/news",Q);C.use("/team",J);C.use("/team",ne);C.use("/certification",ee);C.use("/pendency",re);var Ri=fi.createServer(C),Ss=4e3;Ri.listen(Ss,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${Ss}.`)});
