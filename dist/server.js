import gs from"node:http";import{apiReference as fs}from"@scalar/express-api-reference";import ys from"cors";import vt from"express";import{OpenAPIRegistry as No,OpenApiGeneratorV3 as xo}from"@asteasolutions/zod-to-openapi";import{$Enums as Xr}from"@prisma/client";import a from"zod";import{extendZodWithOpenApi as zr}from"@asteasolutions/zod-to-openapi";import v from"zod";var Zr=1,Hr=6;zr(v);var nt=v.object({page:v.coerce.number().min(1).default(Zr),limit:v.coerce.number().min(1).default(Hr),title:v.string(),description:v.string(),orderBy:v.union([v.enum(["asc","desc"]),v.literal("")]).optional().transform(o=>o===""?void 0:o)}),ie=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let r=nt.safeParse({page:e.query.page,limit:e.query.limit,title:e.query.title,description:e.query.description,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:v.prettifyError(r.error)});let{title:s,description:i,limit:n,orderBy:d="desc",page:u}=r.data,y=u*n-n,g=e.user.id,[j,F]=await Promise.all([this.certificationRepository.findByUserId({userId:g,pagination:{offset:y,limit:n},filter:{title:s,description:i,orderBy:d}}),this.certificationRepository.count({filter:{title:s,description:i,userId:g}})]),z=Math.max(Math.ceil(F/n),1);return t.status(200).json({page:u,totalPages:z,offset:y,limit:n,certifications:j})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Kr}from"@asteasolutions/zod-to-openapi";import N from"zod";var Qr=1,Gr=7;Kr(N);var ct=N.object({page:N.coerce.number().min(1).default(Qr),limit:N.coerce.number().min(1).default(Gr),title:N.string().optional(),content:N.string().optional(),orderBy:N.union([N.enum(["asc","desc"]),N.literal("")]).optional().transform(o=>o===""?void 0:o)}),ae=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=ct.safeParse({page:e.query.page,limit:e.query.limit,title:e.query.title,content:e.query.content,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:N.prettifyError(r.error)});let{page:s,limit:i,content:n,orderBy:d,title:u}=r.data,y=i*s-i,g=e.user.id,[j,F]=await Promise.all([this.newsRepository.findByAuthorId({authorId:g,pagination:{offset:y,limit:i},filter:{orderBy:d,title:u,content:n}}),this.newsRepository.count({filter:{authorId:g,content:n,title:u}})]),z=Math.ceil(F/i);t.status(200).json({page:s,totalPages:z,offset:y,limit:i,news:j})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Jr}from"@asteasolutions/zod-to-openapi";import te from"zod";Jr(te);var mt=te.object({password:te.string(),email:te.email()}),ne=class{constructor(e,t,r){this.userRepository=e;this.bcrypt=t;this.jwtService=r}async handle(e,t){try{let r=mt.safeParse(e.body);if(!r.success)return t.status(400).json({errors:te.prettifyError(r.error)});let{email:s,password:i}=r.data,n=await this.userRepository.findByEmail(s);if(!n)return t.status(401).json({message:"Usu\xE1rio n\xE3o existe."});if(!await this.bcrypt.compare({password:i,hashedPassword:n.passwordHash}))return t.status(401).json({message:"Senha inv\xE1lida."});let{id:u,role:y}=n,g=this.jwtService.sign({id:u,role:y,email:s});return t.status(200).json({token:g})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as $r}from"@asteasolutions/zod-to-openapi";import Z from"zod";var ce=8;$r(Z);var pt=Z.object({name:Z.string("Nome \xE9 obrigat\xF3rio.").min(1,"Nome \xE9 obrigat\xF3rio."),email:Z.email("E-mail inv\xE1lido.").min(1,"E-mail \xE9 obrigat\xF3rio."),password:Z.string("A senha \xE9 obrigat\xF3ria.").min(ce,`A senha deve ter pelo menos ${ce} caracteres.`),confirmPassword:Z.string("A senha \xE9 obrigat\xF3ria.").min(ce,`A senha deve ter pelo menos ${ce} caracteres.`)}).refine(o=>o.password===o.confirmPassword,{message:"As senhas n\xE3o coincidem.",path:["confirmPassword"]}),me=class{constructor(e,t){this.userRepository=e;this.bcrypt=t}async handle(e,t){try{let r=pt.safeParse(e.body);if(!r.success)return t.status(400).json({errors:Z.prettifyError(r.error)});let{email:s,name:i,password:n}=r.data;if(await this.userRepository.findByEmail(s))return t.status(409).json({message:"Usu\xE1rio j\xE1 existe."});let u=await this.bcrypt.hash(n);return await this.userRepository.create({name:i,emailAddress:s,passwordHash:u}),t.status(201).json()}catch(r){if(r instanceof Error)return t.status(500).json({message:r.message})}}};var Nt={method:"post",path:"/auth/sign-up",tags:["Authentication"],summary:"Create a new user",request:{body:{content:{"application/json":{schema:pt}}}},responses:{201:{description:"User created successfully",summary:"User Registration Successful",content:{"application/json":{schema:a.object({message:a.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:a.object({errors:a.record(a.string(),a.string())})}}},409:{description:"User already exists with this email",summary:"User Already Exists",content:{"application/json":{schema:a.object({message:a.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:a.object({message:a.string()})}}}}},xt={method:"post",path:"/auth/sign-in",tags:["Authentication"],summary:"Sign in",request:{body:{content:{"application/json":{schema:mt}}}},responses:{200:{description:"Authentication successful, JWT token returned",summary:"Login Successful",content:{"application/json":{schema:a.object({token:a.string()})}}},400:{description:"Invalid credentials or input data",summary:"Validation Error",content:{"application/json":{schema:a.object({errors:a.record(a.string(),a.string())})}}},401:{description:"Invalid email or password",summary:"Authentication Failed",content:{"application/json":{schema:a.object({message:a.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:a.object({message:a.string()})}}}}},_t={method:"get",path:"/auth/user",tags:["Authentication"],summary:"Search for authenticated user",security:[{bearerAuth:[]}],responses:{200:{description:"Authenticated user information retrieved successfully",summary:"User Information Retrieved",content:{"application/json":{schema:a.object({name:a.string(),id:a.string(),avatarUrl:a.string().nullable(),createdAt:a.date(),updatedAt:a.date(),emailAddress:a.string(),orcid:a.string().nullable(),phone:a.string().nullable(),lattesUrl:a.string().nullable(),role:a.enum(Xr.UserRole)}).nullable()}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:a.object({errors:a.record(a.string(),a.string())})}}},404:{description:"User not found or not authenticated",summary:"User Not Found",content:{"application/json":{schema:a.object({message:a.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:a.object({message:a.string()})}}}}},Ot={method:"get",path:"/auth/user/news",tags:["Authentication"],summary:"List authenticated user news",security:[{bearerAuth:[]}],request:{query:ct},responses:{200:{description:"Paginated list of authenticated user news retrieved successfully",summary:"User News Retrieved",content:{"application/json":{schema:a.object({page:a.number(),totalPages:a.number(),offset:a.number(),limit:a.number(),news:a.object({content:a.string(),id:a.string(),title:a.string(),createdAt:a.date(),updatedAt:a.date(),imageUrl:a.string().nullable()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:a.object({errors:a.record(a.string(),a.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:a.object({message:a.string()})}}}}},Ft={method:"get",path:"/auth/admin",tags:["Authentication"],summary:"Verify admin access",security:[{bearerAuth:[]}],responses:{200:{description:"Admin access verified successfully",summary:"Admin Access Granted",content:{"application/json":{schema:a.object({success:a.boolean()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:a.object({message:a.string()})}}}}},Bt={method:"get",path:"/auth/certifications",tags:["Authentication"],summary:"List all authenticated user's certifications",security:[{bearerAuth:[]}],request:{query:nt},responses:{200:{description:"Paginated list of authenticated user certifications retrieved successfully",summary:"User Certifications Retrieved",content:{"application/json":{schema:a.object({page:a.number(),totalPages:a.number(),offset:a.number(),limit:a.number(),certifications:a.object({description:a.string(),id:a.string(),title:a.string(),certificationUrl:a.string(),createdAt:a.date(),updatedAt:a.date(),userId:a.string()})})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:a.object({errors:a.record(a.string(),a.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:a.object({message:a.string()})}}}}};import{$Enums as ao}from"@prisma/client";import c from"zod";import{extendZodWithOpenApi as Yr}from"@asteasolutions/zod-to-openapi";import pe from"zod";Yr(pe);var ut=pe.object({id:pe.string()}),ue=class{constructor(e,t){this.certificationRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=ut.safeParse({id:e.params.certification_id});if(!r.success)return t.status(400).json({message:pe.prettifyError(r.error)});let s=await this.certificationRepository.findById(r.data.id);return s?(await Promise.all([this.certificationRepository.deleteById(s.id),this.firebaseStorageService.deleteFile({fileUrl:s.certificationUrl})]),t.status(204).json()):t.status(404).json({message:"A certifica\xE7\xE3o n\xE3o existe."})}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as eo}from"@asteasolutions/zod-to-openapi";import de from"zod";eo(de);var dt=de.object({certificationId:de.uuid()}),le=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let r=dt.safeParse({certificationId:e.params.certification_id});if(!r.success)return t.status(400).json({message:de.prettifyError(r.error)});let s=await this.certificationRepository.findById(r.data.certificationId);return s?t.status(200).json(s):t.status(404).json({message:"Certificado n\xE3o encontrado."})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as to}from"@asteasolutions/zod-to-openapi";import x from"zod";var ro=1,oo=6;to(x);var lt=x.object({page:x.coerce.number().min(1).default(ro),limit:x.coerce.number().min(1).default(oo),title:x.string().optional(),description:x.string().optional(),orderBy:x.union([x.enum(["asc","desc"]),x.literal("")]).optional().transform(o=>o===""?void 0:o)}),fe=class{constructor(e){this.certificationRepository=e}async handle(e,t){try{let r=lt.safeParse({page:e.query.page,limit:e.query.limit,title:e.query.title,description:e.query.description,authorId:e.query.author_id,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:x.prettifyError(r.error)});let{description:s,limit:i,orderBy:n="desc",page:d,title:u}=r.data,y=d*i-i,[g,j]=await Promise.all([this.certificationRepository.find({pagination:{offset:y,limit:i},filter:{title:u,description:s,orderBy:n}}),this.certificationRepository.count({filter:{title:u,description:s}})]),F=Math.max(Math.ceil(j/i),1);return t.status(200).json({page:d,totalPages:F,offset:y,limit:i,certifications:g})}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as so}from"@asteasolutions/zod-to-openapi";import H from"zod";var C={NEWS:"images/news",USER:"images/user",CERTIFICATION:"documents/certifications"};so(H);var Re=H.object({userId:H.uuid(),title:H.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:H.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:H.any().refine(o=>o&&typeof o=="object"&&o.size>0,"Arquivo do certificado \xE9 obrigat\xF3rio")}),ye=class{constructor(e,t,r){this.userRepository=e;this.certificationRepository=t;this.firebaseStorageService=r}async handle(e,t){try{let r=Re.safeParse({...e.body,userId:e.params.user_id,certification:e.file});if(!r.success)return t.status(400).json({errors:H.prettifyError(r.error)});let{userId:s,title:i,description:n,certification:d}=r.data;if(!await this.userRepository.findById(s))return t.status(400).json({message:"O usu\xE1rio n\xE3o existe."});let y=await this.firebaseStorageService.uploadFile({file:d,id:s,folder:C.CERTIFICATION});return await this.certificationRepository.register({userId:s,title:i,description:n,certificationUrl:y}),t.status(201).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as io}from"@asteasolutions/zod-to-openapi";import K from"zod";io(K);var he=K.object({id:K.uuid(),title:K.string().min(1,"T\xEDtulo \xE9 obrigat\xF3rio."),description:K.string().min(1,"Descri\xE7\xE3o \xE9 obrigat\xF3ria."),certification:K.any().refine(o=>o==null||typeof o=="object"&&typeof o.size=="number"&&(o.size===0||o.size>0),"Arquivo do certificado \xE9 inv\xE1lido").optional()}),ge=class{constructor(e,t){this.certificationRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=he.safeParse({...e.body,id:e.params.certification_id,certification:e.file});if(!r.success)return t.status(400).json({errors:K.prettifyError(r.error)});let{certification:s,id:i,...n}=r.data,d=await this.certificationRepository.findById(i);if(!d)return t.status(400).json({message:"A certifica\xE7\xE3o n\xE3o existe"});let u=d.certificationUrl;return s&&s.size>0&&(u=await this.firebaseStorageService.updateFile({file:s,id:d.userId,folder:C.CERTIFICATION,fileUrl:d.certificationUrl})),await this.certificationRepository.update({...n,id:i,certificationUrl:u}),t.status(204).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};var Dt={method:"post",path:"/certifications/{user_id}",tags:["Certifications"],summary:"Register certification for user",security:[{bearerAuth:[]}],request:{params:Re.pick({userId:!0}).transform(()=>({user_id:""})),body:{content:{"multipart/form-data":{schema:Re.omit({userId:!0})}}}},responses:{201:{description:"Certification registered successfully for the user",summary:"Certification Registered",content:{"application/json":{schema:c.object({message:c.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},Pt={method:"get",path:"/certifications",tags:["Certifications"],summary:"List certifications",security:[{bearerAuth:[]}],request:{query:lt},responses:{200:{description:"Paginated list of certifications with user information retrieved successfully",summary:"Certifications Retrieved",content:{"application/json":{schema:c.object({page:c.number(),totalPages:c.number(),offset:c.number(),limit:c.number(),certifications:c.array(c.object({description:c.string(),userId:c.string(),title:c.string(),id:c.string(),createdAt:c.date(),updatedAt:c.date(),certificationUrl:c.url(),user:c.object({id:c.uuid(),name:c.string(),createdAt:c.date(),updatedAt:c.date(),avatarUrl:c.string().nullable(),emailAddress:c.email(),orcid:c.string().nullable(),phone:c.string().nullable(),lattesUrl:c.url().nullable(),role:c.enum(ao.UserRole)})}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},qt={method:"get",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Find certification by ID",security:[{bearerAuth:[]}],request:{params:dt},responses:{200:{description:"Certification details retrieved successfully",summary:"Certification Retrieved",content:{"application/json":{schema:c.object({description:c.string(),userId:c.string(),title:c.string(),id:c.string(),createdAt:c.date(),updatedAt:c.date(),certificationUrl:c.url()}).nullable()}}},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},Mt={method:"put",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Update certification",security:[{bearerAuth:[]}],request:{params:he.pick({id:!0}).transform(()=>({certification_id:""})),body:{content:{"multipart/form-data":{schema:he.omit({id:!0})}}}},responses:{204:{description:"Certification updated successfully",summary:"Certification Updated"},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}},kt={method:"delete",path:"/certifications/{certification_id}",tags:["Certifications"],summary:"Delete certification",security:[{bearerAuth:[]}],request:{params:ut},responses:{204:{description:"Certification deleted successfully",summary:"Certification Deleted"},400:{description:"Invalid certification ID format",summary:"Validation Error",content:{"application/json":{schema:c.object({errors:c.record(c.string(),c.string())})}}},404:{description:"Certification not found with the provided ID",summary:"Certification Not Found",content:{"application/json":{schema:c.object({message:c.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:c.object({message:c.string()})}}}}};import m from"zod";import{extendZodWithOpenApi as no}from"@asteasolutions/zod-to-openapi";import X from"zod";var co=5,Lt=1024,mo=Lt*Lt,po=co*mo;no(X);var ft=X.object({title:X.string().min(1),content:X.string().min(1),image:X.any().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=po,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),Ie=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=ft.safeParse({...e.body,image:e.file});if(!r.success)return t.status(400).json({errors:X.prettifyError(r.error)});let{title:s,content:i,image:n}=r.data,d=e.user.id,u=await this.firebaseStorageService.uploadFile({file:n,folder:C.NEWS,id:d});await this.newsRepository.create({title:s,content:i,authorId:d,imageUrl:u}),t.status(201).json()}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as uo}from"@asteasolutions/zod-to-openapi";import A from"zod";var lo=1,fo=7;uo(A);var we=A.object({page:A.coerce.number().min(1).default(lo),limit:A.coerce.number().min(1).default(fo),authorId:A.string(),title:A.string().optional(),content:A.string().optional(),orderBy:A.union([A.enum(["asc","desc"]),A.literal("")]).optional().transform(o=>o===""?void 0:o)}),Ee=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=we.safeParse({page:e.query.page,limit:e.query.limit,author_id:e.params.author_id,title:e.query.title,content:e.query.content,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:A.prettifyError(r.error)});let{page:s,limit:i,authorId:n,content:d,orderBy:u,title:y}=r.data,g=i*s-i,[j,F]=await Promise.all([this.newsRepository.findByAuthorId({authorId:n,pagination:{offset:g,limit:i},filter:{orderBy:u,title:y,content:d}}),this.newsRepository.count({filter:{authorId:n,content:d,title:y}})]),z=Math.max(Math.ceil(F/i),1);t.status(200).json({page:s,totalPages:z,offset:g,limit:i,news:j})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as yo}from"@asteasolutions/zod-to-openapi";import be from"zod";yo(be);var yt=be.object({id:be.string()}),Te=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=yt.safeParse(e.params);if(!r.success)return t.status(400).json({errors:be.prettifyError(r.error)});let{id:s}=r.data,i=await this.newsRepository.findById(s);t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Ro}from"@asteasolutions/zod-to-openapi";import U from"zod";var go=1,ho=9;Ro(U);var Rt=U.object({page:U.coerce.number().min(1).default(go),limit:U.coerce.number().min(1).default(ho),title:U.string().optional(),content:U.string().optional(),authorId:U.string().optional(),orderBy:U.union([U.enum(["asc","desc"]),U.literal("")]).optional().transform(o=>o===""?void 0:o)}),je=class{constructor(e){this.newsRepository=e}async handle(e,t){try{let r=Rt.safeParse({page:e.query.page,limit:e.query.limit,title:e.query.title,content:e.query.content,authorId:e.query.author_id,orderBy:e.query.order_by});if(!r.success)return t.status(400).json({errors:U.prettifyError(r.error)});let{page:s,limit:i,authorId:n,content:d,orderBy:u,title:y}=r.data,g=i*s-i,[j,F]=await Promise.all([this.newsRepository.find({pagination:{offset:g,limit:i},filter:{authorId:n,content:d,title:y,orderBy:u}}),this.newsRepository.count({filter:{title:y,content:d,authorId:n}})]),z=Math.max(Math.ceil(F/i),1);t.status(200).json({page:s,totalPages:z,offset:g,limit:i,news:j})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var Vt={method:"post",path:"/news",tags:["News"],summary:"Create news",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:ft}}}},responses:{201:{description:"News article created successfully",summary:"News Created",content:{"application/json":{schema:m.object({message:m.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}},Wt={method:"get",path:"/news",tags:["News"],summary:"List news",request:{query:Rt},responses:{200:{description:"Paginated list of news articles retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:m.object({page:m.number(),totalPages:m.number(),offset:m.number(),limit:m.number(),news:m.array(m.object({title:m.string(),content:m.string(),id:m.string(),createdAt:m.date(),updatedAt:m.date(),imageUrl:m.string().nullable()}))})}}},400:{description:"Invalid query parameters provided",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}},zt={method:"get",path:"/news/{id}",tags:["News"],summary:"Find news by ID",request:{params:yt},responses:{200:{description:"News article details retrieved successfully",summary:"News Retrieved",content:{"application/json":{schema:m.object({page:m.number(),totalPages:m.number(),offset:m.number(),limit:m.number(),news:m.object({title:m.string(),content:m.string(),id:m.string(),createdAt:m.date(),updatedAt:m.date(),imageUrl:m.string().nullable()})})}}},400:{description:"Invalid news ID format",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},404:{description:"News article not found with the provided ID",summary:"News Not Found",content:{"application/json":{schema:m.object({message:m.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}},Zt={method:"get",path:"/news/author/{author_id}",tags:["News"],summary:"List news by author",request:{params:we.pick({authorId:!0}).transform(()=>({author_id:""})),query:we.omit({authorId:!0})},responses:{200:{description:"Paginated list of news articles by author retrieved successfully",summary:"Author News Retrieved",content:{"application/json":{schema:m.object({page:m.number(),totalPages:m.number(),offset:m.number(),limit:m.number(),news:m.array(m.object({title:m.string(),content:m.string(),id:m.string(),createdAt:m.date(),updatedAt:m.date(),imageUrl:m.string().nullable()}))})}}},400:{description:"Invalid author ID or query parameters",summary:"Validation Error",content:{"application/json":{schema:m.object({errors:m.record(m.string(),m.string())})}}},404:{description:"Author not found with the provided ID",summary:"Author Not Found",content:{"application/json":{schema:m.object({message:m.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:m.object({message:m.string()})}}}}};import p from"zod";import{extendZodWithOpenApi as Io}from"@asteasolutions/zod-to-openapi";import _ from"zod";Io(_);var gt=_.object({name:_.string().min(1),type:_.string().min(1),members:_.array(_.object({role:_.string().min(1),user:_.object({id:_.string()})}))}),Ce=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=gt.safeParse(e.body);if(!r.success)return t.status(400).json({errors:_.prettifyError(r.error)});let{name:s,type:i,members:n}=r.data;await this.teamRepository.create({name:s,type:i,members:n}),t.status(201).json()}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Eo}from"@asteasolutions/zod-to-openapi";import{z as Ae}from"zod";Eo(Ae);var re=Ae.object({id:Ae.uuid()}),Ue=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=re.safeParse(e.params);if(!r.success)return t.status(400).json({errors:Ae.prettifyError(r.error)});let{id:s}=r.data,i=await this.teamRepository.findById(s);t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as wo}from"@asteasolutions/zod-to-openapi";import{z as oe}from"zod";wo(oe);var ht=oe.object({type:oe.string(),name:oe.string().optional()}),Se=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=ht.safeParse({type:e.params.type,name:e.query.name});if(!r.success)return t.status(400).json({errors:oe.prettifyError?.(r.error)});let{type:s,name:i}=r.data,n=await this.teamRepository.findByType({type:s,filter:{name:i}});t.status(200).json(n)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as bo}from"@asteasolutions/zod-to-openapi";import{z as S}from"zod";bo(S);var It=S.object({id:S.uuid(),name:S.string().min(1),members:S.array(S.object({role:S.string(),id:S.uuid(),user:S.object({id:S.uuid()})}))}),ve=class{constructor(e,t){this.teamRepository=e;this.teamMemberRepository=t}async handle(e,t){try{let r=It.safeParse({id:e.params.id,...e.body});if(!r.success)return t.status(400).json({errors:S.prettifyError(r.error)});let{name:s,members:i,id:n}=r.data,d=await this.teamMemberRepository.findByTeamId(n),u=i.map(g=>g.id),y=d.filter(g=>!u.includes(g.id)).map(g=>g.id);await this.teamMemberRepository.deleteMany(y),await this.teamMemberRepository.updateMany({teamId:n,members:i}),await this.teamRepository.update({id:n,name:s}),t.status(204).json()}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var Ht={method:"post",path:"/team",tags:["Teams"],summary:"Create team",security:[{bearerAuth:[]}],request:{body:{content:{"application/json":{schema:gt}}}},responses:{201:{description:"Team created successfully",summary:"Team Created",content:{"application/json":{schema:p.object({message:p.string()})}}},400:{description:"Invalid input data provided",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Kt={method:"put",path:"/team/{id}",tags:["Teams"],summary:"Update team",security:[{bearerAuth:[]}],request:{params:re,body:{content:{"application/json":{schema:It}}}},responses:{204:{description:"Team updated successfully",summary:"Team Updated"},400:{description:"Invalid input data or team ID format",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Qt={method:"delete",path:"/team/{id}",tags:["Teams"],summary:"Delete team",security:[{bearerAuth:[]}],request:{params:re},responses:{204:{description:"Team deleted successfully",summary:"Team Deleted"},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Gt={method:"get",path:"/team/id/{id}",tags:["Teams"],summary:"Find team by ID",request:{params:re},responses:{200:{description:"Team details retrieved successfully",summary:"Team Retrieved",content:{"application/json":{schema:p.object({type:p.string(),name:p.string(),id:p.string(),createdAt:p.date(),updatedAt:p.date(),description:p.string().nullable()})}}},400:{description:"Invalid team ID format",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},404:{description:"Team not found with the provided ID",summary:"Team Not Found",content:{"application/json":{schema:p.object({message:p.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},Jt={method:"get",path:"/team/type/{type}",tags:["Teams"],summary:"Find teams by type",request:{params:ht.pick({type:!0})},responses:{200:{description:"List of teams by type retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:p.array(p.object({type:p.string(),name:p.string(),id:p.string(),createdAt:p.date(),updatedAt:p.date(),description:p.string().nullable()})).nullable()}}},400:{description:"Invalid team type parameter",summary:"Validation Error",content:{"application/json":{schema:p.object({errors:p.record(p.string(),p.string())})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}},$t={method:"get",path:"/team",tags:["Teams"],summary:"List teams",responses:{200:{description:"Complete list of teams retrieved successfully",summary:"Teams Retrieved",content:{"application/json":{schema:p.array(p.object({type:p.string(),name:p.string(),id:p.string(),createdAt:p.date(),updatedAt:p.date(),description:p.string().nullable()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:p.object({message:p.string()})}}}}};import{$Enums as er}from"@prisma/client";import l from"zod";import{extendZodWithOpenApi as To}from"@asteasolutions/zod-to-openapi";import Et from"zod";To(Et);var wt=Et.object({id:Et.string()}),Ne=class{constructor(e){this.userRepository=e}async handle(e,t){try{let{id:r}=wt.parse({id:e.params.id}),s=await this.userRepository.findById(r);if(!s)return t.status(404).json({message:"O usu\xE1rio n\xE3o existe."});let i=e.user.id;return s.id!==i?t.status(401).json({message:"Voc\xEA n\xE3o tem permiss\xE3o para deletar o usu\xE1rio"}):(await this.userRepository.deleteById(s.id),t.status(204).json())}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as jo}from"@asteasolutions/zod-to-openapi";import{z as xe}from"zod";jo(xe);var bt=xe.object({id:xe.string().min(1,"id do usu\xE1rio n\xE3o fornecido.")}),_e=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=bt.safeParse(e.params);if(!r.success)return t.status(400).json({errors:xe.treeifyError(r.error)});let{id:s}=r.data,i=await this.userRepository.findById(s);if(!i)return t.status(404).json({message:"Usu\xE1rio n\xE3o encontrado"});t.status(200).json(i)}catch(r){console.log(r),r instanceof Error&&t.status(500).json({message:"Erro ao buscar usu\xE1rio"})}}};import{extendZodWithOpenApi as Co}from"@asteasolutions/zod-to-openapi";import P from"zod";var Yt=2,Xt=1024,Ao=Xt*Xt,Uo=Yt*Ao,So=/^\d{4}-\d{4}-\d{4}-\d{4}$/,Oe=/^[^0-9]*$/,vo=/^\(?\d{2}\)?[\s-]?\d{4,5}-?\d{4}$/;Co(P);var Tt=P.object({name:P.string().optional(),lattesUrl:P.string().optional(),orcid:P.string().transform(o=>o.trim()).transform(o=>Oe.test(o)?"":o).refine(o=>Oe.test(o)||So.test(o),{message:"ORCID inv\xE1lido. Deve estar no formato 0000-0000-0000-0000"}),phone:P.string().transform(o=>Oe.test(o)?"":o).refine(o=>Oe.test(o)||vo.test(o),{message:"Telefone inv\xE1lido. Deve estar no formato (99) 99999-9999"}),avatarImage:P.any().refine(o=>o==null?!0:typeof o!="object"||typeof o.size!="number"?!1:o.size<=Uo,`A imagem deve ter no m\xE1ximo ${Yt}MB.`).optional()}),Fe=class{constructor(e,t){this.userRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Tt.safeParse({...e.body,avatarImage:e.file});if(!r.success)return t.status(400).json({errors:P.prettifyError(r.error)});let{avatarImage:s,...i}=r.data,n=e.user.id,d=await this.userRepository.findById(n);if(!d)return t.status(400).json({message:"O usu\xE1rio n\xE3o existe"});let u=d.avatarUrl;return s&&(d.avatarUrl?u=await this.firebaseStorageService.updateFile({file:s,id:n,folder:C.USER,fileUrl:d.avatarUrl}):u=await this.firebaseStorageService.uploadFile({file:s,id:n,folder:C.USER})),await this.userRepository.update({...i,id:n,avatarUrl:u||void 0}),t.status(204).json()}catch(r){if(console.log(r),r instanceof Error)return t.status(500).json({message:r.message})}}};var tr={method:"get",path:"/users/{id}",tags:["Users"],summary:"Find user by ID",request:{params:bt},responses:{200:{description:"User details retrieved successfully",summary:"User Retrieved",content:{"application/json":{schema:l.object({id:l.string(),name:l.string(),createdAt:l.date(),updatedAt:l.date(),role:l.enum(er.UserRole),lattesUrl:l.string().nullable(),orcid:l.string().nullable(),phone:l.string().nullable(),avatarUrl:l.url().nullable(),emailAddress:l.email()})}}},400:{description:"Invalid user ID format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},404:{description:"User not found with the provided ID",summary:"User Not Found",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},rr={method:"put",path:"/users",tags:["Users"],summary:"Update authenticated user",security:[{bearerAuth:[]}],request:{body:{content:{"multipart/form-data":{schema:Tt}}}},responses:{200:{description:"User profile updated successfully",summary:"User Updated",content:{"application/json":{schema:l.object({message:l.string()})}}},400:{description:"Invalid input data or file format",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},or={method:"delete",path:"/users",tags:["Users"],summary:"Delete authenticated user",security:[{bearerAuth:[]}],request:{params:wt},responses:{200:{description:"User account deleted successfully",summary:"User Deleted",content:{"application/json":{schema:l.object({message:l.string()})}}},400:{description:"Invalid request parameters",summary:"Validation Error",content:{"application/json":{schema:l.object({errors:l.record(l.string(),l.string())})}}},401:{description:"User not authenticated or unauthorized",summary:"Authentication Required",content:{"application/json":{schema:l.object({message:l.string()})}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}},sr={method:"get",path:"/users",tags:["Users"],summary:"List users",responses:{200:{description:"Complete list of users retrieved successfully",summary:"Users Retrieved",content:{"application/json":{schema:l.array(l.object({id:l.string(),name:l.string(),createdAt:l.date(),updatedAt:l.date(),role:l.enum(er.UserRole),lattesUrl:l.url().nullable(),orcid:l.string().nullable(),phone:l.string().nullable(),avatarUrl:l.string().nullable(),emailAddress:l.email()}))}}},500:{description:"Internal server error occurred",summary:"Server Error",content:{"application/json":{schema:l.object({message:l.string()})}}}}};var R=new No;R.registerComponent("securitySchemes","bearerAuth",{type:"http",scheme:"bearer",bearerFormat:"JWT"});R.registerPath(Nt);R.registerPath(xt);R.registerPath(_t);R.registerPath(Ot);R.registerPath(Bt);R.registerPath(Ft);R.registerPath(tr);R.registerPath(rr);R.registerPath(or);R.registerPath(sr);R.registerPath(Ht);R.registerPath(Kt);R.registerPath(Qt);R.registerPath(Gt);R.registerPath(Jt);R.registerPath($t);R.registerPath(Vt);R.registerPath(Wt);R.registerPath(zt);R.registerPath(Zt);R.registerPath(Dt);R.registerPath(Pt);R.registerPath(qt);R.registerPath(Mt);R.registerPath(kt);var _o=new xo(R.definitions),ir=_o.generateDocument({openapi:"3.0.0",info:{title:"API da Rede CT",version:"1.0.0",description:"API com valida\xE7\xE3o Zod"}});import{Router as Mo}from"express";import{extendZodWithOpenApi as Oo}from"@asteasolutions/zod-to-openapi";import Be from"zod";Oo(Be);var Fo=Be.object({authenticatedUserId:Be.uuid()}),De=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=Fo.safeParse({authenticatedUserId:e.user.id});if(!r.success)return t.status(400).json({errors:Be.prettifyError(r.error)});let s=await this.userRepository.findById(r.data.authenticatedUserId);return s?t.status(200).json(s):t.status(404).json({message:"Usu\xE1rio n\xE3o encontrado."})}catch(r){r instanceof Error&&t.status(500).json({message:r.message})}}};import{PrismaClient as Bo}from"@prisma/client";var I=new Bo({log:["query"]});var Pe=class{constructor(e){this.prisma=e}async register({userId:e,title:t,description:r,certificationUrl:s}){await this.prisma.certification.create({data:{title:t,description:r,certificationUrl:s,user:{connect:{id:e}}}})}async find({pagination:{limit:e,offset:t},filter:{description:r,orderBy:s,title:i}}){let n={};i&&(n.title={contains:i,mode:"insensitive"});let d=[];return r&&d.push({description:{contains:r,mode:"insensitive"}}),d.length>0&&(n.OR=d),await this.prisma.certification.findMany({where:n,include:{user:{omit:{passwordHash:!0}}},skip:t,take:e,orderBy:{updatedAt:s}})}async findById(e){return await this.prisma.certification.findFirst({where:{id:e}})}async findByUserId({pagination:{limit:e,offset:t},filter:{description:r,orderBy:s,title:i},userId:n}){let d={userId:n},u=[];return i&&u.push({title:{contains:i,mode:"insensitive"}}),r&&u.push({description:{contains:r,mode:"insensitive"}}),u.length>0&&(d.OR=u),await this.prisma.certification.findMany({where:d,include:{user:{omit:{passwordHash:!0}}},skip:t,take:e,orderBy:{updatedAt:s}})}async update({id:e,...t}){await this.prisma.certification.update({where:{id:e},data:t})}async deleteById(e){await this.prisma.certification.delete({where:{id:e}})}async count({filter:{description:e,title:t,userId:r}}){let s={};t&&(s.title={contains:t,mode:"insensitive"});let i=[];return e&&i.push({description:{contains:e,mode:"insensitive"}}),r&&i.push({userId:r}),i.length>0&&(s.OR=i),await this.prisma.certification.count({where:s})}};function q(){return new Pe(I)}var qe=class{constructor(e){this.prisma=e}async create({authorId:e,...t}){return await this.prisma.news.create({data:{...t,author:{connect:{id:e}}}})}async find({pagination:{offset:e,limit:t},filter:{authorId:r,content:s,title:i,orderBy:n="desc"}}){let d={};r&&(d.authorId={contains:r,mode:"insensitive"});let u=[];return i&&u.push({title:{contains:i,mode:"insensitive"}}),s&&u.push({content:{contains:s,mode:"insensitive"}}),u.length>0&&(d.OR=u),await this.prisma.news.findMany({where:d,omit:{authorId:!0},include:{author:!0},orderBy:{updatedAt:n},skip:e,take:t})}async findById(e){return await this.prisma.news.findUnique({where:{id:e},omit:{authorId:!0},include:{author:!0}})}async findByAuthorId({authorId:e,pagination:{offset:t,limit:r},filter:{orderBy:s="desc",content:i,title:n}}){let d={authorId:e},u=[];return n&&u.push({title:{contains:n,mode:"insensitive"}}),i&&u.push({content:{contains:i,mode:"insensitive"}}),u.length>0&&(d.OR=u),await this.prisma.news.findMany({omit:{authorId:!0},where:d,orderBy:{updatedAt:s},skip:t,take:r})}async update(e){return await this.prisma.news.update({where:{id:e.id},data:{title:e.title,content:e.content,imageUrl:e.imageUrl}})}async delete(e){await this.prisma.news.delete({where:{id:e}})}async count({filter:{authorId:e,content:t,title:r}}){let s={};e&&(s.authorId={contains:e,mode:"insensitive"});let i=[];return r&&i.push({title:{contains:r,mode:"insensitive"}}),t&&i.push({content:{contains:t,mode:"insensitive"}}),i.length>0&&(s.OR=i),await this.prisma.news.count({where:s})}};function B(){return new qe(I)}var Me=class{constructor(e){this.prisma=e}async create(e){await this.prisma.user.create({data:e})}async update(e){await this.prisma.user.update({where:{id:e.id},data:e})}async deleteById(e){await this.prisma.user.delete({where:{id:e}})}async find(){return await this.prisma.user.findMany({omit:{passwordHash:!0}})}async findByEmail(e){return await this.prisma.user.findFirst({where:{emailAddress:e}})}async findById(e){return await this.prisma.user.findFirst({where:{id:e},omit:{passwordHash:!0}})}};function E(){return new Me(I)}import{compare as Do,hash as Po}from"bcryptjs";var ke=class{constructor(e,t){this.hashFn=e;this.compareFn=t}async hash(e){return await this.hashFn(e,6)}async compare({password:e,hashedPassword:t}){return await this.compareFn(e,t)}};function jt(){return new ke(Po,Do)}import ar from"jsonwebtoken";import w from"zod";var qo=w.object({JWT_SECRET:w.string(),FIREBASE_BUCKET:w.string(),FIREBASE_CLIENT_EMAIL:w.string(),FIREBASE_PRIVATE_KEY:w.string(),FIREBASE_PROJECT_ID:w.string(),FIREBASE_TYPE:w.string(),FIREBASE_PRIVATE_KEY_ID:w.string(),FIREBASE_CLIENT_ID:w.string(),FIREBASE_AUTH_URI:w.string(),FIREBASE_TOKEN_URI:w.string(),FIREBASE_AUTH_PROVIDER_X509_CERT_URL:w.string(),FIREBASE_CLIENT_X509_CERT_URL:w.string()}),h=qo.parse(process.env);var Le=class{constructor(e,t){this.signFn=e;this.verifyFn=t}sign(e){try{return this.signFn(e,h.JWT_SECRET,{expiresIn:"3d",subject:e.id})}catch{return null}}verify(e){try{return this.verifyFn(e,h.JWT_SECRET)}catch{return null}}};function Ve(){return new Le(ar.sign,ar.verify)}function nr(){return{signUpController:new me(E(),jt())}}function cr(){return{signInController:new ne(E(),jt(),Ve())}}function mr(){return{findAuthenticatedUserController:new De(E())}}function pr(){return{findAuthenticatedUserController:new ae(B())}}function ur(){return{findAuthenticatedUserCertificationsController:new ie(q())}}var We=class{constructor(e){this.jwtService=e}authenticated(e,t,r){let s=e.headers.authorization;if(!(s||s?.startsWith("Bearer ")))return t.status(401).json({message:"Token inv\xE1lido."});let i=s.split(" ")[1];if(!i)return t.status(401).json({message:"Token n\xE3o fornecido."});try{let n=this.jwtService.verify(i);if(!n)return t.status(401).json({message:"Token inv\xE1lido."});e.user=n,r()}catch(n){if(console.log(n),n instanceof Error)return t.status(401).json({message:n.message})}}isAdmin(e,t,r){let s=e.headers.authorization;if(!(s||s?.startsWith("Bearer ")))return t.status(401).json({message:"Token inv\xE1lido."});let i=s.split(" ")[1];if(!i)return t.status(401).json({message:"Token n\xE3o fornecido."});try{let n=this.jwtService.verify(i);if(!n)return t.status(401).json({message:"Token inv\xE1lido."});if(n.role!=="ADMIN")return t.status(401).json({message:"\xC9 necess\xE1rio ter permiss\xF5es de administrador."});r()}catch(n){if(console.log(n),n instanceof Error)return t.status(401).json({message:n.message})}}};function T(){return{authMiddleware:new We(Ve())}}var M=Mo(),{authMiddleware:ze}=T();M.post("/sign-up",async(o,e)=>{let{signUpController:t}=nr();await t.handle(o,e)});M.post("/sign-in",async(o,e)=>{let{signInController:t}=cr();await t.handle(o,e)});M.get("/user",(o,e,t)=>{ze.authenticated(o,e,t)},async(o,e)=>{let{findAuthenticatedUserController:t}=mr();await t.handle(o,e)});M.get("/user/news",(o,e,t)=>{ze.authenticated(o,e,t)},async(o,e)=>{let{findAuthenticatedUserController:t}=pr();await t.handle(o,e)});M.get("/admin",(o,e,t)=>{ze.isAdmin(o,e,t)},(o,e)=>{try{e.status(200).json({success:!0})}catch(t){t instanceof Error&&e.status(500).json({message:t.message})}});M.get("/certifications",(o,e,t)=>{ze.authenticated(o,e,t)},async(o,e)=>{let{findAuthenticatedUserCertificationsController:t}=ur();await t.handle(o,e)});import{Router as Zo}from"express";import{getStorage as Lo}from"firebase-admin/storage";import{config as ko}from"dotenv";import dr from"firebase-admin";ko();var Ct=dr.initializeApp({credential:dr.credential.cert({clientEmail:h.FIREBASE_CLIENT_EMAIL,privateKey:h.FIREBASE_PRIVATE_KEY,projectId:h.FIREBASE_PROJECT_ID,type:h.FIREBASE_TYPE,privateKeyId:h.FIREBASE_PRIVATE_KEY_ID,clientId:h.FIREBASE_CLIENT_ID,authUri:h.FIREBASE_AUTH_URI,tokenUri:h.FIREBASE_TOKEN_URI,authProviderX509CertUrl:h.FIREBASE_AUTH_PROVIDER_X509_CERT_URL,clientX509CertUrl:h.FIREBASE_CLIENT_X509_CERT_URL}),storageBucket:h.FIREBASE_BUCKET});Ct.name?console.log("\u{1F525} Firebase conectado com sucesso!"):console.error("\u274C Erro ao se conectar ao Firebase.");var Vo=Lo(Ct),lr=Vo.bucket(h.FIREBASE_BUCKET);import{randomUUID as Wo}from"node:crypto";var zo=/https:\/\/storage\.googleapis\.com\/[^/]+\/(.+)$/,Ze=class{constructor(e){this.bucket=e}async uploadFile({file:e,folder:t,id:r}){let s=`${Wo()}-${e?.originalname}`,i=this.bucket.file(`${t}/${r}/${s}`);return await new Promise((n,d)=>{let u=i.createWriteStream({metadata:{contentType:e?.mimetype}});u.on("error",y=>{console.log(y),d(y)}),u.on("finish",async()=>{try{await i.makePublic();let y=`https://storage.googleapis.com/${this.bucket.name}/${i.name}`;n(y)}catch(y){console.error(y),d(y)}}),u.end(e.buffer)})}async updateFile({file:e,id:t,fileUrl:r,folder:s}){try{let i=this.getPath(r);if(!i)throw new Error("Arquivo n\xE3o encontrado.");let[n,d]=await Promise.all([this.bucket.file(i).delete(),this.uploadFile({file:e,id:t,folder:s})]);return d}catch(i){throw console.error(i),new Error("Erro ao atualizar o arquivo.")}}async deleteFile({fileUrl:e}){let t=this.getPath(e);if(!t)throw new Error("Arquivo n\xE3o encontrado.");try{await this.bucket.file(t).delete()}catch(r){throw console.error(r),new Error("Erro ao deletar o arquivo.")}}getPath(e){let t=e.match(zo);return t?t[1]:null}};function O(){return new Ze(lr)}function fr(){return{registerCertificationController:new ye(E(),q(),O())}}function yr(){return{findCertificationsController:new fe(q())}}function Rr(){return{findCertificationByIdController:new le(q())}}function gr(){return{updateCertificationController:new ge(q(),O())}}function hr(){return{deleteCertificationController:new ue(q(),O())}}import Ir from"multer";var k=Ir({storage:Ir.memoryStorage()});var Q=Zo(),{authMiddleware:se}=T();Q.post("/:user_id",(o,e,t)=>{se.isAdmin(o,e,t)},k.single("certification"),async(o,e)=>{let{registerCertificationController:t}=fr();await t.handle(o,e)});Q.get("/",(o,e,t)=>{se.isAdmin(o,e,t)},async(o,e)=>{let{findCertificationsController:t}=yr();await t.handle(o,e)});Q.get("/:certification_id",(o,e,t)=>{se.isAdmin(o,e,t)},async(o,e)=>{let{findCertificationByIdController:t}=Rr();await t.handle(o,e)});Q.put("/:certification_id",(o,e,t)=>{se.isAdmin(o,e,t)},k.single("certification"),async(o,e)=>{let{updateCertificationController:t}=gr();await t.handle(o,e)});Q.delete("/:certification_id",(o,e,t)=>{se.isAdmin(o,e,t)},async(o,e)=>{let{deleteCertificationController:t}=hr();await t.handle(o,e)});import{Router as Ho}from"express";var At=Ho();At.get("/",(o,e)=>{e.status(200).json({message:"Rede CT"})});import{Router as es}from"express";import{extendZodWithOpenApi as Ko}from"@asteasolutions/zod-to-openapi";import He from"zod";Ko(He);var Qo=He.object({id:He.string()}),Ke=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Qo.safeParse(e.params);if(!r.success)return t.status(400).json({errors:He.prettifyError(r.error)});let{id:s}=r.data,i=e.user.id,n=await this.newsRepository.findById(s);if(!n)return t.status(404).json({message:"Not\xEDcia n\xE3o encontrada."});if(n.author.id!==i)return t.status(401).json({message:"Sem permiss\xE3o."});await Promise.all([this.newsRepository.delete(s),this.firebaseStorageService.deleteFile({fileUrl:n.imageUrl})]),t.status(200).json({message:"Not\xEDcia deletada com sucesso."})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as Go}from"@asteasolutions/zod-to-openapi";import G from"zod";var Jo=5,Er=1024,$o=Er*Er,Xo=Jo*$o;Go(G);var Yo=G.object({id:G.string(),title:G.string().min(1),content:G.string().min(1),image:G.any().optional().refine(o=>!o||typeof o=="object"&&typeof o.mimetype=="string"&&o.mimetype.startsWith("image/")&&typeof o.size=="number"&&o.size<=Xo,{message:"A imagem deve ser uma imagem v\xE1lida de no m\xE1ximo 5MB."})}),Qe=class{constructor(e,t){this.newsRepository=e;this.firebaseStorageService=t}async handle(e,t){try{let r=Yo.safeParse({id:e.params.id,title:e.body.title,content:e.body.content,image:e.file});if(!r.success)return t.status(400).json({errors:G.prettifyError(r.error)});let{id:s,title:i,content:n,image:d}=r.data,u=await this.newsRepository.findById(s);if(!u)return t.status(404).json({message:"Not\xEDcia n\xE3o encontrada."});let y=e.user.id;if(u.author.id!==y)return t.status(401).json({message:"Sem permiss\xE3o."});let g=u.imageUrl||"";d&&u.imageUrl&&(g=await this.firebaseStorageService.updateFile({file:d,folder:C.NEWS,id:s,fileUrl:u.imageUrl}));let j=await this.newsRepository.update({id:s,title:i,content:n,imageUrl:g});t.status(200).json(j)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};function wr(){return{createNewsController:new Ie(B(),O())}}function br(){return{findAllNewsController:new je(B())}}function Tr(){return{findNewsByIdController:new Te(B())}}function jr(){return{findNewsByAuthorIdController:new Ee(B())}}function Cr(){return{updateNewsController:new Qe(B(),O())}}function Ar(){return{deleteNewsController:new Ke(B(),O())}}var L=es(),{authMiddleware:Ut}=T();L.post("/",(o,e,t)=>{Ut.authenticated(o,e,t)},k.single("image"),async(o,e)=>{let{createNewsController:t}=wr();await t.handle(o,e)});L.get("/",async(o,e)=>{let{findAllNewsController:t}=br();await t.handle(o,e)});L.get("/:id",async(o,e)=>{let{findNewsByIdController:t}=Tr();await t.handle(o,e)});L.get("/author/:authorId",async(o,e)=>{let{findNewsByAuthorIdController:t}=jr();await t.handle(o,e)});L.put("/:id",(o,e,t)=>{Ut.authenticated(o,e,t)},k.single("image"),async(o,e)=>{let{updateNewsController:t}=Cr();await t.handle(o,e)});L.delete("/:id",(o,e,t)=>{Ut.authenticated(o,e,t)},async(o,e)=>{let{deleteNewsController:t}=Ar();await t.handle(o,e)});import{Router as ms}from"express";import{extendZodWithOpenApi as ts}from"@asteasolutions/zod-to-openapi";import V from"zod";ts(V);var rs=V.object({teamId:V.uuid(),member:V.object({userId:V.uuid(),role:V.string(),description:V.string()})}),Ge=class{constructor(e,t){this.teamMemberRepository=e;this.userRepository=t}async handle(e,t){try{let r=rs.safeParse({...e.body,teamId:e.params.teamId});if(!r.success)return t.status(400).json({errors:V.prettifyError(r.error)});let{teamId:s,member:{userId:i,...n}}=r.data;if(!await this.userRepository.findById(i))return t.status(404).json({message:"O usu\xE1rio n\xE3o existe."});let u=await this.teamMemberRepository.create({...n,userId:i,teamId:s});t.status(201).json(u)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as os}from"@asteasolutions/zod-to-openapi";import{z as Je}from"zod";os(Je);var ss=Je.object({id:Je.uuid()}),$e=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=ss.safeParse(e.params);if(!r.success)return t.status(400).json({errors:Je.prettifyError(r.error)});let{id:s}=r.data;await this.teamMemberRepository.delete(s),t.status(200).json({message:"Membro removido com sucesso"})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};import{extendZodWithOpenApi as is}from"@asteasolutions/zod-to-openapi";import{z as Xe}from"zod";is(Xe);var as=Xe.object({id:Xe.uuid()}),Ye=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=as.safeParse(e.params);if(!r.success)return t.status(400).json({errors:Xe.prettifyError(r.error)});let{id:s}=r.data,i=await this.teamMemberRepository.findById(s);if(!i)return t.status(404).json({message:"Membro n\xE3o encontrado."});t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(400).json({message:r.message})}}};import{extendZodWithOpenApi as ns}from"@asteasolutions/zod-to-openapi";import{z as J}from"zod";ns(J);var cs=J.object({id:J.uuid(),role:J.string(),userId:J.string(),description:J.string()}),et=class{constructor(e){this.teamMemberRepository=e}async handle(e,t){try{let r=cs.safeParse(e.body);if(!r.success)return t.status(400).json({errors:J.prettifyError(r.error)});let s=r.data,i=await this.teamMemberRepository.update(s);t.status(200).json(i)}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var D=class{constructor(e){this.prisma=e}async findById(e){return await this.prisma.teamMember.findFirst({where:{id:e}})}async findByTeamId(e){return await this.prisma.teamMember.findMany({where:{teamId:e}})}async create({description:e,role:t,teamId:r,userId:s}){return await this.prisma.teamMember.create({data:{role:t,description:e,teamId:r,userId:s}})}async update({id:e,...t}){return await this.prisma.teamMember.update({where:{id:e},data:t})}async updateMany({members:e,teamId:t}){await Promise.all(e.map(async({user:r,role:s})=>{let i=await this.prisma.teamMember.findFirst({where:{teamId:t,userId:r.id},include:{user:!0}});i?await this.prisma.teamMember.update({where:{id:i.id},data:{role:s}}):await this.prisma.teamMember.create({data:{teamId:t,userId:r.id,role:s}})}))}async delete(e){await this.prisma.teamMember.deleteMany({where:{id:e}})}async deleteMany(e){await Promise.all(e.map(async t=>{await this.prisma.teamMember.delete({where:{id:t}})}))}};function Ur(){return{createTeamMemberController:new Ge(new D(I),E())}}function Sr(){return{findTeamMemberController:new Ye(new D(I))}}function vr(){return{updateTeamMemberController:new et(new D(I))}}function Nr(){return{deleteTeamMemberController:new $e(new D(I))}}var Y=ms(),{authMiddleware:tt}=T();Y.post("/:teamId/member",(o,e,t)=>{tt.isAdmin(o,e,t)},async(o,e)=>{let{createTeamMemberController:t}=Ur();await t.handle(o,e)});Y.get("/member/:id",(o,e,t)=>{tt.isAdmin(o,e,t)},async(o,e)=>{let{findTeamMemberController:t}=Sr();await t.handle(o,e)});Y.put("/member/:id",(o,e,t)=>{tt.isAdmin(o,e,t)},async(o,e)=>{let{updateTeamMemberController:t}=vr();await t.handle(o,e)});Y.delete("/member/:id",(o,e,t)=>{tt.isAdmin(o,e,t)},async(o,e)=>{let{deleteTeamMemberController:t}=Nr();await t.handle(o,e)});import{Router as ds}from"express";import{extendZodWithOpenApi as ps}from"@asteasolutions/zod-to-openapi";import{z as rt}from"zod";ps(rt);var us=rt.object({id:rt.uuid()}),ot=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=us.safeParse(e.params);if(!r.success)return t.status(400).json({errors:rt.prettifyError(r.error)});let{id:s}=r.data;await this.teamRepository.delete(s),t.status(200).json({message:"Equipe deletada com sucesso"})}catch(r){console.error(r),r instanceof Error&&t.status(500).json({message:r.message})}}};var st=class{constructor(e){this.teamRepository=e}async handle(e,t){try{let r=await this.teamRepository.findAll();return t.status(200).json(r)}catch(r){if(console.error(r),r instanceof Error)return t.status(500).json({message:r.message})}}};var it=class{constructor(e){this.prisma=e}async create({members:e,name:t,type:r}){return await this.prisma.team.create({data:{name:t,type:r,members:{create:e.map(({role:s,user:i})=>({role:s,user:{connect:{id:i.id}}}))}}})}async findAll(){return await this.prisma.team.findMany({include:{members:{include:{user:!0}}}})}async findById(e){return await this.prisma.team.findUnique({where:{id:e},include:{members:{include:{user:!0}}}})}async findByType({type:e,filter:{name:t}}){let r={type:e};return t&&(r.name={contains:t,mode:"insensitive"}),await this.prisma.team.findMany({where:r,include:{members:{include:{user:!0}}}})}async update({id:e,name:t}){return await this.prisma.team.update({where:{id:e},data:{name:t}})}async delete(e){await this.prisma.team.delete({where:{id:e}})}};function $(){return new it(I)}function xr(){return new D(I)}function _r(){return{findTeamsController:new st($())}}function Or(){return{findTeamByIdController:new Ue($())}}function Fr(){return{findTeamByTypeController:new Se($())}}function Br(){return{createTeamController:new Ce($())}}function Dr(){return{updateTeamController:new ve($(),xr())}}function Pr(){return{deleteTeamController:new ot($())}}var W=ds(),{authMiddleware:St}=T();W.get("/",async(o,e)=>{let{findTeamsController:t}=_r();await t.handle(o,e)});W.get("/id/:id",async(o,e)=>{let{findTeamByIdController:t}=Or();await t.handle(o,e)});W.get("/type/:type",async(o,e)=>{let{findTeamByTypeController:t}=Fr();await t.handle(o,e)});W.post("/",(o,e,t)=>{St.isAdmin(o,e,t)},async(o,e)=>{let{createTeamController:t}=Br();await t.handle(o,e)});W.put("/:id",(o,e,t)=>{St.isAdmin(o,e,t)},async(o,e)=>{let{updateTeamController:t}=Dr();await t.handle(o,e)});W.delete("/:id",(o,e,t)=>{St.isAdmin(o,e,t)},async(o,e)=>{let{deleteTeamController:t}=Pr();await t.handle(o,e)});import{Router as ls}from"express";var at=class{constructor(e){this.userRepository=e}async handle(e,t){try{let r=await this.userRepository.find();t.status(200).json(r)}catch(r){console.log(r),r instanceof Error&&t.status(500).json({message:"Erro ao buscar usu\xE1rios"})}}};function qr(){return{updateUserController:new Fe(E(),O())}}function Mr(){return{deleteUserController:new Ne(E())}}function kr(){return{findUsersController:new at(E())}}function Lr(){return{findUserController:new _e(E())}}var ee=ls(),{authMiddleware:Vr}=T();ee.get("/:id",async(o,e)=>{let{findUserController:t}=Lr();await t.handle(o,e)});ee.put("/",(o,e,t)=>{Vr.authenticated(o,e,t)},k.single("avatarImage"),async(o,e)=>{let{updateUserController:t}=qr();await t.handle(o,e)});ee.delete("/:id",(o,e,t)=>{Vr.authenticated(o,e,t)},async(o,e)=>{let{deleteUserController:t}=Mr();await t.handle(o,e)});ee.get("/",async(o,e)=>{let{findUsersController:t}=kr();await t.handle(o,e)});var b=vt(),Rs={methods:["GET","POST","PUT","DELETE"],origin:["http://localhost:3000","https://rede-ct.vercel.app"],credentials:!0};b.use(ys(Rs));b.use(vt.json());b.use(vt.urlencoded({extended:!1}));b.use("/docs",fs({content:ir,theme:"kepler"}));b.use("/",At);b.use("/auth",M);b.use("/user",ee);b.use("/news",L);b.use("/team",W);b.use("/team",Y);b.use("/certification",Q);var hs=gs.createServer(b),Wr=4e3;hs.listen(Wr,()=>{console.log(`\u{1F680} Aplica\xE7\xE3o rodando na porta ${Wr}.`)});
